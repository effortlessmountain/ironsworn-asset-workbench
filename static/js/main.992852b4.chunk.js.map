{"version":3,"sources":["models/models.ts","SidePanel/LabeledInputs.tsx","SidePanel/DetailsEditor/views/AbilitiesView.tsx","SidePanel/DetailsEditor/views/TopView.tsx","SidePanel/DetailsEditor/views/TrackView.tsx","models/assetStyles.ts","SidePanel/DetailsEditor/views/FontsView.tsx","SidePanel/DetailsEditor/DetailsEditor.tsx","SidePanel/SidePanel.tsx","exampleAssets.ts","assetScaling.ts","Asset/Asset.tsx","SidePanel/Download.tsx","AssetSelection.tsx","App.tsx","index.tsx"],"names":["extractPropertyValue","key","svgString","regexp","RegExp","match","transformSvgString","d","fill","fillOpacity","viewBox","transformToLatest","schema","documentFormatVersion","v1","v2","type","name","writeIn","track","description","abilities","fonts","assetTypeFontSize","assetTypeFont","assetNameFontSize","assetNameFont","detailsFontSize","detailsFont","trackFontSize","trackFont","icon","author","svg","transformToV2","LabeledTextInput","props","className","label","value","onChange","handleChange","LabeledTextAreaInput","LabeledCheckBox","checked","LabeledNumberInput","console","log","id","step","min","max","e","currentTarget","AbilityInput","ability","updateAbility","filled","onClick","removeAbility","text","AbilitiesView","index","this","currentAsset","setCurrentAsset","splice","push","map","changed","addAbility","React","Component","TopView","href","target","rel","htmlFor","defaultValue","handleIconImport","LabeledRadioInput","TrackView","clone","cloneDeep","handleTrackTypeChange","Array","isArray","handleNumericalTrackChange","join","values","split","val","trim","defaultFontConfig","makeMergedConfig","config","merged","Object","assign","FontInputs","font","handleFontChange","idPrefix","em","size","replace","handleSizeChange","FontsView","configuredFonts","useState","updateFonts","setFontProperty","newFonts","setSizeProperty","ViewSwitchButton","classes","view","activeView","handleClick","children","ViewSwitcher","switchView","DetailsEditor","state","editorJSON","errorText","setState","json","JSON","parse","error","toString","iconFileInput","document","querySelector","iconAuthorInput","file","files","fileReader","FileReader","onload","result","slice","readAsText","alert","asset","spellCheck","stringify","handleJSONChange","resetEditorJson","previewAssetImage","downloadAssetImage","SidePanel","handleAssetScaleChange","assetScale","showScreen","ironclad","lightbearer","caveLion","scaleRatio","WriteIn","Description","Ability","dangerouslySetInnerHTML","__html","TrackValue","xmlns","version","preserveAspectRatio","height","scale","width","x1","y1","x2","y2","stroke","style","strokeWidth","Track","innerEntries","entry","trackLength","i","Icon","AssetStyles","fontConfig","googleFonts","urlifiedFonts","from","Set","filter","createGoogleFontString","Asset","Download","canvas","link","createElement","toDataURL","download","body","appendChild","click","removeChild","window","scrollTo","render","html2canvas","firstChild","allowTaint","then","preview","src","alt","goBackToMain","saveImage","AssetChoice","transformedAsset","AssetSelection","localAsset","chooseAsset","App","startingAsset","startingScale","innerHeight","currentScreen","previewDownload","maybeAsset","localStorage","getItem","newScale","setItem","screen","getLocalAsset","ReactDOM"],"mappings":"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","file":"static/js/main.992852b4.chunk.js","sourcesContent":["export type SvgIconV1 = {\r\n    type: \"svg\",\r\n    author: string,\r\n    name: string,\r\n    svg: string\r\n}\r\n\r\nexport type SvgProperties = {\r\n    d: string,\r\n    fill: string,\r\n    fillOpacity: string,\r\n    viewBox: string\r\n}\r\n\r\nexport type SvgIcon = {\r\n    type: \"svg\",\r\n    author: string,\r\n    name: string,\r\n    svg: SvgProperties\r\n}\r\n\r\nexport type Ability = {\r\n    filled: boolean,\r\n    name?: string,\r\n    text: string\r\n}\r\n\r\nexport type AssetDocumentV1 = {\r\n    documentFormatVersion?: number,\r\n    fonts?: {\r\n        assetTypeFontSize?: string,\r\n        assetTypeFont?: string,\r\n        assetNameFontSize?: string,\r\n        assetNameFont?: string,\r\n        detailsFontSize?: string,\r\n        detailsFont?: string,\r\n        trackFontSize?: string,\r\n        trackFont?: string,\r\n    },\r\n    type: string,\r\n    name: string,\r\n    writeIn?: string,\r\n    track?: number | string[],\r\n    description: string,\r\n    abilities: Array<{ filled: boolean, name?: string, text: string }>,\r\n    icon?: string | SvgIconV1\r\n}\r\n\r\n\r\nexport interface AssetDocument {\r\n    documentFormatVersion: number,\r\n    fonts?: {\r\n        assetTypeFontSize?: string,\r\n        assetTypeFont?: string,\r\n        assetNameFontSize?: string,\r\n        assetNameFont?: string,\r\n        detailsFontSize?: string,\r\n        detailsFont?: string,\r\n        trackFontSize?: string,\r\n        trackFont?: string,\r\n    },\r\n    type: string,\r\n    name: string,\r\n    writeIn?: string,\r\n    track?: number | string[],\r\n    description: string,\r\n    abilities: Array<Ability>,\r\n    icon?: string | SvgIcon\r\n}\r\n\r\nexport type UnspecifiedAssetDocument = AssetDocumentV1 | AssetDocument\r\n\r\nconst extractPropertyValue = (key, svgString) => {\r\n    const regexp = new RegExp(`${key}=(?:\"|')(.*?)(?:\"|')`)\r\n    return (svgString.match(regexp) || [])[1]\r\n    //TODO: intelligent error here?\r\n}\r\n\r\nexport function transformSvgString(svgString: string): SvgProperties {\r\n    return {\r\n        d: extractPropertyValue(\"d\", svgString),\r\n        fill: extractPropertyValue(\"fill\", svgString),\r\n        fillOpacity: extractPropertyValue(\"opacity\", svgString),\r\n        viewBox: extractPropertyValue(\"viewBox\", svgString)\r\n    }\r\n}\r\n\r\nfunction transformToV2(v1: AssetDocumentV1): AssetDocument {\r\n    const v2: AssetDocument = {\r\n        documentFormatVersion: 2,\r\n        type: v1.type,\r\n        name: v1.name,\r\n        writeIn: v1.writeIn,\r\n        track: v1.track,\r\n        description: v1.description,\r\n        abilities: v1.abilities,\r\n    }\r\n    if (typeof v1.fonts === \"object\") {\r\n        v2.fonts = {\r\n            assetTypeFontSize: v1.fonts.assetTypeFontSize,\r\n            assetTypeFont: v1.fonts.assetTypeFont,\r\n            assetNameFontSize: v1.fonts.assetNameFontSize,\r\n            assetNameFont: v1.fonts.assetNameFont,\r\n            detailsFontSize: v1.fonts.detailsFontSize,\r\n            detailsFont: v1.fonts.detailsFont,\r\n            trackFontSize: v1.fonts.trackFontSize,\r\n            trackFont: v1.fonts.trackFont,\r\n        }\r\n    }\r\n    if (typeof v1.icon === \"string\") {\r\n        v2.icon = v1.icon\r\n    } else if (typeof v1.icon === \"object\") {\r\n        v2.icon = {\r\n            type: \"svg\",\r\n            author: v1.icon.author,\r\n            name: v1.icon.name,\r\n            svg: transformSvgString(v1.icon.svg)\r\n        }\r\n\r\n    }\r\n    return v2\r\n}\r\n\r\nexport function transformToLatest(schema: UnspecifiedAssetDocument): AssetDocument {\r\n    if (!schema.documentFormatVersion) {\r\n        return transformToV2(schema as AssetDocumentV1)\r\n    }\r\n    else if (schema.documentFormatVersion === 2) {\r\n        return schema as AssetDocument\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\nexport function LabeledTextInput(props: {\r\n    label: string,\r\n    value: string,\r\n    className: string,\r\n    handleChange(e): void\r\n}) {\r\n    return (\r\n        <div className=\"text-input\">\r\n            <label>{props.label}</label>\r\n            <input type=\"text\" className={props.className} value={props.value} onChange={props.handleChange}></input>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport function LabeledTextAreaInput(props: {\r\n    label: string,\r\n    value: string,\r\n    className: string,\r\n    handleChange(e): void\r\n}) {\r\n    return (\r\n        <div className=\"text-input\">\r\n            <label>{props.label}</label>\r\n            <textarea className={props.className} value={props.value} onChange={props.handleChange}></textarea>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport function LabeledCheckBox(props: {\r\n    label: string,\r\n    value: boolean,\r\n    className: string,\r\n    handleChange(e): void\r\n}) {\r\n    return (\r\n        <div className=\"checkbox-input\">\r\n            <label>{props.label}</label>\r\n            <input type=\"checkbox\" className={props.className} checked={props.value} onChange={props.handleChange}></input>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport function LabeledNumberInput(props: {\r\n    label: string,\r\n    value: number,\r\n    step: string,\r\n    id: string,\r\n    handleChange(value: number)\r\n}) {\r\n\r\n    const MAX = 100;\r\n\r\n    //number inputs have lots of quirks. Definitely incentive to use a component library.\r\n    const makeHandleChange = (handleChange: (value: number) => void) => {\r\n        return (e) => {\r\n            let value = +e.currentTarget.value\r\n            if (value > MAX) {\r\n                value = MAX\r\n            }\r\n            handleChange(value)\r\n        }\r\n    }\r\n\r\n    console.log(\"value is \", props.value)\r\n\r\n    return (<div className=\"number-input\">\r\n        <label>{props.label}</label>\r\n        <input type=\"number\"\r\n            id={props.id}\r\n            // displaying a non-deletable zero that pads the left is wonky, so '' is preferable here\r\n            value={+props.value || ''}\r\n            step={props.step}\r\n            min=\"0\"\r\n            max={MAX}\r\n            onChange={makeHandleChange(props.handleChange)}></input>\r\n    </div>);\r\n}","import React from 'react';\r\nimport { AssetDocument, Ability } from '../../../models/models';\r\nimport { LabeledTextInput, LabeledCheckBox, LabeledTextAreaInput } from '../../LabeledInputs';\r\n\r\ntype AbilitiesViewProps = {\r\n    currentAsset: AssetDocument;\r\n    setCurrentAsset(asset): void;\r\n};\r\n\r\nfunction AbilityInput(props: {\r\n    ability: Ability,\r\n    updateAbility(value): void,\r\n    removeAbility(ability): void\r\n}) {\r\n    return (\r\n        <div className=\"ability-input\">\r\n            <div className=\"ability-input-top\">\r\n                <div className=\"ability-input-top-fields\">\r\n                    <LabeledTextInput label=\"Name (optional)\" className=\"ability-name-input\" value={props.ability.name || \"\"} handleChange={(e) => {\r\n                        props.ability.name = e.currentTarget.value\r\n                        props.updateAbility(props.ability)\r\n                    }}></LabeledTextInput>\r\n                    <LabeledCheckBox label=\"Filled\" className=\"ability-filled-input\" value={props.ability.filled || false} handleChange={(e) => {\r\n                        props.ability.filled = !props.ability.filled\r\n                        props.updateAbility(props.ability)\r\n                    }}></LabeledCheckBox>\r\n                </div>\r\n                <button className=\"ability-button remove-ability\" onClick={() => props.removeAbility(props.ability)}>remove</button>\r\n            </div>\r\n            <LabeledTextAreaInput label=\"Ability Text\" className=\"ability-text-input\" value={props.ability.text || \"\"} handleChange={(e) => {\r\n                props.ability.text = e.currentTarget.value\r\n                props.updateAbility(props.ability)\r\n            }}></LabeledTextAreaInput>\r\n        </div>\r\n    )\r\n}\r\nexport class AbilitiesView extends React.Component<AbilitiesViewProps> {\r\n    updateAbility(ability, index) {\r\n        this.props.currentAsset.abilities[index] = ability;\r\n        this.props.setCurrentAsset(this.props.currentAsset);\r\n    }\r\n    removeAbility(index) {\r\n        this.props.currentAsset.abilities.splice(index, 1);\r\n        this.props.setCurrentAsset(this.props.currentAsset);\r\n    }\r\n    addAbility() {\r\n        this.props.currentAsset.abilities.push({\r\n            filled: false,\r\n            name: \"\",\r\n            text: \"\"\r\n        });\r\n        this.props.setCurrentAsset(this.props.currentAsset);\r\n    }\r\n    render() {\r\n        return (<div className=\"editor-view\">\r\n            <div className=\"vertical\">\r\n                {this.props.currentAsset.abilities.map((ability, index) => {\r\n                    return <AbilityInput key={index} ability={ability} updateAbility={(changed) => this.updateAbility(changed, index)} removeAbility={() => this.removeAbility(index)}></AbilityInput>;\r\n                })}\r\n                <button className=\"ability-button\" onClick={() => this.addAbility()}>Add</button>\r\n            </div>\r\n        </div>);\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { LabeledTextInput, LabeledTextAreaInput } from '../../LabeledInputs';\r\nimport { AssetDocument } from '../../../models/models';\r\n\r\ntype TopViewProps = {\r\n    currentAsset: AssetDocument;\r\n    setCurrentAsset(asset): void;\r\n    handleIconImport(): void; //todo: move fully inte here\r\n};\r\n\r\nexport class TopView extends React.Component<TopViewProps> {\r\n    render() {\r\n        return (<div className=\"editor-view misc-editor-view\">\r\n            <div className=\"vertical\">\r\n                <LabeledTextInput label=\"Asset Name\" className=\"asset-name-input\" value={this.props.currentAsset.name} handleChange={(e) => {\r\n                    this.props.currentAsset.name = e.currentTarget.value;\r\n                    this.props.setCurrentAsset(this.props.currentAsset);\r\n                }}></LabeledTextInput>\r\n                <LabeledTextInput label=\"Type\" className=\"asset-type-input\" value={this.props.currentAsset.type} handleChange={(e) => {\r\n                    this.props.currentAsset.type = e.currentTarget.value;\r\n                    this.props.setCurrentAsset(this.props.currentAsset);\r\n                }}></LabeledTextInput>\r\n                <LabeledTextInput label=\"Write-in (optional)\" className=\"asset-write-in-input\" value={this.props.currentAsset.writeIn || \"\"} handleChange={(e) => {\r\n                    this.props.currentAsset.writeIn = e.currentTarget.value;\r\n                    this.props.setCurrentAsset(this.props.currentAsset);\r\n                }}></LabeledTextInput>\r\n                <LabeledTextAreaInput label=\"Description (optional)\" className=\"asset-description-input\" value={this.props.currentAsset.description} handleChange={(e) => {\r\n                    this.props.currentAsset.description = e.currentTarget.value;\r\n                    this.props.setCurrentAsset(this.props.currentAsset);\r\n                }}></LabeledTextAreaInput>\r\n            </div>\r\n            <div className=\"icon-import\">\r\n                <div className=\"icon-import-helptext\">\r\n                    <p>SVG icons are supported. Use a transparent background for best results.</p>\r\n                    <ol>\r\n                        <li>Head over to <a href=\"https://game-icons.net/\" target=\"_blank\" rel=\"noopener noreferrer\">GameIcons.net</a>, a wonderful resource of Creative Commons-licensed icons.</li>\r\n                        <li>On the left hand side, with \"Studio\" set to background, set \"Type\" to \"none\" (for a transparent\r\n                background).</li>\r\n                        <li>Download the icon.</li>\r\n                        <li>Click \"browse...\" under \"Icon to import\" below here and select the just-downloaded icon.</li>\r\n                        <li>Fill in the artist's name and click \"IMPORT\".</li>\r\n                    </ol>\r\n                </div>\r\n\r\n                <div className=\"icon-import-controls\">\r\n                    <div className=\"icon-import-fileselect\">\r\n                        <label htmlFor=\"icon-fileselect\">Icon to import</label>\r\n                        <input type=\"file\" id=\"icon-fileselect\" />\r\n                    </div>\r\n                    <div className=\"icon-import-author\">\r\n                        <label htmlFor=\"icon-author\">Icon Artist</label>\r\n                        <input type=\"text\" id=\"icon-author\" defaultValue={(this.props.currentAsset.icon || {})['author'] || \"\"} />\r\n                        {/* todo: standardize icon schema across types */}\r\n                    </div>\r\n                    <button id=\"icon-import-button\" onClick={() => this.props.handleIconImport()}> Import </button>\r\n                </div>\r\n            </div>\r\n        </div >);\r\n    }\r\n}\r\n","import React from 'react'\r\nimport { cloneDeep } from 'lodash'\r\nimport { AssetDocument } from '../../../models/models'\r\nimport { LabeledTextAreaInput, LabeledTextInput, LabeledNumberInput } from '../../LabeledInputs'\r\n\r\ntype TrackType = \"none\" | \"numerical\" | \"text\"\r\n\r\nfunction LabeledRadioInput(props: {\r\n    label: string,\r\n    checked: boolean,\r\n    value: TrackType,\r\n    onChange(e)\r\n}) {\r\n    return (<div>\r\n        <input\r\n            type=\"radio\"\r\n            id={`choose-track-${props.value}`}\r\n            value={props.value}\r\n            checked={props.checked}\r\n            onChange={props.onChange} />\r\n        <label>{props.label}</label>\r\n    </div>);\r\n}\r\n\r\n\r\ntype TrackViewProps = {\r\n    currentAsset: AssetDocument, //todo: not require passing in the entire asset to every view\r\n    setCurrentAsset(asset): void\r\n}\r\n\r\nexport default class TrackView extends React.Component<TrackViewProps> {\r\n    handleTrackTypeChange(e) {\r\n        if (e.currentTarget.value === \"none\") {\r\n            this.props.currentAsset.track = null\r\n            this.props.setCurrentAsset(this.props.currentAsset)\r\n        } else if (e.currentTarget.value === \"numerical\") {\r\n            this.props.currentAsset.track = 5\r\n            this.props.setCurrentAsset(this.props.currentAsset)\r\n        } else if (e.currentTarget.value === \"text\") {\r\n            this.props.currentAsset.track = [\"Value 1\", \"Value 2\"]\r\n            this.props.setCurrentAsset(this.props.currentAsset)\r\n        }\r\n    }\r\n\r\n    handleNumericalTrackChange(value: number) {\r\n        let clone = cloneDeep(this.props.currentAsset)\r\n        clone.track = +value\r\n        this.props.setCurrentAsset(clone)\r\n    }\r\n\r\n    render() {\r\n        return (<div className=\"editor-view\">\r\n            <label>Type of Track</label>\r\n            <LabeledRadioInput label=\"No track\"\r\n                checked={this.props.currentAsset.track == null}\r\n                onChange={(e) => this.handleTrackTypeChange(e)}\r\n                value=\"none\"></LabeledRadioInput>\r\n            <LabeledRadioInput label=\"Numerical\"\r\n                checked={(typeof (this.props.currentAsset.track) === \"number\")}\r\n                onChange={(e) => this.handleTrackTypeChange(e)}\r\n                value=\"numerical\"></LabeledRadioInput>\r\n            <LabeledRadioInput label=\"Text\"\r\n                checked={Array.isArray(this.props.currentAsset.track)}\r\n                onChange={(e) => this.handleTrackTypeChange(e)}\r\n                value=\"text\"></LabeledRadioInput>\r\n\r\n            {(typeof (this.props.currentAsset.track) === \"number\") &&\r\n                <LabeledNumberInput\r\n                    label=\"Number of Values\"\r\n                    value={this.props.currentAsset.track}\r\n                    step=\"1\"\r\n                    id=\"track-number-input\"\r\n                    handleChange={(e) => this.handleNumericalTrackChange(e)}></LabeledNumberInput>}\r\n\r\n            {Array.isArray(this.props.currentAsset.track) &&\r\n                <LabeledTextAreaInput label=\"Options (comma-delimited)\"\r\n                    className=\"track-options-input\"\r\n                    value={this.props.currentAsset.track.join(', ')}\r\n                    handleChange={(e) => {\r\n                        let values = e.currentTarget.value.split(\",\").map((val) => val.trim())\r\n                        this.props.currentAsset.track = values //todo: not mutate at every turn\r\n                        this.props.setCurrentAsset(this.props.currentAsset)\r\n                    }}></LabeledTextAreaInput>}\r\n        </div>)\r\n    }\r\n}","export const createGoogleFontString = (...fonts) => {\r\n    let urlifiedFonts = Array.from(new Set(fonts))\r\n        .filter(font => font)\r\n        .map(font => font.replace(/ /g, \"+\"))\r\n        .join(\"|\");\r\n    return urlifiedFonts ? `https://fonts.googleapis.com/css?family=${urlifiedFonts}&display=swap` : \"\";\r\n};\r\n\r\nexport const defaultFontConfig = {\r\n    assetTypeFontSize: \"1.03em\",\r\n    assetTypeFont: \"Simonetta\",\r\n    assetNameFontSize: \"1.26em\",\r\n    assetNameFont: \"Simonetta\",\r\n    detailsFontSize: \"0.97em\",\r\n    detailsFont: \"PT Serif\",\r\n    trackFontSize: \"1.42em\",\r\n    trackFont: \"Simonetta\"\r\n};\r\n\r\nexport const makeMergedConfig = (config): FontConfig => {\r\n    let merged = Object.assign({}, defaultFontConfig)\r\n    for (let key in merged) {\r\n        merged[key] = config[key] || merged[key]\r\n    }\r\n    return merged\r\n};\r\n\r\nexport interface FontConfig {\r\n    assetTypeFontSize?: string;\r\n    assetTypeFont?: string;\r\n    assetNameFontSize?: string;\r\n    assetNameFont?: string;\r\n    detailsFontSize?: string;\r\n    detailsFont?: string;\r\n    trackFontSize?: string;\r\n    trackFont?: string;\r\n}\r\n","import React, { useState } from 'react'\r\nimport { LabeledTextInput, LabeledNumberInput } from '../../LabeledInputs'\r\nimport { AssetDocument } from '../../../models/models'\r\nimport { makeMergedConfig, defaultFontConfig } from '../../../models/assetStyles'\r\nimport { assign } from 'lodash'\r\n\r\nfunction numberFromEm(em) {\r\n    return +(em.replace(\"em\", \"\"))\r\n}\r\n\r\nfunction emFromNumber(number) {\r\n    return number + \"em\"\r\n}\r\n\r\nfunction FontInputs(props: {\r\n    label: string,\r\n    idPrefix: string,\r\n    font: string,\r\n    size: string,\r\n    handleFontChange(e),\r\n    handleSizeChange(e)\r\n}) {\r\n    return (<div className=\"font-inputs\">\r\n        <LabeledTextInput\r\n            label={props.label}\r\n            className=\"font-input\"\r\n            value={props.font}\r\n            handleChange={props.handleFontChange}></LabeledTextInput>\r\n        <LabeledNumberInput label={props.label} id={props.idPrefix + \"-size-input\"} value={numberFromEm(props.size)} step=\"0.01\" handleChange={props.handleSizeChange}></LabeledNumberInput>\r\n    </div>)\r\n}\r\n\r\nexport default function FontsView(props: {\r\n    currentAsset: AssetDocument,\r\n    setCurrentAsset(AssetDocument): void;\r\n}) {\r\n    const configuredFonts = makeMergedConfig(props.currentAsset.fonts || {})\r\n    const [fonts, updateFonts] = useState(configuredFonts)\r\n\r\n    function handleFontChange(setFontProperty) {\r\n        return (e) => {\r\n            const newFonts = { ...fonts }\r\n            setFontProperty(newFonts, e.currentTarget.value)\r\n            updateFonts(newFonts)\r\n        }\r\n    }\r\n\r\n    function handleSizeChange(setSizeProperty) {\r\n        return (value: number) => {\r\n            const newFonts = { ...fonts }\r\n            setSizeProperty(newFonts, emFromNumber(value))\r\n            updateFonts(newFonts)\r\n            props.currentAsset.fonts = newFonts\r\n            props.setCurrentAsset(props.currentAsset)\r\n        }\r\n    }\r\n\r\n    return (<div className=\"editor-view\">\r\n        <h3>What fonts can I use?</h3>\r\n        <p>The fonts from <a href=\"https://fonts.google.com/\" target=\"_blank\" rel=\"noopener noreferrer\">Google Fonts</a> are supported. Put in the name of the font into the corresponding box here and you're all set! Note: font names are case-sensitive.</p>\r\n\r\n        <FontInputs\r\n            label=\"Asset Type font\"\r\n            idPrefix=\"asset-type\"\r\n            font={fonts.assetTypeFont}\r\n            size={fonts.assetTypeFontSize}\r\n            handleFontChange={handleFontChange((fonts, val) => fonts.assetTypeFont = val)}\r\n            handleSizeChange={handleSizeChange((fonts, val) => fonts.assetTypeFontSize = val)}></FontInputs>\r\n        <FontInputs\r\n            label=\"Asset Name font\"\r\n            idPrefix=\"asset-name\"\r\n            font={fonts.assetNameFont}\r\n            size={fonts.assetNameFontSize}\r\n            handleFontChange={handleFontChange((fonts, val) => fonts.assetNameFont = val)}\r\n            handleSizeChange={handleSizeChange((fonts, val) => fonts.assetNameFontSize = val)}></FontInputs>\r\n        <FontInputs\r\n            label=\"Details font\"\r\n            idPrefix=\"details\"\r\n            font={fonts.detailsFont}\r\n            size={fonts.detailsFontSize}\r\n            handleFontChange={handleFontChange((fonts, val) => fonts.detailsFont = val)}\r\n            handleSizeChange={handleSizeChange((fonts, val) => fonts.detailsFontSize = val)}></FontInputs>\r\n        <FontInputs\r\n            label=\"Track font\"\r\n            idPrefix=\"track\"\r\n            font={fonts.trackFont}\r\n            size={fonts.trackFontSize}\r\n            handleFontChange={handleFontChange((fonts, val) => fonts.trackFont = val)}\r\n            handleSizeChange={handleSizeChange((fonts, val) => fonts.trackFontSize = val)}></FontInputs>\r\n\r\n        <button onClick={(e) => {\r\n            props.currentAsset.fonts = fonts\r\n            props.setCurrentAsset(props.currentAsset)\r\n        }}>update fonts</button>\r\n        <button onClick={() => {\r\n            props.currentAsset.fonts = defaultFontConfig\r\n            assign(fonts, defaultFontConfig)\r\n            props.setCurrentAsset(props.currentAsset)\r\n        }}>Reset to Default</button>\r\n    </div>)\r\n}\r\n","import React from 'react'\r\nimport { AssetDocument, transformSvgString } from '../../models/models'\r\nimport { AbilitiesView } from './views/AbilitiesView'\r\nimport { TopView } from './views/TopView'\r\nimport TrackView from './views/TrackView'\r\nimport FontsView from './views/FontsView'\r\n\r\ntype EditorView = \"JSON\" | \"top\" | \"abilities\" | \"track\" | \"fonts\" | \"export\"\r\n\r\nfunction ViewSwitchButton(props: {\r\n    view: EditorView,\r\n    activeView: EditorView,\r\n    children: string,\r\n    handleClick: (view: EditorView) => void\r\n}) {\r\n    const classes = props.view === props.activeView ? \"change-view selected\" : \"change-view\"\r\n    return (<button id={\"show-\" + props.view + \"-view\"} className={classes} onClick={() => props.handleClick(props.view)}>{props.children}</button>)\r\n}\r\n\r\nfunction ViewSwitcher(props: {\r\n    activeView: EditorView,\r\n    switchView: (view: EditorView) => void\r\n}) {\r\n    return (\r\n        <div className=\"view-switcher\">\r\n            <ViewSwitchButton view=\"top\" activeView={props.activeView} handleClick={(view) => props.switchView(view)} >TOP</ViewSwitchButton>\r\n            <ViewSwitchButton view=\"abilities\" activeView={props.activeView} handleClick={(view) => props.switchView(view)}>Abilities</ViewSwitchButton>\r\n            <ViewSwitchButton view=\"track\" activeView={props.activeView} handleClick={(view) => props.switchView(view)}>Track</ViewSwitchButton>\r\n            <ViewSwitchButton view=\"fonts\" activeView={props.activeView} handleClick={(view) => props.switchView(view)}>Fonts</ViewSwitchButton>\r\n            <ViewSwitchButton view=\"JSON\" activeView={props.activeView} handleClick={(view) => props.switchView(view)}>JSON</ViewSwitchButton>\r\n            <ViewSwitchButton view=\"export\" activeView={props.activeView} handleClick={(view) => props.switchView(view)}>export</ViewSwitchButton>\r\n        </div>\r\n    )\r\n}\r\n\r\ntype DetailsEditorProps = {\r\n    currentAsset: AssetDocument,\r\n    setCurrentAsset(asset): void,\r\n    previewAssetImage(): void,\r\n    downloadAssetImage(): void\r\n}\r\n\r\ntype DetailsEditorState = {\r\n    activeView: EditorView,\r\n    editorJSON: string,\r\n    errorText: string\r\n}\r\n\r\nfunction asJSON(val) {\r\n    return JSON.stringify(val, null, 2)\r\n}\r\n\r\nexport default class DetailsEditor extends React.Component<DetailsEditorProps, DetailsEditorState> {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            editorJSON: \"\",\r\n            activeView: \"top\",\r\n            errorText: \"\"\r\n        }\r\n    }\r\n\r\n\r\n    switchView(view: EditorView) {\r\n        this.setState({\r\n            activeView: view\r\n        })\r\n    }\r\n\r\n    handleJSONChange(json) {\r\n        try {\r\n            this.props.setCurrentAsset(JSON.parse(json))\r\n            this.setState({\r\n                editorJSON: \"\",\r\n                errorText: \"\"\r\n            })\r\n        } catch (error) {\r\n            this.setState({\r\n                editorJSON: json,\r\n                errorText: \"Error parsing JSON: \" + error.toString()\r\n            })\r\n        }\r\n    }\r\n\r\n    resetEditorJson() {\r\n        this.setState({\r\n            editorJSON: \"\",\r\n            errorText: \"\"\r\n        })\r\n    }\r\n\r\n    handleIconImport() {\r\n        //todo: move away from queryselecting and use React\r\n        const iconFileInput = document.querySelector(\"#icon-fileselect\") as HTMLInputElement\r\n        const iconAuthorInput = document.querySelector(\"#icon-author\") as HTMLInputElement\r\n\r\n        const file = iconFileInput.files[0];\r\n        if (file) {\r\n            var fileReader = new FileReader()\r\n            fileReader.onload = (e) => {\r\n                var svg = e.target.result as string\r\n                this.props.currentAsset.icon = {\r\n                    type: \"svg\",\r\n                    name: file.name.split('.').slice(0, -1).join('.'),\r\n                    author: iconAuthorInput.value,\r\n                    svg: transformSvgString(svg)\r\n                }\r\n                this.props.setCurrentAsset(this.props.currentAsset)\r\n            }\r\n            fileReader.readAsText(file)\r\n        } else {\r\n            alert(\"missing file\")\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"editor\">\r\n                <ViewSwitcher activeView={this.state.activeView} switchView={(view) => this.switchView(view)}></ViewSwitcher>\r\n                {this.state.activeView === \"top\" &&\r\n                    <TopView\r\n                        currentAsset={this.props.currentAsset}\r\n                        setCurrentAsset={(asset) => this.props.setCurrentAsset(asset)}\r\n                        handleIconImport={() => this.handleIconImport()}></TopView>\r\n                }\r\n\r\n                {this.state.activeView === \"abilities\" &&\r\n                    <AbilitiesView\r\n                        currentAsset={this.props.currentAsset}\r\n                        setCurrentAsset={(asset) => this.props.setCurrentAsset(asset)}></AbilitiesView>\r\n                }\r\n\r\n                {this.state.activeView === \"track\" &&\r\n                    <TrackView\r\n                        currentAsset={this.props.currentAsset}\r\n                        setCurrentAsset={(asset) => this.props.setCurrentAsset(asset)}></TrackView>\r\n                }\r\n\r\n                {this.state.activeView === \"fonts\" &&\r\n                    <FontsView\r\n                        currentAsset={this.props.currentAsset}\r\n                        setCurrentAsset={(asset) => this.props.setCurrentAsset(asset)}></FontsView>\r\n\r\n                }\r\n\r\n                {this.state.activeView === \"JSON\" &&\r\n                    <div className=\"editor-view\">\r\n                        <div>\r\n                            <textarea\r\n                                className=\"interface-input thin-box-border\"\r\n                                spellCheck=\"false\"\r\n                                value={this.state.editorJSON || asJSON(this.props.currentAsset)}\r\n                                onChange={(e) => this.handleJSONChange(e.currentTarget.value)}\r\n                            >\r\n                            </textarea>\r\n                        </div>\r\n                        <div className=\"json-error-container\">\r\n                            {this.state.errorText &&\r\n                                <div className=\"json-error\">\r\n                                    {this.state.errorText}\r\n                                    <button onClick={() => this.resetEditorJson()}>Reset to valid state</button>\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                }\r\n\r\n                {this.state.activeView === \"export\" &&\r\n                    <div className=\"editor-view\">\r\n                        <div className=\" export vertical\">\r\n                            <p>Use the buttons below to get your asset in PNG format. Preview will show you the generated image in the browser, while Download will bring up your browser's save dialog.</p>\r\n                            <button id=\"preview-download\" onClick={() => this.props.previewAssetImage()}> preview as image </button>\r\n                            <button id=\"download\" onClick={() => this.props.downloadAssetImage()}> download as image </button>\r\n                        </div>\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}","import { AssetDocument } from '../models/models'\r\nimport React from 'react'\r\nimport DetailsEditor from './DetailsEditor/DetailsEditor'\r\n\r\n\r\ntype SidePanelProps = {\r\n    currentAsset: AssetDocument,\r\n    setCurrentAsset(asset: AssetDocument): void\r\n    assetScale: string,\r\n    handleAssetScaleChange(newScale: string): void\r\n    showScreen(screen): void,\r\n    previewAssetImage(): void,\r\n    downloadAssetImage(): void\r\n}\r\n\r\nexport function SidePanel(props: SidePanelProps) {\r\n    return (<div className=\"interface\">\r\n        <div className=\"top-row-controls\">\r\n            <div>\r\n                <label>Scale (also affects Download size)</label>\r\n                <select\r\n                    id=\"scale-select\"\r\n                    onChange={(e) => props.handleAssetScaleChange(e.target.value)}\r\n                    value={props.assetScale}\r\n                >\r\n                    <option value=\"one-third\">250px by 350px</option>\r\n                    <option value=\"one-half\">375px by 525px</option>\r\n                    <option value=\"two-thirds\">500px by 700px</option>\r\n                    <option value=\"full\">750px by 1050px</option>\r\n                </select>\r\n            </div>\r\n            <button onClick={() => props.showScreen(\"choose\")}>Back</button>\r\n        </div>\r\n\r\n        <DetailsEditor\r\n            currentAsset={props.currentAsset}\r\n            setCurrentAsset={props.setCurrentAsset}\r\n            previewAssetImage={props.previewAssetImage}\r\n            downloadAssetImage={props.downloadAssetImage}></DetailsEditor>\r\n        <div>\r\n            <p className=\"credits\">\r\n                Ironsworn and the official Ironsworn assets Copyright ©2019 Shawn Tomkin and used under\r\n                the Creative Commons Attribution-NonCommercial-\r\n                ShareAlike 4.0 International license.\r\n                </p>\r\n        </div>\r\n    </div>)\r\n}","export const ironclad = {\r\n    fonts: {\r\n        assetTypeFontSize: \"1.03em\",\r\n        assetTypeFont: \"Noto Sans JP\",\r\n        assetNameFontSize: \"1.76em\",\r\n        assetNameFont: \"Russo One\",\r\n        detailsFontSize: \"0.97em\",\r\n        detailsFont: \"Quicksand\",\r\n        trackFontSize: \"1.12em\",\r\n        trackFont: \"Krona One\"\r\n    },\r\n    type: \"combat talent\",\r\n    name: \"Ironclad\",\r\n    writeIn: \"\",\r\n    track: [\"LIGHTLY ARMORED\", \"GEARED FOR WAR\"],\r\n    description: \"If you wear high-tech armor...\",\r\n    abilities: [\r\n        {\r\n            filled: true,\r\n            text: \"When you equip or adjust your armor, choose one. <li>Lightly armored: When you <em>Endure Harm</em> in a fight, add +1 and take +1 momentum on a hit.</li> <li>Geared for war: Mark encumbered. When you <em>Endure Harm</em> in a fight, add +2 and take +1 momentum on a hit.</li>\"\r\n        },\r\n        {\r\n            filled: false,\r\n            text: \"When you <em>Clash</em> while you are geared for war, add +1.\"\r\n        },\r\n        {\r\n            filled: false,\r\n            text: \"When you <em>Compel</em> in a situation where strength of arms is a factor, add +2.\"\r\n        }\r\n    ],\r\n    icon: {\r\n        type: \"svg\",\r\n        author: \"Delapouite\",\r\n        name: \"Light Helm icon\",\r\n        svg: \"<svg style=\\\"height: 512px; width: 512px;\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 512 512\\\"><g class=\\\"\\\" style=\\\"touch-action: none;\\\" transform=\\\"translate(0,0)\\\"><path d=\\\"M246.488 29.5l-13.244 39.725 14.381 86.275h16.75l14.38-86.275L265.515 29.5h-19.026zM195 61.5l-40 30h63.709l-3.953-23.725 2.092-6.275H195zm100.152 0l2.092 6.275-3.953 23.725H357l-40-30h-21.848zM69.42 90.727L41.639 257.41 71 286.773V162.375l20.863-41.725L69.42 90.727zm373.16 0l-22.443 29.923L441 162.375v124.398l29.361-29.363-27.78-166.683zM117.563 109.5L89 166.625V400l110 82.5v-87.906l-80-32V211.576l35.393-72.076h72.316l-5-30H117.562zm172.728 0l-5 30h72.272L393 210.375v152.219l-80 32V482.5L423 400V166.625L394.437 109.5H290.291zm-124.684 48L137 215.758v3.742h238v-4.875L346.437 157.5h-64.146l-2.666 16h-47.25l-2.666-16h-64.102zM137 237.5v46h30v-46h-30zm96 0v46h46v-46h-46zm112 0v46h30v-46h-30zm-208 64v48.906l46.678 18.67 27.029-67.576H137zm93.092 0l-29.705 74.262L217 382.406v51.067l39 9.75 39-9.75v-51.067l16.613-6.644-29.705-74.262h-51.816zm71.201 0l27.03 67.576L375 350.406V301.5h-73.707z\\\" fill=\\\"#fff\\\" fill-opacity=\\\"1\\\"></path></g></svg>\"\r\n    }\r\n}\r\n\r\nexport const lightbearer = {\r\n    fonts: {\r\n        assetTypeFontSize: \"1.03em\",\r\n        assetNameFontSize: \"1.26em\",\r\n        detailsFontSize: \"0.97em\",\r\n        trackFontSize: \"1.42em\",\r\n    },\r\n    type: \"ritual\",\r\n    name: \"Lightbearer\",\r\n    track: 6,\r\n    abilities: [\r\n        {\r\n            filled: true,\r\n            text: \"When you focus on a source of light and capture its essence, roll +wits. On a strong hit, set your light track to +6. On a weak hit, make it +3. Then, when you make a move to overcome or navigate darkness, you may add +2 and suffer -1 light.\"\r\n        },\r\n        {\r\n            text: \"You may use your light to <em>Strike</em> or <em>Clash</em> against a dark-dwelling foe. Choose the amount of light to unleash, and roll +light (instead of +iron or +edge). Suffer -light equal to that amount. On a hit, your harm is 1+your unleashed light.\"\r\n        },\r\n        {\r\n            text: \"When you perform this ritual, add +1 and take +1 momentum on a hit.\"\r\n        }\r\n    ],\r\n    icon: {\r\n        type: \"svg\",\r\n        author: \"Lorc\",\r\n        name: \"Explosion Rays icon\",\r\n        svg: '<svg class=\"Icon\" style=\"height: 512px; width: 512px;\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><g class=\"\" style=\"touch-action: none;\" transform=\"translate(0,0)\"><path d=\"M54.184 19.512l116.02 144.838c-11.806 9.74-21.4 22.066-27.923 36.095L20.493 142.73v62.993l113.983 19.172c-1.12 6.056-1.707 12.295-1.707 18.67 0 3.502.177 6.965.52 10.378l-72.376 27.7 79.467.687c4.165 10.173 9.917 19.534 16.948 27.775L20.492 441.7v52.484h47.336l105.87-168.65c11.644 8.795 25.212 15.165 39.945 18.366l-23.7 150.284H294.22L253.25 344.69c8.668-1.524 16.964-4.14 24.744-7.7l37.262 42.268-21.326-51.365c6.885-4.792 13.16-10.402 18.68-16.692l182.533 146.61V348.556L329.43 284.865c4.29-9.722 7.118-20.227 8.195-31.238l84.7-25.93-86.78-7.008c-2.26-9.89-5.955-19.242-10.852-27.825l170.452-87.398V23.924L311.918 175.15c-5.33-5.95-11.342-11.28-17.912-15.86l15.533-38.382-29.968 29.967c-9.608-4.595-20.034-7.74-30.996-9.148L269.89 19.512h-40.12l1.27 121.478c-19.017.808-36.716 6.816-51.706 16.64L94.102 19.51H54.184z\" fill=\"#fff\" fill-opacity=\"1\"></path></g></svg>'\r\n    }\r\n}\r\n\r\nexport const berserker = {\r\n    type: \"combat talent\",\r\n    name: \"Berserker\",\r\n    writeIn: \"\",\r\n    track: 0,\r\n    description: \"If you are clad only in animal pelts...\",\r\n    abilities: [\r\n        {\r\n            filled: true,\r\n            name: \"\",\r\n            text: \"When you <em>Secure an Advantage</em> or <em>Compel</em> by embodying your wild nature, add +1 and take +1 momentum on a hit.\"\r\n        },\r\n        {\r\n            filled: false,\r\n            name: \"\",\r\n            text: \"When you <em>Strike</em> and score a hit, you may inflict +1 harm. If you do, choose one. <li>Push yourself: <em>Endure Harm</em> (1 harm).</li> <li>Lose yourself: <em>Endure Stress</em> (1 stress).</li>\"\r\n        },\r\n        {\r\n            filled: false,\r\n            name: \"\",\r\n            text: \"When you <em>Endure Harm</em> in a fight, and your health is above 0, you may let the pain inflame your wildness (decide before rolling). If you then score a strong hit and choose to embrace the pain, take +momentum equal to your remaining health. A weak hit counts as a miss.\"\r\n        }\r\n    ],\r\n    icon: \"▿\"\r\n}\r\n\r\nexport const caveLion = {\r\n    documentFormatVersion: 2,\r\n    type: \"companion\",\r\n    name: \"Cave Lion\",\r\n    writeIn: \"Name\",\r\n    track: 4,\r\n    description: \"Your cat takes down its prey.\",\r\n    abilities: [\r\n        {\r\n            filled: false,\r\n            name: \"Eager\",\r\n            text: \"When your cat chases down big game, you may <em>Resupply</em> with +edge (instead of +wits). If you do, take +1 supply or +1 momentum on a strong hit.\"\r\n        },\r\n        {\r\n            filled: false,\r\n            name: \"Inescapable\",\r\n            text: \"When you <em>Enter the Fray</em> or <em>Strike</em> by sending your cat to attack, roll +edge. On a hit, take +2 momentum.\"\r\n        },\r\n        {\r\n            filled: false,\r\n            name: \"Protective\",\r\n            text: \"When you <em>Make Camp</em>, your cat is alert to trouble. If you or an ally choose to relax, take +1 spirit. If you focus, take +1 momentum.\"\r\n        }\r\n    ],\r\n    icon: {\r\n        \"type\": \"svg\",\r\n        \"author\": \"Delapouite\",\r\n        \"name\": \"Feline icon\",\r\n        \"svg\": {\r\n            d: \"M110.056 64.815c-4.234.027-8.355.587-12.337 1.799C83.13 71.054 72.93 77.03 65.24 87.333c-7.691 10.303-13.122 25.717-15.516 49.713-.669 6.708 2.012 18.384 7.75 30.986 5.738 12.602 14.248 26.276 23.829 38.387l2.49 3.146-.678 3.955c-3.097 18.091-3.644 50.706-.252 68.778.836 4.454 5.766 14.497 13.611 26.296 7.846 11.8 18.412 25.829 30.032 40.944 23.239 30.23 50.678 64.773 69.81 96.547.024.038.347.525 2.139.886 1.791.362 4.605.28 7.127-.35 2.441-.609 4.524-1.766 5.338-2.458-9.946-42.286-16.14-84.185-37.51-125.14l-10.102-19.358 20.809 6.617c21.64 6.882 48.718 8.897 73.396 7.719 24.679-1.179 47.26-5.681 58.868-10.362l5.648-2.277 4.215 4.397c43.225 45.089 73.427 98.048 112.644 140.935.12.132-.139.16.91.088 1.05-.072 3-.714 4.706-1.914 1.705-1.2 3.106-2.882 3.722-4.234.617-1.353.659-2.086.268-3.149-20.396-55.487-30.565-109.894-61.84-162.258l-2.103-3.521 1.279-3.9c6.869-20.923 17.852-42.768 42.902-60.303l4.535-3.176 4.881 2.617c11.454 6.145 19.123 5.873 25.69 1.936 13.132-7.875 24.15-23.88 28.625-37.784l-14.768-8.31-.943-3.746c-4.025-15.96-8.255-25.48-14.625-32.719-6.37-7.24-15.576-12.896-30.977-19.543l-6.426-2.773 1.104-6.91c.89-5.57.052-11.481-1.184-17.768-36.228 29.915-52.892 64.4-86.533 100.086l-3.197 3.39-4.613-.652c-57.84-8.187-142.926-5.257-198.455 1.436-6.045.728-11.262-1.14-16.34-3.733-5.078-2.593-9.996-6.2-14.475-10.492-8.957-8.584-16.938-19.87-16.01-33.258.654-9.426 2.683-17.048 7.006-23.01 4.323-5.961 11.13-9.434 17.815-10.27 13.368-1.669 26.916 3.833 42.058 10.04 30.285 12.415 65.987 29.01 93.022 21.717 10.554-2.848 30.674-20.089 44.4-37.834 6.863-8.873 12.442-17.861 15.377-24.528 1.339-3.041 2.013-5.487 2.24-6.923-.507-.106-1.153-.163-2.355-.08-2.665.182-7.069 1.375-12.56 3.814-10.985 4.877-26.237 14.423-44.675 26.896-11.984 8.108-26.017 8.386-38.992 5.153-12.975-3.233-25.743-9.626-38.58-16.04-19.255-9.619-38.213-18.81-55.45-20.077a53.657 53.657 0 0 0-4.27-.147zm343.096 73.006l9.832 22.123-22.474-3.512 12.642-18.611zM75.28 308.858c-14.235 49.028-35.548 97.072-55.633 132.947-.014.026-.02.015-.03.028a.651.651 0 0 1 .122.207c.258.592 1.295 1.961 2.856 3.035 1.56 1.074 3.553 1.828 4.945 2.008 1.391.18 1.836-.11 1.84-.114 33.669-24.914 58.717-55.4 83.47-85.668l-.613-.794c-11.682-15.197-22.427-29.428-30.75-41.946-2.25-3.384-4.321-6.6-6.207-9.703zM19.615 441.833c-.108-.114-.099.11 0 0zm297.377-119.485c-7.129 2.366-15.533 4.408-24.863 6.022-12.418 40.091-33.327 77.867-52.203 112.605l-.141.26-.158.25c-.31.491-.252.186-.049.783s1.012 1.81 2.27 2.707c2.514 1.796 4.82 2.374 7.208.23l.047-.04.047-.041c32.285-28.17 59.254-61.458 85.242-102.867-5.621-6.799-11.396-13.455-17.4-19.909z\",\r\n            fill: \"#fff\",\r\n            fillOpacity: \"1\",\r\n            viewBox: \"0 0 512 512\"\r\n        }\r\n    }\r\n}","export let scaleRatio = {\r\n    \"full\": 1,\r\n    \"two-thirds\": 2 / 3,\r\n    \"one-half\": 0.5,\r\n    \"one-third\": 1 / 3,\r\n}\r\n\r\nexport type AssetScale = \"one-third\" | \"one-half\" | \"two-thirds\" | \"full\"\r\n\r\nexport function calculateScale(): AssetScale {\r\n    if (window.innerHeight > 1070) {\r\n        return \"full\"\r\n    } else if (window.innerHeight > 750) {\r\n        return \"two-thirds\"\r\n    } else {\r\n        return \"one-half\"\r\n    }\r\n}\r\n\r\n\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { scaleRatio, AssetScale } from '../assetScaling'\r\nimport { FontConfig, makeMergedConfig, createGoogleFontString } from '../models/assetStyles'\r\n\r\n\r\nconst WriteIn = (props: { writeIn?: string }) => {\r\n    return props.writeIn ?\r\n        <div className=\"write-in\">{props.writeIn}</div> :\r\n        null\r\n}\r\n\r\nconst Description = (props: { description: string }) => {\r\n    return props.description ?\r\n        <div className=\"description\">{props.description}</div> :\r\n        null\r\n}\r\n\r\ninterface Ability {\r\n    name?: string,\r\n    filled: boolean,\r\n    text: string\r\n}\r\nconst Ability = (props: { ability: Ability }) => {\r\n    const createAbilityName = (name) => {\r\n        if (name) {\r\n            return <span className=\"ability-name\">{name}</span>\r\n        } else {\r\n            return \"\"\r\n        }\r\n    }\r\n    //TODO: either sanitize first and only allow `b`, `em`, and `li` or parse markdown or custom markup\r\n    return (\r\n        <div className=\"ability\">\r\n            <i className={props.ability.filled ? \"dot filled\" : \"dot unfilled\"}></i>\r\n            <div className=\"ability-description\">\r\n                {createAbilityName(props.ability.name)}\r\n                <span className=\"ability-text\" dangerouslySetInnerHTML={{ __html: props.ability.text }}></span>\r\n            </div>\r\n        </div>)\r\n}\r\n\r\nconst TrackValue = (props: { track: number, value: number, scale: string }) => {\r\n    if (props.value > props.track) {\r\n        return <div className=\"value empty\">\r\n            <svg xmlns='http://www.w3.org/2000/svg'\r\n                version='1.1'\r\n                preserveAspectRatio='none'\r\n                viewBox='0 0 100 100'\r\n                height={95 * scaleRatio[props.scale]}\r\n                width={113 * scaleRatio[props.scale]}>\r\n                <line x1='0' y1='100' x2='100' y2='0' stroke='rgb(65,64,66)' style={{ strokeWidth: 3.5 }} />\r\n            </svg>\r\n        </div>\r\n    } else {\r\n        return <div className=\"value number\">+{props.value}</div>\r\n    }\r\n}\r\n\r\nconst Track = (props: { track: string[] | number, scale: string }) => {\r\n    if (!props.track) {\r\n        return null\r\n    } else if (Array.isArray(props.track)) {\r\n        const innerEntries = props.track.map((entry, index) => {\r\n            return <div className=\"value text\" key={index}>{entry}</div>\r\n        })\r\n        return <div className=\"track\">\r\n            {innerEntries}\r\n        </div>\r\n    } else {\r\n        let trackLength = props.track > 5 ? props.track : 5\r\n        let innerEntries = []\r\n\r\n        for (let i = 1; i <= trackLength; i++) {\r\n            innerEntries.push(<TrackValue track={props.track} value={i} scale={props.scale} key={i}></TrackValue>)\r\n        }\r\n        return <div className=\"track\">\r\n            <div className=\"value\">0</div>\r\n            {innerEntries}\r\n        </div>\r\n    }\r\n}\r\n\r\nconst Icon = (props: { icon: string | { svg: { d: string, fill: string, fillOpacity: string } }, scale: string }) => {\r\n    if (typeof props.icon === \"string\") {\r\n        return (\r\n            <div className=\"header-circle\">\r\n                <i className=\"header-icon\">{props.icon}</i>\r\n            </div>)\r\n    } else if (typeof props.icon === \"object\") {\r\n        return (\r\n            <div className=\"header-circle\">\r\n                <svg\r\n                    height={154 * scaleRatio[props.scale]}\r\n                    width={154 * scaleRatio[props.scale]}\r\n                    viewBox=\"0 0 512 512\">\r\n                    <g>\r\n                        <path d={props.icon.svg.d} fill={props.icon.svg.fill} fillOpacity={props.icon.svg.fillOpacity}></path>\r\n                    </g>\r\n                </svg>\r\n            </div>)\r\n    } else {\r\n        return null\r\n    }\r\n}\r\n\r\nconst AssetStyles = (props: { fonts: object }) => {\r\n    //TODO: put styles onto corresponding elements directly instead of living 'dangerously'.\r\n    let fonts = props.fonts || {}\r\n    let fontConfig: FontConfig = makeMergedConfig(fonts)\r\n    let googleFonts = createGoogleFontString(fontConfig.assetTypeFont, fontConfig.assetNameFont, fontConfig.detailsFont, fontConfig.trackFont)\r\n\r\n    //TODO: type these properties. (curious it's not a compile-time error. Maybe with strict: true in tsconfig?).\r\n    return (<>\r\n        <link rel=\"stylesheet\" href={googleFonts} />\r\n        <style dangerouslySetInnerHTML={{\r\n            __html: `\r\n                .type {\r\n                    font-size: ${fontConfig.assetTypeFontSize};\r\n                    font-family: \"${fontConfig.assetTypeFont}\";\r\n                }\r\n                .asset-name {\r\n                    font-size: ${fontConfig.assetNameFontSize};\r\n                    font-family: \"${fontConfig.assetNameFont}\";\r\n                }\r\n                .details {\r\n                    font-size: ${fontConfig.detailsFontSize};\r\n                    font-family: \"${fontConfig.detailsFont}\";\r\n                }\r\n                .value, .value.text, .value.number {\r\n                    font-size: ${fontConfig.trackFontSize};\r\n                    font-family: \"${fontConfig.trackFont}\";\r\n                }`\r\n        }}>\r\n\r\n        </style>\r\n    </>)\r\n}\r\n\r\ninterface Asset {\r\n    fonts?: FontConfig,\r\n    type: string,\r\n    icon?: string | { svg: { d: string, fill: string, fillOpacity: string } },\r\n    name: string,\r\n    writeIn?: string,\r\n    description: string,\r\n    abilities: Ability[],\r\n    track?: number | string[]\r\n}\r\n\r\ninterface AssetProps {\r\n    asset: Asset,\r\n    scale: AssetScale\r\n}\r\n\r\nexport const Asset = (props: AssetProps) => {\r\n    let asset = props.asset\r\n    return (<div className={`asset ${props.scale}`}>\r\n        <AssetStyles fonts={asset.fonts}></AssetStyles>\r\n        <div className=\"main-matter\">\r\n            <div className=\"top\">\r\n                <div className=\"type\">{asset.type}</div>\r\n                <Icon icon={asset.icon} scale={props.scale} />\r\n                <div className=\"asset-name\">{asset.name}</div>\r\n            </div>\r\n            <div className=\"details\">\r\n                <WriteIn writeIn={asset.writeIn}></WriteIn>\r\n                <Description description={asset.description} />\r\n                <div className=\"abilities\">\r\n                    {asset.abilities.map((ability, index) => <Ability ability={ability} key={index}></Ability>)}\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <Track track={asset.track} scale={props.scale} />\r\n    </div >)\r\n}\r\n\r\nexport const showAssetIn = (element, asset, scale, callback?: () => void) => {\r\n    console.log(\"Showing asset with scale\", scale, \"in\", element)\r\n    // TODO: watch for state changes inside of a react component instead of re-rendering everything    \r\n    ReactDOM.render(<Asset asset={asset} scale={scale} />,\r\n        element, callback)\r\n}","import React from 'react'\r\nimport { AssetDocument } from '../models/models'\r\nimport { Asset } from '../Asset/Asset'\r\nimport html2canvas from 'html2canvas'\r\nimport { AssetScale } from '../assetScaling'\r\n\r\ntype DownloadProps = {\r\n    asset: AssetDocument,\r\n    scale: AssetScale,\r\n    goBackToMain: () => void,\r\n    preview: boolean\r\n}\r\n\r\ntype DownloadState = {\r\n    canvas: HTMLCanvasElement\r\n}\r\n\r\nexport default class Download extends React.Component<DownloadProps, DownloadState> {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            canvas: null\r\n        }\r\n    }\r\n\r\n    saveImage() {\r\n        const link = document.createElement('a')\r\n        link.href = this.state.canvas.toDataURL()\r\n        link.download = this.props.asset.name + \".png\"\r\n        document.body.appendChild(link)\r\n        link.click()\r\n        document.body.removeChild(link)\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (!this.state.canvas) {\r\n            window.scrollTo(0, 0)\r\n            const render = document.querySelector('.render')\r\n            html2canvas(render.firstChild as HTMLElement,\r\n                {\r\n                    allowTaint: true\r\n                }).then(canvas => {\r\n                    this.setState({ canvas: canvas })\r\n                })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (!this.state.canvas) {\r\n            return (\r\n                <div className=\"render\">\r\n                    <Asset asset={this.props.asset} scale={this.props.scale}></Asset>\r\n                </div>\r\n            )\r\n        } else if (!this.props.preview) {\r\n            this.saveImage()\r\n            this.props.goBackToMain()\r\n            return null\r\n        } else {\r\n            return (\r\n                <div className=\"preview-download\">\r\n                    <div className=\"image-container\">\r\n                        <img src={this.state.canvas.toDataURL()} alt={`${this.props.asset.name} asset`} />\r\n                    </div>\r\n                    <div className=\"preview-download-help\">\r\n                        <p>Right click and 'Save image as...' to save. If the image is truncated,\r\n                    try making your browser window bigger before pressing 'preview' or 'download as image'.</p>\r\n                        <button id=\"done-downloading\" onClick={() => this.props.goBackToMain()} > close </button>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n\r\n    }\r\n}","import React from 'react'\r\n\r\nimport { ironclad, lightbearer, caveLion } from './exampleAssets'\r\nimport { Asset } from './Asset/Asset'\r\nimport { transformToLatest, UnspecifiedAssetDocument } from './models/models'\r\n\r\nfunction AssetChoice(props: {\r\n    handleClick(),\r\n    asset: UnspecifiedAssetDocument\r\n}) {\r\n    let transformedAsset = transformToLatest(props.asset as UnspecifiedAssetDocument)\r\n    return (\r\n        <div className=\"asset-choice\" onClick={props.handleClick}>\r\n            <Asset asset={transformedAsset} scale={\"one-third\"}></Asset>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default function AssetSelection(props: {\r\n    chooseAsset: (asset) => void,\r\n    localAsset: UnspecifiedAssetDocument\r\n}) {\r\n    return (\r\n        <div className=\"asset-selection\">\r\n            <h3>Choose asset to edit</h3>\r\n            <div className=\"example-controls\">\r\n                <AssetChoice\r\n                    asset={props.localAsset}\r\n                    handleClick={() => props.chooseAsset(props.localAsset)}></AssetChoice>\r\n            </div>\r\n            <h3>Examples</h3>\r\n            <div className=\"example-controls\">\r\n                <AssetChoice\r\n                    asset={lightbearer as UnspecifiedAssetDocument}\r\n                    handleClick={() => props.chooseAsset(lightbearer)}></AssetChoice>\r\n                <AssetChoice\r\n                    asset={ironclad as UnspecifiedAssetDocument}\r\n                    handleClick={() => props.chooseAsset(ironclad)}></AssetChoice>\r\n                <AssetChoice\r\n                    asset={caveLion as UnspecifiedAssetDocument}\r\n                    handleClick={() => props.chooseAsset(caveLion)}></AssetChoice>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport { SidePanel } from \"./SidePanel/SidePanel\";\r\nimport { AssetDocument, transformToLatest, UnspecifiedAssetDocument } from \"./models/models\";\r\nimport { caveLion } from \"./exampleAssets\";\r\nimport { calculateScale, AssetScale } from \"./assetScaling\";\r\nimport { Asset } from \"./Asset/Asset\";\r\nimport Download from \"./SidePanel/Download\"\r\nimport AssetSelection from './AssetSelection'\r\n\r\n\r\n\r\ntype Screen = \"choose\" | \"edit\" | \"preview-download\"\r\n\r\ntype AppState = {\r\n    currentAsset: AssetDocument,\r\n    assetScale: AssetScale,\r\n    currentScreen: Screen\r\n    previewDownload: boolean\r\n}\r\n\r\nexport default class App extends React.Component<{}, AppState> {\r\n    constructor(props) {\r\n        super(props)\r\n        let startingAsset = transformToLatest(caveLion as UnspecifiedAssetDocument) //This is where I learn the tragic extent of the failings of TypeScript's type inference.\r\n        let startingScale = calculateScale()\r\n        this.state = {\r\n            currentAsset: startingAsset,\r\n            assetScale: startingScale,\r\n            currentScreen: \"choose\",\r\n            previewDownload: true\r\n        }\r\n    }\r\n\r\n    getLocalAsset(): UnspecifiedAssetDocument {\r\n        const maybeAsset = window.localStorage.getItem(\"currentAsset\")\r\n        if (maybeAsset) {\r\n            try {\r\n                return JSON.parse(maybeAsset)\r\n            } catch (error) {\r\n                window.alert(\"Error parsing local asset: \" + error.toString())\r\n            }\r\n        }\r\n        return {\r\n            documentFormatVersion: 2,\r\n            abilities: [],\r\n            description: \"\",\r\n            name: \"Your Asset\",\r\n            type: \"\",\r\n            fonts: {},\r\n            icon: \"\",\r\n            track: null,\r\n            writeIn: \"\"\r\n        }\r\n    }\r\n\r\n    handleAssetScaleChange(newScale) {\r\n        this.setState({ assetScale: newScale })\r\n    }\r\n\r\n    setCurrentAsset(asset) {\r\n        this.setState({\r\n            currentAsset: transformToLatest(asset)\r\n        })\r\n        window.localStorage.setItem(\"currentAsset\", JSON.stringify(asset))\r\n    }\r\n\r\n    chooseAsset(asset) {\r\n        this.setState({\r\n            currentAsset: transformToLatest(asset),\r\n            currentScreen: \"edit\"\r\n        })\r\n    }\r\n\r\n    showScreen(screen) {\r\n        this.setState({ currentScreen: screen })\r\n    }\r\n\r\n    previewAssetImage() {\r\n        this.setState({ currentScreen: 'preview-download', previewDownload: true })\r\n    }\r\n\r\n    downloadAssetImage() {\r\n        this.setState({ currentScreen: 'preview-download', previewDownload: false })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"app\">\r\n                <header className=\"app-header\">\r\n                    <h2> Ironsworn Asset Workbench v0.8.2</h2>\r\n                </header>\r\n                {this.state.currentScreen === \"preview-download\" &&\r\n                    <Download\r\n                        asset={this.state.currentAsset}\r\n                        scale={this.state.assetScale}\r\n                        goBackToMain={() => this.showScreen(\"edit\")}\r\n                        preview={this.state.previewDownload}></Download>\r\n                }\r\n\r\n                {this.state.currentScreen === \"choose\" &&\r\n                    <AssetSelection\r\n                        chooseAsset={(asset) => this.chooseAsset(asset)}\r\n                        localAsset={this.getLocalAsset()}></AssetSelection>\r\n                }\r\n\r\n                {this.state.currentScreen === \"edit\" &&\r\n                    <div className=\"container\">\r\n                        <div className=\"assets\">\r\n                            <Asset\r\n                                asset={this.state.currentAsset}\r\n                                scale={this.state.assetScale}\r\n                            ></Asset>\r\n                        </div>\r\n                        <SidePanel\r\n                            currentAsset={this.state.currentAsset}\r\n                            setCurrentAsset={(asset) => this.setCurrentAsset(asset)}\r\n                            assetScale={this.state.assetScale}\r\n                            handleAssetScaleChange={(e) => this.handleAssetScaleChange(e)}\r\n                            showScreen={(screen) => this.showScreen(screen)}\r\n                            previewAssetImage={() => this.previewAssetImage()}\r\n                            downloadAssetImage={() => this.downloadAssetImage()}\r\n                        ></SidePanel>\r\n                    </div>}\r\n            </div>)\r\n    }\r\n}","import './index.css'\r\nimport './asset.css'\r\nimport App from './App'\r\nimport ReactDOM from 'react-dom'\r\nimport React from 'react'\r\n\r\nReactDOM.render(<App></App>, document.querySelector('.app-container'))"],"sourceRoot":""}