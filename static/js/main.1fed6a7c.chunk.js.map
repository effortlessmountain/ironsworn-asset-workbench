{"version":3,"sources":["exampleAssets.ts","assetScaling.ts","models/assetStyles.ts","editor.tsx","asset.tsx","models/models.ts","exampleAssetLoader.ts","router.ts","download.tsx","index.tsx"],"names":["ironclad","fonts","assetTypeFontSize","assetTypeFont","assetNameFontSize","assetNameFont","detailsFontSize","detailsFont","trackFontSize","trackFont","type","name","writeIn","track","description","abilities","filled","text","icon","author","svg","lightbearer","caveLion","documentFormatVersion","d","fill","fillOpacity","scaleRatio","assetScale","value","window","innerHeight","scaleSelect","document","querySelector","addEventListener","event","size","currentTarget","showAsset","currentAsset","defaultFontConfig","WriteIn","props","className","Description","Ability","ability","dangerouslySetInnerHTML","__html","TrackValue","xmlns","version","preserveAspectRatio","viewBox","height","scale","width","x1","y1","x2","y2","stroke","style","strokeWidth","Track","Array","isArray","innerEntries","map","entry","index","key","trackLength","i","push","Icon","AssetStyles","fontConfig","config","merged","Object","assign","makeMergedConfig","googleFonts","urlifiedFonts","from","Set","filter","font","replace","join","createGoogleFontString","rel","href","Asset","asset","showAssetIn","element","ReactDOM","render","assetContainer","extractPropertyValue","svgString","regexp","RegExp","match","transformSvgString","transformToLatest","schema","v1","v2","transformToV2","assetInput","setCurrentAsset","JSON","stringify","onclick","parse","error","alert","iconFileInput","iconAuthorInput","file","files","fileReader","FileReader","onload","e","target","result","split","slice","readAsText","handleFile","showSingleAssetExample","showScreen","screen","body","downloadContainer","renderOnCanvas","callback","scrollTo","html2canvas","firstChild","allowTaint","then","canvas","appendChild","closeDownload","innerHTML","uri","filename","link","createElement","download","click","removeChild","saveImage","toDataURL"],"mappings":"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","file":"static/js/main.1fed6a7c.chunk.js","sourcesContent":["export const ironclad = {\r\n    fonts: {\r\n        assetTypeFontSize: \"1.03em\",\r\n        assetTypeFont: \"Noto Sans JP\",\r\n        assetNameFontSize: \"1.76em\",\r\n        assetNameFont: \"Russo One\",\r\n        detailsFontSize: \"0.97em\",\r\n        detailsFont: \"Quicksand\",\r\n        trackFontSize: \"1.12em\",\r\n        trackFont: \"Krona One\"\r\n    },\r\n    type: \"combat talent\",\r\n    name: \"Ironclad\",\r\n    writeIn: \"\",\r\n    track: [\"LIGHTLY ARMORED\", \"GEARED FOR WAR\"],\r\n    description: \"If you wear high-tech armor...\",\r\n    abilities: [\r\n        {\r\n            filled: true,\r\n            text: \"When you equip or adjust your armor, choose one. <li>Lightly armored: When you <em>Endure Harm</em> in a fight, add +1 and take +1 momentum on a hit.</li> <li>Geared for war: Mark encumbered. When you <em>Endure Harm</em> in a fight, add +2 and take +1 momentum on a hit.</li>\"\r\n        },\r\n        {\r\n            filled: false,\r\n            text: \"When you <em>Clash</em> while you are geared for war, add +1.\"\r\n        },\r\n        {\r\n            filled: false,\r\n            text: \"When you <em>Compel</em> in a situation where strength of arms is a factor, add +2.\"\r\n        }\r\n    ],\r\n    icon: {\r\n        type: \"svg\",\r\n        author: \"Delapouite\",\r\n        name: \"Light Helm icon\",\r\n        svg: '<svg style=\\\"height: 512px; width: 512px;\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 512 512\\\"><g class=\\\"\\\" style=\\\"touch-action: none;\\\" transform=\\\"translate(0,0)\\\"><path d=\\\"M246.488 29.5l-13.244 39.725 14.381 86.275h16.75l14.38-86.275L265.515 29.5h-19.026zM195 61.5l-40 30h63.709l-3.953-23.725 2.092-6.275H195zm100.152 0l2.092 6.275-3.953 23.725H357l-40-30h-21.848zM69.42 90.727L41.639 257.41 71 286.773V162.375l20.863-41.725L69.42 90.727zm373.16 0l-22.443 29.923L441 162.375v124.398l29.361-29.363-27.78-166.683zM117.563 109.5L89 166.625V400l110 82.5v-87.906l-80-32V211.576l35.393-72.076h72.316l-5-30H117.562zm172.728 0l-5 30h72.272L393 210.375v152.219l-80 32V482.5L423 400V166.625L394.437 109.5H290.291zm-124.684 48L137 215.758v3.742h238v-4.875L346.437 157.5h-64.146l-2.666 16h-47.25l-2.666-16h-64.102zM137 237.5v46h30v-46h-30zm96 0v46h46v-46h-46zm112 0v46h30v-46h-30zm-208 64v48.906l46.678 18.67 27.029-67.576H137zm93.092 0l-29.705 74.262L217 382.406v51.067l39 9.75 39-9.75v-51.067l16.613-6.644-29.705-74.262h-51.816zm71.201 0l27.03 67.576L375 350.406V301.5h-73.707z\\\" fill=\\\"#fff\\\" fill-opacity=\\\"1\\\"></path></g></svg>'\r\n    }\r\n}\r\n\r\nexport const lightbearer = {\r\n    fonts: {\r\n        assetTypeFontSize: \"1.03em\",\r\n        assetNameFontSize: \"1.26em\",\r\n        detailsFontSize: \"0.97em\",\r\n        trackFontSize: \"1.42em\",\r\n    },\r\n    type: \"ritual\",\r\n    name: \"Lightbearer\",\r\n    track: 6,\r\n    abilities: [\r\n        {\r\n            filled: true,\r\n            text: \"When you focus on a source of light and capture its essence, roll +wits. On a strong hit, set your light track to +6. On a weak hit, make it +3. Then, when you make a move to overcome or navigate darkness, you may add +2 and suffer -1 light.\"\r\n        },\r\n        {\r\n            text: \"You may use your light to <em>Strike</em> or <em>Clash</em> against a dark-dwelling foe. Choose the amount of light to unleash, and roll +light (instead of +iron or +edge). Suffer -light equal to that amount. On a hit, your harm is 1+your unleashed light.\"\r\n        },\r\n        {\r\n            text: \"When you perform this ritual, add +1 and take +1 momentum on a hit.\"\r\n        }\r\n    ],\r\n    icon: {\r\n        type: \"svg\",\r\n        author: \"Lorc\",\r\n        name: \"Explosion Rays icon\",\r\n        svg: '<svg class=\"Icon\" style=\"height: 512px; width: 512px;\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><g class=\"\" style=\"touch-action: none;\" transform=\"translate(0,0)\"><path d=\"M54.184 19.512l116.02 144.838c-11.806 9.74-21.4 22.066-27.923 36.095L20.493 142.73v62.993l113.983 19.172c-1.12 6.056-1.707 12.295-1.707 18.67 0 3.502.177 6.965.52 10.378l-72.376 27.7 79.467.687c4.165 10.173 9.917 19.534 16.948 27.775L20.492 441.7v52.484h47.336l105.87-168.65c11.644 8.795 25.212 15.165 39.945 18.366l-23.7 150.284H294.22L253.25 344.69c8.668-1.524 16.964-4.14 24.744-7.7l37.262 42.268-21.326-51.365c6.885-4.792 13.16-10.402 18.68-16.692l182.533 146.61V348.556L329.43 284.865c4.29-9.722 7.118-20.227 8.195-31.238l84.7-25.93-86.78-7.008c-2.26-9.89-5.955-19.242-10.852-27.825l170.452-87.398V23.924L311.918 175.15c-5.33-5.95-11.342-11.28-17.912-15.86l15.533-38.382-29.968 29.967c-9.608-4.595-20.034-7.74-30.996-9.148L269.89 19.512h-40.12l1.27 121.478c-19.017.808-36.716 6.816-51.706 16.64L94.102 19.51H54.184z\" fill=\"#fff\" fill-opacity=\"1\"></path></g></svg>'\r\n    }\r\n}\r\n\r\nexport const berserker = {\r\n    type: \"combat talent\",\r\n    name: \"Berserker\",\r\n    writeIn: \"\",\r\n    track: 0,\r\n    description: \"If you are clad only in animal pelts...\",\r\n    abilities: [\r\n        {\r\n            filled: true,\r\n            name: \"\",\r\n            text: \"When you <em>Secure an Advantage</em> or <em>Compel</em> by embodying your wild nature, add +1 and take +1 momentum on a hit.\"\r\n        },\r\n        {\r\n            filled: false,\r\n            name: \"\",\r\n            text: \"When you <em>Strike</em> and score a hit, you may inflict +1 harm. If you do, choose one. <li>Push yourself: <em>Endure Harm</em> (1 harm).</li> <li>Lose yourself: <em>Endure Stress</em> (1 stress).</li>\"\r\n        },\r\n        {\r\n            filled: false,\r\n            name: \"\",\r\n            text: \"When you <em>Endure Harm</em> in a fight, and your health is above 0, you may let the pain inflame your wildness (decide before rolling). If you then score a strong hit and choose to embrace the pain, take +momentum equal to your remaining health. A weak hit counts as a miss.\"\r\n        }\r\n    ],\r\n    icon: \"▿\"\r\n}\r\n\r\nexport const caveLion = {\r\n    documentFormatVersion: 2,\r\n    type: \"companion\",\r\n    name: \"Cave Lion\",\r\n    writeIn: \"Name\",\r\n    track: 4,\r\n    description: \"Your cat takes down its prey.\",\r\n    abilities: [\r\n        {\r\n            filled: false,\r\n            name: \"Eager\",\r\n            text: \"When your cat chases down big game, you may <em>Resupply</em> with +edge (instead of +wits). If you do, take +1 supply or +1 momentum on a strong hit.\"\r\n        },\r\n        {\r\n            filled: false,\r\n            name: \"Inescapable\",\r\n            text: \"When you <em>Enter the Fray</em> or <em>Strike</em> by sending your cat to attack, roll +edge. On a hit, take +2 momentum.\"\r\n        },\r\n        {\r\n            filled: false,\r\n            name: \"Protective\",\r\n            text: \"When you <em>Make Camp</em>, your cat is alert to trouble. If you or an ally choose to relax, take +1 spirit. If you focus, take +1 momentum.\"\r\n        }\r\n    ],\r\n    icon: {\r\n        \"type\": \"svg\",\r\n        \"author\": \"Delapouite\",\r\n        \"name\": \"Feline icon\",\r\n        \"svg\": {\r\n            d: \"M110.056 64.815c-4.234.027-8.355.587-12.337 1.799C83.13 71.054 72.93 77.03 65.24 87.333c-7.691 10.303-13.122 25.717-15.516 49.713-.669 6.708 2.012 18.384 7.75 30.986 5.738 12.602 14.248 26.276 23.829 38.387l2.49 3.146-.678 3.955c-3.097 18.091-3.644 50.706-.252 68.778.836 4.454 5.766 14.497 13.611 26.296 7.846 11.8 18.412 25.829 30.032 40.944 23.239 30.23 50.678 64.773 69.81 96.547.024.038.347.525 2.139.886 1.791.362 4.605.28 7.127-.35 2.441-.609 4.524-1.766 5.338-2.458-9.946-42.286-16.14-84.185-37.51-125.14l-10.102-19.358 20.809 6.617c21.64 6.882 48.718 8.897 73.396 7.719 24.679-1.179 47.26-5.681 58.868-10.362l5.648-2.277 4.215 4.397c43.225 45.089 73.427 98.048 112.644 140.935.12.132-.139.16.91.088 1.05-.072 3-.714 4.706-1.914 1.705-1.2 3.106-2.882 3.722-4.234.617-1.353.659-2.086.268-3.149-20.396-55.487-30.565-109.894-61.84-162.258l-2.103-3.521 1.279-3.9c6.869-20.923 17.852-42.768 42.902-60.303l4.535-3.176 4.881 2.617c11.454 6.145 19.123 5.873 25.69 1.936 13.132-7.875 24.15-23.88 28.625-37.784l-14.768-8.31-.943-3.746c-4.025-15.96-8.255-25.48-14.625-32.719-6.37-7.24-15.576-12.896-30.977-19.543l-6.426-2.773 1.104-6.91c.89-5.57.052-11.481-1.184-17.768-36.228 29.915-52.892 64.4-86.533 100.086l-3.197 3.39-4.613-.652c-57.84-8.187-142.926-5.257-198.455 1.436-6.045.728-11.262-1.14-16.34-3.733-5.078-2.593-9.996-6.2-14.475-10.492-8.957-8.584-16.938-19.87-16.01-33.258.654-9.426 2.683-17.048 7.006-23.01 4.323-5.961 11.13-9.434 17.815-10.27 13.368-1.669 26.916 3.833 42.058 10.04 30.285 12.415 65.987 29.01 93.022 21.717 10.554-2.848 30.674-20.089 44.4-37.834 6.863-8.873 12.442-17.861 15.377-24.528 1.339-3.041 2.013-5.487 2.24-6.923-.507-.106-1.153-.163-2.355-.08-2.665.182-7.069 1.375-12.56 3.814-10.985 4.877-26.237 14.423-44.675 26.896-11.984 8.108-26.017 8.386-38.992 5.153-12.975-3.233-25.743-9.626-38.58-16.04-19.255-9.619-38.213-18.81-55.45-20.077a53.657 53.657 0 0 0-4.27-.147zm343.096 73.006l9.832 22.123-22.474-3.512 12.642-18.611zM75.28 308.858c-14.235 49.028-35.548 97.072-55.633 132.947-.014.026-.02.015-.03.028a.651.651 0 0 1 .122.207c.258.592 1.295 1.961 2.856 3.035 1.56 1.074 3.553 1.828 4.945 2.008 1.391.18 1.836-.11 1.84-.114 33.669-24.914 58.717-55.4 83.47-85.668l-.613-.794c-11.682-15.197-22.427-29.428-30.75-41.946-2.25-3.384-4.321-6.6-6.207-9.703zM19.615 441.833c-.108-.114-.099.11 0 0zm297.377-119.485c-7.129 2.366-15.533 4.408-24.863 6.022-12.418 40.091-33.327 77.867-52.203 112.605l-.141.26-.158.25c-.31.491-.252.186-.049.783s1.012 1.81 2.27 2.707c2.514 1.796 4.82 2.374 7.208.23l.047-.04.047-.041c32.285-28.17 59.254-61.458 85.242-102.867-5.621-6.799-11.396-13.455-17.4-19.909z\",\r\n            fill: \"#fff\",\r\n            fillOpacity: 1\r\n\r\n        }\r\n    }\r\n}","import { showAsset } from \"./asset\"\r\nimport { currentAsset } from \"./editor\"\r\n\r\nexport let scaleRatio = {\r\n    \"full\": 1,\r\n    \"two-thirds\": 2 / 3,\r\n    \"one-half\": 0.5,\r\n    \"one-third\": 1 / 3,\r\n}\r\n\r\nconst calculateScale = () => {\r\n    if (window.innerHeight > 1070) {\r\n        return \"full\"\r\n    } else if (window.innerHeight > 750) {\r\n        return \"two-thirds\"\r\n    } else {\r\n        return \"one-half\"\r\n    }\r\n}\r\n\r\nexport let assetScale = { value: calculateScale() }\r\n\r\n\r\nconst scaleSelect: HTMLInputElement = document.querySelector(\"#scale-select\")\r\n\r\nconst changeSize = (size) => {\r\n    assetScale.value = size\r\n    showAsset(currentAsset)\r\n}\r\n\r\nscaleSelect.addEventListener('change', (event) => {\r\n    changeSize((event.currentTarget as HTMLInputElement).value)\r\n})\r\n\r\nscaleSelect.value = assetScale.value","export const createGoogleFontString = (...fonts) => {\r\n    let urlifiedFonts = Array.from(new Set(fonts))\r\n        .filter(font => font)\r\n        .map(font => font.replace(/ /g, \"+\"))\r\n        .join(\"|\");\r\n    return urlifiedFonts ? `https://fonts.googleapis.com/css?family=${urlifiedFonts}&display=swap` : \"\";\r\n};\r\n\r\nconst defaultFontConfig = {\r\n    assetTypeFontSize: \"1.03em\",\r\n    assetTypeFont: \"Simonetta\",\r\n    assetNameFontSize: \"1.26em\",\r\n    assetNameFont: \"Simonetta\",\r\n    detailsFontSize: \"0.97em\",\r\n    detailsFont: \"PT Serif\",\r\n    trackFontSize: \"1.42em\",\r\n    trackFont: \"Simonetta\"\r\n};\r\n\r\nexport const makeMergedConfig = (config): FontConfig => {\r\n    let merged = Object.assign({}, defaultFontConfig)\r\n    for (let key in merged) {\r\n        merged[key] = config[key] || merged[key]\r\n    }\r\n    return merged\r\n};\r\n\r\nexport interface FontConfig {\r\n    assetTypeFontSize: string;\r\n    assetTypeFont: string;\r\n    assetNameFontSize: string;\r\n    assetNameFont: string;\r\n    detailsFontSize: string;\r\n    detailsFont: string;\r\n    trackFontSize: string;\r\n    trackFont: string;\r\n}\r\n","import { showAsset } from './asset'\r\nimport { transformToLatest, transformSvgString, AssetDocument } from './models/models'\r\n\r\nexport let currentAsset: AssetDocument\r\n\r\nconst assetInput: HTMLInputElement = document.querySelector('.interface-input')\r\n\r\nexport const setCurrentAsset = (asset) => {\r\n    currentAsset = transformToLatest(asset)\r\n    assetInput.value = JSON.stringify(currentAsset, null, 2)\r\n    showAsset(currentAsset)\r\n}\r\n\r\nconst updateButton: HTMLButtonElement = document.querySelector(\".update\")\r\n\r\nupdateButton.onclick = () => {\r\n    try {\r\n        setCurrentAsset(JSON.parse(assetInput.value))\r\n    }\r\n    catch (error) {\r\n        window.alert(error)\r\n    }\r\n}\r\n\r\nconst iconFileInput = document.querySelector(\"#icon-fileselect\") as HTMLInputElement\r\nconst iconAuthorInput = document.querySelector(\"#icon-author\") as HTMLInputElement\r\n\r\n\r\nfunction handleFile() {\r\n    const file = iconFileInput.files[0];\r\n    if (file) {\r\n        var fileReader = new FileReader()\r\n        fileReader.onload = (e) => {\r\n            var svg = e.target.result as string\r\n            currentAsset.icon = {\r\n                type: \"svg\",\r\n                name: file.name.split('.').slice(0, -1).join('.'),\r\n                author: iconAuthorInput.value,\r\n                svg: transformSvgString(svg)\r\n            }\r\n            setCurrentAsset(currentAsset)\r\n        }\r\n        fileReader.readAsText(file)\r\n    } else {\r\n        alert(\"missing file\")\r\n    }\r\n}\r\n\r\nconst iconImportButton: HTMLButtonElement = document.querySelector(\"#icon-import-button\")\r\niconImportButton.onclick = () => {\r\n    handleFile()\r\n}","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { scaleRatio, assetScale } from './assetScaling'\r\nimport { FontConfig, makeMergedConfig, createGoogleFontString } from './models/assetStyles'\r\n\r\n\r\nconst WriteIn = (props: { writeIn?: string }) => {\r\n    return props.writeIn ?\r\n        <div className=\"write-in\">{props.writeIn}</div> :\r\n        null\r\n}\r\n\r\nconst Description = (props: { description: string }) => {\r\n    return props.description ?\r\n        <div className=\"description\">{props.description}</div> :\r\n        null\r\n}\r\n\r\ninterface Ability {\r\n    name: string,\r\n    filled: boolean,\r\n    text: string\r\n}\r\nconst Ability = (props: { ability: Ability }) => {\r\n    const createAbilityName = (name) => {\r\n        if (name) {\r\n            return <span className=\"ability-name\">{name}</span>\r\n        } else {\r\n            return \"\"\r\n        }\r\n    }\r\n    //TODO: either sanitize first and only allow `b`, `em`, and `li` or parse markdown or custom markup\r\n    return (\r\n        <div className=\"ability\">\r\n            <i className={props.ability.filled ? \"dot filled\" : \"dot unfilled\"}></i>\r\n            <div className=\"ability-description\">\r\n                {createAbilityName(props.ability.name)}\r\n                <span dangerouslySetInnerHTML={{ __html: props.ability.text }}></span>\r\n            </div>\r\n        </div>)\r\n}\r\n\r\nconst TrackValue = (props: { track: number, value: number, scale: string }) => {\r\n    if (props.value > props.track) {\r\n        return <div className=\"value empty\">\r\n            <svg xmlns='http://www.w3.org/2000/svg'\r\n                version='1.1'\r\n                preserveAspectRatio='none'\r\n                viewBox='0 0 100 100'\r\n                height={95 * scaleRatio[props.scale]}\r\n                width={113 * scaleRatio[props.scale]}>\r\n                <line x1='0' y1='100' x2='100' y2='0' stroke='rgb(65,64,66)' style={{ strokeWidth: 3.5 }} />\r\n            </svg>\r\n        </div>\r\n    } else {\r\n        return <div className=\"value number\">+{props.value}</div>\r\n    }\r\n}\r\n\r\nconst Track = (props: { track: string[] | number, scale: string }) => {\r\n    if (!props.track) {\r\n        return null\r\n    } else if (Array.isArray(props.track)) {\r\n        const innerEntries = props.track.map((entry, index) => {\r\n            return <div className=\"value text\" key={index}>{entry}</div>\r\n        })\r\n        return <div className=\"track\">\r\n            {innerEntries}\r\n        </div>\r\n    } else {\r\n        let trackLength = props.track > 5 ? props.track : 5\r\n        let innerEntries = []\r\n\r\n        for (let i = 1; i <= trackLength; i++) {\r\n            innerEntries.push(<TrackValue track={props.track} value={i} scale={props.scale} key={i}></TrackValue>)\r\n        }\r\n        return <div className=\"track\">\r\n            <div className=\"value\">0</div>\r\n            {innerEntries}\r\n        </div>\r\n    }\r\n}\r\n\r\nconst Icon = (props: { icon: string | { svg: { d: string, fill: string, fillOpacity: number } }, scale: string }) => {\r\n    if (typeof props.icon === \"string\") {\r\n        return (\r\n            <div className=\"header-circle\">\r\n                <i className=\"header-icon\">{props.icon}</i>\r\n            </div>)\r\n    } else if (typeof props.icon === \"object\") {\r\n        return (\r\n            <div className=\"header-circle\">\r\n                <svg\r\n                    height={154 * scaleRatio[props.scale]}\r\n                    width={154 * scaleRatio[props.scale]}\r\n                    viewBox=\"0 0 512 512\">\r\n                    <g>\r\n                        <path d={props.icon.svg.d} fill={props.icon.svg.fill} fillOpacity={props.icon.svg.fillOpacity}></path>\r\n                    </g>\r\n                </svg>\r\n            </div>)\r\n    } else {\r\n        return null\r\n    }\r\n}\r\n\r\nconst AssetStyles = (props: { fonts: object }) => {\r\n    //TODO: put styles onto corresponding elements directly instead of living 'dangerously'.\r\n    let fonts = props.fonts || {}\r\n    let fontConfig: FontConfig = makeMergedConfig(fonts)\r\n    let googleFonts = createGoogleFontString(fontConfig.assetTypeFont, fontConfig.assetNameFont, fontConfig.detailsFont, fontConfig.trackFont)\r\n\r\n    //TODO: type these properties. (curious it's not a compile-time error. Maybe with strict: true in tsconfig?).\r\n    return (<>\r\n        <link rel=\"stylesheet\" href={googleFonts} />\r\n        <style dangerouslySetInnerHTML={{\r\n            __html: `\r\n                .type {\r\n                    font-size: ${fontConfig.assetTypeFontSize};\r\n                    font-family: \"${fontConfig.assetTypeFont}\";\r\n                }\r\n                .asset-name {\r\n                    font-size: ${fontConfig.assetNameFontSize};\r\n                    font-family: \"${fontConfig.assetNameFont}\";\r\n                }\r\n                .details {\r\n                    font-size: ${fontConfig.detailsFontSize};\r\n                    font-family: \"${fontConfig.detailsFont}\";\r\n                }\r\n                .value, .value.text, .value.number {\r\n                    font-size: ${fontConfig.trackFontSize};\r\n                    font-family: \"${fontConfig.trackFont}\";\r\n                }`\r\n        }}>\r\n\r\n        </style>\r\n    </>)\r\n}\r\n\r\ninterface Asset {\r\n    fonts: FontConfig,\r\n    type: string,\r\n    icon: string | { svg: { d: string, fill: string, fillOpacity: number } },\r\n    name: string,\r\n    writeIn: string,\r\n    description: string,\r\n    abilities: Ability[],\r\n    track: string[]\r\n}\r\n\r\ninterface AssetProps {\r\n    asset: Asset,\r\n    scale: { value: string }\r\n}\r\n\r\nexport const Asset = (props: AssetProps) => {\r\n    let asset = props.asset\r\n    return (<div className={`asset ${props.scale.value}`}>\r\n        <AssetStyles fonts={asset.fonts}></AssetStyles>\r\n        <div className=\"main-matter\">\r\n            <div className=\"top\">\r\n                <div className=\"type\">{asset.type}</div>\r\n                <Icon icon={asset.icon} scale={props.scale.value} />\r\n                <div className=\"asset-name\">{asset.name}</div>\r\n            </div>\r\n            <div className=\"details\">\r\n                <WriteIn writeIn={asset.writeIn}></WriteIn>\r\n                <Description description={asset.description} />\r\n                <div className=\"abilities\">\r\n                    {asset.abilities.map((ability, index) => <Ability ability={ability} key={index}></Ability>)}\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <Track track={asset.track} scale={props.scale.value} />\r\n    </div >)\r\n}\r\n\r\nexport const showAssetIn = (element, asset) => {\r\n    // TODO: watch for state changes inside of a react component instead of re-rendering everything    \r\n    ReactDOM.render(<Asset asset={asset} scale={assetScale} />,\r\n        element)\r\n}\r\n\r\nconst assetContainer = document.querySelector(\".assets\")\r\n\r\nexport const showAsset = (asset) => {\r\n    showAssetIn(assetContainer, asset)\r\n}\r\n","export type SvgIconV1 = {\r\n    type: \"svg\",\r\n    author: string,\r\n    name: string,\r\n    svg: string\r\n}\r\n\r\nexport type SvgProperties = {\r\n    d: string,\r\n    fill: string,\r\n    fillOpacity: string,\r\n    viewBox: string\r\n}\r\n\r\nexport type SvgIcon = {\r\n    type: \"svg\",\r\n    author: string,\r\n    name: string,\r\n    svg: SvgProperties\r\n}\r\n\r\nexport type AssetDocumentV1 = {\r\n    documentFormatVersion?: number,\r\n    fonts?: {\r\n        assetTypeFontSize?: string,\r\n        assetTypeFont?: string,\r\n        assetNameFontSize?: string,\r\n        assetNameFont?: string,\r\n        detailsFontSize?: string,\r\n        detailsFont?: string,\r\n        trackFontSize?: string,\r\n        trackFont?: string,\r\n    },\r\n    type: string,\r\n    name: string,\r\n    writeIn?: string,\r\n    track?: number | string[],\r\n    description: string,\r\n    abilities: Array<{ filled: boolean, name?: string, text: string }>,\r\n    icon?: string | SvgIconV1\r\n}\r\n\r\n\r\nexport type AssetDocument = {\r\n    documentFormatVersion: number,\r\n    fonts?: {\r\n        assetTypeFontSize?: string,\r\n        assetTypeFont?: string,\r\n        assetNameFontSize?: string,\r\n        assetNameFont?: string,\r\n        detailsFontSize?: string,\r\n        detailsFont?: string,\r\n        trackFontSize?: string,\r\n        trackFont?: string,\r\n    },\r\n    type: string,\r\n    name: string,\r\n    writeIn?: string,\r\n    track?: number | string[],\r\n    description: string,\r\n    abilities: Array<{ filled: boolean, name?: string, text: string }>,\r\n    icon?: string | SvgIcon\r\n}\r\n\r\ntype UnspecifiedAssetDocument = AssetDocumentV1 | AssetDocument\r\n\r\nconst extractPropertyValue = (key, svgString) => {\r\n    const regexp = new RegExp(`${key}=(?:\"|')(.*?)(?:\"|')`)\r\n    return (svgString.match(regexp) || [])[1]\r\n    //TODO: intelligent error here?\r\n}\r\n\r\nexport function transformSvgString(svgString: string): SvgProperties {\r\n    return {\r\n        d: extractPropertyValue(\"d\", svgString),\r\n        fill: extractPropertyValue(\"fill\", svgString),\r\n        fillOpacity: extractPropertyValue(\"opacity\", svgString),\r\n        viewBox: extractPropertyValue(\"viewBox\", svgString)\r\n    }\r\n}\r\n\r\nfunction transformToV2(v1: AssetDocumentV1): AssetDocument {\r\n    const v2: AssetDocument = {\r\n        documentFormatVersion: 2,\r\n        type: v1.type,\r\n        name: v1.name,\r\n        writeIn: v1.writeIn,\r\n        track: v1.track,\r\n        description: v1.description,\r\n        abilities: v1.abilities,\r\n    }\r\n    if (typeof v1.fonts === \"object\") {\r\n        v2.fonts = {\r\n            assetTypeFontSize: v1.fonts.assetTypeFontSize,\r\n            assetTypeFont: v1.fonts.assetTypeFont,\r\n            assetNameFontSize: v1.fonts.assetNameFontSize,\r\n            assetNameFont: v1.fonts.assetNameFont,\r\n            detailsFontSize: v1.fonts.detailsFontSize,\r\n            detailsFont: v1.fonts.detailsFont,\r\n            trackFontSize: v1.fonts.trackFontSize,\r\n            trackFont: v1.fonts.trackFont,\r\n        }\r\n    }\r\n    if (typeof v1.icon === \"string\") {\r\n        v2.icon = v1.icon\r\n    } else if (typeof v1.icon === \"object\") {\r\n        v2.icon = {\r\n            type: \"svg\",\r\n            author: v1.icon.author,\r\n            name: v1.icon.name,\r\n            svg: transformSvgString(v1.icon.svg)\r\n        }\r\n\r\n    }\r\n    return v2\r\n}\r\n\r\nexport function transformToLatest(schema: UnspecifiedAssetDocument): AssetDocument {\r\n    if (!schema.documentFormatVersion) {\r\n        return transformToV2(schema as AssetDocumentV1)\r\n    }\r\n    else if (schema.documentFormatVersion === 2) {\r\n        return schema as AssetDocument\r\n    }\r\n}\r\n","import { ironclad, lightbearer, caveLion, berserker } from './exampleAssets'\r\nimport { setCurrentAsset } from './editor'\r\n\r\nconst showSingleAssetExample = (asset) => {\r\n    setCurrentAsset(asset)\r\n}\r\n\r\nexport const loadDefaultExampleAsset = () => showSingleAssetExample(caveLion)\r\n\r\nconst showLightbearerAssetButton: HTMLButtonElement = document.querySelector(\"#lightbearer-example\")\r\nshowLightbearerAssetButton.onclick = () => showSingleAssetExample(lightbearer)\r\n\r\nconst showIroncladAssetButton: HTMLButtonElement = document.querySelector(\"#ironclad-example\")\r\nshowIroncladAssetButton.onclick = () => showSingleAssetExample(ironclad)\r\n\r\nconst showCaveLionAssetButton: HTMLButtonElement = document.querySelector(\"#cave-lion-example\")\r\nshowCaveLionAssetButton.onclick = () => showSingleAssetExample(caveLion)","export const showScreen = (screen) => {\r\n    if (screen === \"preview-download\") {\r\n        document.body.className = \"preview-download-screen\"\r\n    } else if (screen === \"main\") {\r\n        document.body.className = \"main-screen\"\r\n    } else if (screen === \"render\") {\r\n        document.body.className = \"render\"\r\n    } else if (screen === \"help\") {\r\n        document.body.className = \"help-screen\"\r\n    }\r\n}","import { showAssetIn } from './asset'\r\nimport { showScreen } from './router'\r\nimport { currentAsset } from './editor'\r\nimport html2canvas from 'html2canvas'\r\n\r\nconst saveImage = (uri, filename) => {\r\n    const link = document.createElement('a')\r\n    link.href = uri\r\n    link.download = filename\r\n    document.body.appendChild(link)\r\n    link.click()\r\n    document.body.removeChild(link)\r\n}\r\n\r\nconst downloadContainer = document.querySelector(\".image-container\")\r\n\r\nconst renderOnCanvas = (asset, callback) => {\r\n    const render = document.querySelector('.render')\r\n    showScreen('render')\r\n    showAssetIn(render, asset)\r\n    window.scrollTo(0, 0)\r\n    html2canvas(render.firstChild as HTMLElement,\r\n        {\r\n            allowTaint: true\r\n        }).then(canvas => {\r\n            downloadContainer.appendChild(canvas)\r\n            callback(canvas)\r\n        })\r\n}\r\n\r\n\r\nconst closeDownload = () => {\r\n    downloadContainer.innerHTML = \"\"\r\n    showScreen('main')\r\n}\r\n\r\nconst previewDownloadButton: HTMLButtonElement = document.querySelector(\"#preview-download\")\r\npreviewDownloadButton.onclick =\r\n    () => renderOnCanvas(currentAsset, canvas => showScreen('preview-download'))\r\n\r\nconst downloadButton: HTMLButtonElement = document.querySelector(\"#download\")\r\ndownloadButton.onclick = () => {\r\n    renderOnCanvas(currentAsset,\r\n        canvas => {\r\n            saveImage(canvas.toDataURL(), currentAsset.name + \".png\")\r\n            closeDownload()\r\n        })\r\n}\r\n\r\n\r\nconst closeDownloadbutton: HTMLButtonElement = document.querySelector(\"#done-downloading\")\r\ncloseDownloadbutton.onclick = closeDownload","import './index.css'\r\nimport { loadDefaultExampleAsset } from './exampleAssetLoader'\r\nimport { showScreen } from './router'\r\nimport './download'\r\n\r\nconst showHelpButton: HTMLButtonElement = document.querySelector('#show-help')\r\nshowHelpButton.onclick = () => showScreen(\"help\")\r\nconst closeHelpbutton: HTMLButtonElement = document.querySelector(\"#close-help\")\r\ncloseHelpbutton.onclick = () => showScreen(\"main\")\r\n\r\nloadDefaultExampleAsset()"],"sourceRoot":""}