{"version":3,"sources":["models/assetModels.ts","SidePanel/LabeledInputs.tsx","SidePanel/DetailsEditor/views/AbilitiesView.tsx","SidePanel/DetailsEditor/views/TopView.tsx","SidePanel/DetailsEditor/views/TrackView.tsx","models/assetStyleModels.ts","SidePanel/DetailsEditor/views/FontsView.tsx","SidePanel/DetailsEditor/DetailsEditor.tsx","SidePanel/SidePanel.tsx","models/assetTransformation.ts","assetScaling.ts","Asset/Asset.tsx","Asset/sanitize.ts","SidePanel/Download.tsx","AssetChoice.tsx","AssetSelection.tsx","exampleAssets.ts","AssetCardButton.tsx","AssetCreation.tsx","App.tsx","models/collectionTransformation.ts","models/collection.ts","index.tsx"],"names":["extractPropertyValue","key","svgString","regexp","RegExp","match","transformSvgString","d","fill","fillOpacity","viewBox","LabeledTextInput","props","className","label","type","id","value","onChange","handleChange","LabeledTextAreaInput","LabeledCheckBox","checked","LabeledNumberInput","console","log","step","min","max","e","currentTarget","AbilityInput","ability","name","updateAbility","filled","onClick","removeAbility","text","AbilitiesView","index","this","currentAsset","abilities","updateAsset","splice","push","map","changed","addAbility","React","Component","TopView","writeIn","askToDelete","description","href","target","rel","htmlFor","defaultValue","icon","handleIconImport","LabeledRadioInput","TrackView","track","clone","cloneDeep","handleTrackTypeChange","Array","isArray","handleNumericalTrackChange","join","values","split","val","trim","defaultFontConfig","assetTypeFontSize","assetTypeFont","assetNameFontSize","assetNameFont","detailsFontSize","detailsFont","trackFontSize","trackFont","makeMergedConfig","config","merged","Object","assign","FontInputs","idPrefix","font","handleFontChange","em","size","replace","handleSizeChange","FontsView","configuredFonts","fonts","useState","updateFonts","setFontProperty","newFonts","setSizeProperty","ViewSwitchButton","classes","view","activeView","handleClick","children","ViewSwitcher","switchView","DetailsEditor","state","editorJSON","errorText","setState","json","JSON","parse","error","toString","iconFileInput","document","querySelector","iconAuthorInput","file","files","fileReader","FileReader","onload","svg","result","slice","author","readAsText","alert","asset","spellCheck","stringify","handleJSONChange","resetEditorJson","previewAssetImage","downloadAssetImage","SidePanel","handleAssetScaleChange","assetScale","showScreen","transformToLatest","schema","documentFormatVersion","v1","v2","transformToV2","scaleRatio","WriteIn","Description","Ability","sanitizedText","sanitizer","allowedTags","allowedAttributes","dangerouslySetInnerHTML","__html","TrackValue","xmlns","version","preserveAspectRatio","height","scale","width","x1","y1","x2","y2","stroke","style","strokeWidth","Track","innerEntries","entry","trackLength","Math","i","Icon","makeFontStyles","unmergedFonts","googleFontUrl","urlifiedFonts","from","Set","filter","createGoogleFontString","fontFamily","fontSize","assetName","details","Asset","Download","canvas","link","createElement","toDataURL","download","body","appendChild","click","removeChild","window","scrollTo","render","html2canvas","firstChild","allowTaint","then","preview","src","alt","goBackToMain","saveImage","AssetChoice","transformedAsset","AssetSelection","assets","chooseAsset","showNewScreen","ironclad","lightbearer","caveLion","AssetCardButton","AssetCreation","createAsset","createBlankAsset","example","showChooseScreen","sussCurrentCollection","maybeCollections","maybeAsset","length","createCollection","App","startingCollection","maybeGetLocalCollections","maybeGetLocalAsset","startingScale","innerHeight","currentAssetIndex","currentCollection","currentScreen","previewDownload","localStorage","getItem","newScale","collection","setItem","persistCollection","confirm","screen","ReactDOM"],"mappings":"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","file":"static/js/main.b89e048b.chunk.js","sourcesContent":["export type SvgIconV1 = {\r\n    type: \"svg\",\r\n    author: string,\r\n    name: string,\r\n    svg: string\r\n}\r\n\r\nexport type SvgProperties = {\r\n    d: string,\r\n    fill: string,\r\n    fillOpacity: string,\r\n    viewBox: string\r\n}\r\n\r\nexport type SvgIcon = {\r\n    type: \"svg\",\r\n    author: string,\r\n    name: string,\r\n    svg: SvgProperties\r\n}\r\n\r\nexport type Ability = {\r\n    filled: boolean,\r\n    name?: string,\r\n    text: string\r\n}\r\n\r\nexport type AssetDocumentV1 = {\r\n    documentFormatVersion?: number,\r\n    fonts?: {\r\n        assetTypeFontSize?: string,\r\n        assetTypeFont?: string,\r\n        assetNameFontSize?: string,\r\n        assetNameFont?: string,\r\n        detailsFontSize?: string,\r\n        detailsFont?: string,\r\n        trackFontSize?: string,\r\n        trackFont?: string,\r\n    },\r\n    type: string,\r\n    name: string,\r\n    writeIn?: string,\r\n    track?: number | string[],\r\n    description: string,\r\n    abilities: Array<{ filled: boolean, name?: string, text: string }>,\r\n    icon?: string | SvgIconV1\r\n}\r\n\r\n\r\nexport interface AssetDocument {\r\n    documentFormatVersion: number,\r\n    fonts?: {\r\n        assetTypeFontSize?: string,\r\n        assetTypeFont?: string,\r\n        assetNameFontSize?: string,\r\n        assetNameFont?: string,\r\n        detailsFontSize?: string,\r\n        detailsFont?: string,\r\n        trackFontSize?: string,\r\n        trackFont?: string,\r\n    },\r\n    type: string,\r\n    name: string,\r\n    writeIn?: string,\r\n    track?: number | string[],\r\n    description: string,\r\n    abilities: Array<Ability>,\r\n    icon?: string | SvgIcon\r\n}\r\n\r\nexport interface UnspecifiedAssetDocument {\r\n    documentFormatVersion?: number,\r\n    type: string,\r\n    name: string\r\n}\r\n\r\nexport function createBlankAsset(properties = {}): AssetDocument {\r\n    return {\r\n        documentFormatVersion: 2,\r\n        abilities: [],\r\n        description: \"\",\r\n        name: \"Your Asset\",\r\n        type: \"\",\r\n        fonts: {},\r\n        icon: \"\",\r\n        track: null,\r\n        writeIn: \"\"\r\n    }\r\n}\r\n\r\nconst extractPropertyValue = (key, svgString) => {\r\n    const regexp = new RegExp(`${key}=(?:\"|')(.*?)(?:\"|')`)\r\n    return (svgString.match(regexp) || [])[1]\r\n    //TODO: intelligent error here?\r\n}\r\n\r\nexport function transformSvgString(svgString: string): SvgProperties {\r\n    return {\r\n        d: extractPropertyValue(\"d\", svgString),\r\n        fill: extractPropertyValue(\"fill\", svgString),\r\n        fillOpacity: extractPropertyValue(\"opacity\", svgString),\r\n        viewBox: extractPropertyValue(\"viewBox\", svgString)\r\n    }\r\n}\r\n\r\n\r\n","import React from 'react';\r\n\r\nexport function LabeledTextInput(props: {\r\n    label: string,\r\n    value: string,\r\n    id: string,\r\n    handleChange(e): void\r\n}) {\r\n    return (\r\n        <div className=\"text-input\">\r\n            <label>{props.label}</label>\r\n            <input type=\"text\" id={props.id} value={props.value} onChange={props.handleChange}></input>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport function LabeledTextAreaInput(props: {\r\n    label: string,\r\n    value: string,\r\n    className: string,\r\n    handleChange(e): void\r\n}) {\r\n    return (\r\n        <div className=\"text-input\">\r\n            <label>{props.label}</label>\r\n            <textarea className={props.className} value={props.value} onChange={props.handleChange}></textarea>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport function LabeledCheckBox(props: {\r\n    label: string,\r\n    value: boolean,\r\n    className: string,\r\n    handleChange(e): void\r\n}) {\r\n    return (\r\n        <div className=\"checkbox-input\">\r\n            <label>{props.label}</label>\r\n            <input type=\"checkbox\" className={props.className} checked={props.value} onChange={props.handleChange}></input>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport function LabeledNumberInput(props: {\r\n    label: string,\r\n    value: number,\r\n    step: string,\r\n    id: string,\r\n    handleChange(value: number)\r\n}) {\r\n\r\n    const MAX = 100;\r\n\r\n    //number inputs have lots of quirks. Definitely incentive to use a component library.\r\n    const makeHandleChange = (handleChange: (value: number) => void) => {\r\n        return (e) => {\r\n            let value = +e.currentTarget.value\r\n            if (value > MAX) {\r\n                value = MAX\r\n            }\r\n            handleChange(value)\r\n        }\r\n    }\r\n\r\n    console.log(\"value is \", props.value)\r\n\r\n    return (<div className=\"number-input\">\r\n        <label>{props.label}</label>\r\n        <input type=\"number\"\r\n            id={props.id}\r\n            // displaying a non-deletable zero that pads the left is wonky, so '' is preferable here\r\n            value={+props.value || ''}\r\n            step={props.step}\r\n            min=\"0\"\r\n            max={MAX}\r\n            onChange={makeHandleChange(props.handleChange)}></input>\r\n    </div>);\r\n}","import React from 'react';\r\nimport { AssetDocument, Ability } from '../../../models/assetModels';\r\nimport { LabeledTextInput, LabeledCheckBox, LabeledTextAreaInput } from '../../LabeledInputs';\r\n\r\ntype AbilitiesViewProps = {\r\n    currentAsset: AssetDocument;\r\n    updateAsset(asset): void;\r\n};\r\n\r\nfunction AbilityInput(props: {\r\n    ability: Ability,\r\n    updateAbility(value): void,\r\n    removeAbility(ability): void\r\n}) {\r\n    return (\r\n        <div className=\"ability-input\">\r\n            <div className=\"ability-input-top\">\r\n                <div className=\"ability-input-top-fields\">\r\n                    <LabeledTextInput label=\"Name (optional)\" id=\"ability-name-input\" value={props.ability.name || \"\"} handleChange={(e) => {\r\n                        props.ability.name = e.currentTarget.value\r\n                        props.updateAbility(props.ability)\r\n                    }}></LabeledTextInput>\r\n                    <LabeledCheckBox label=\"Filled\" className=\"ability-filled-input\" value={props.ability.filled || false} handleChange={(e) => {\r\n                        props.ability.filled = !props.ability.filled\r\n                        props.updateAbility(props.ability)\r\n                    }}></LabeledCheckBox>\r\n                </div>\r\n                <button className=\"ability-button remove-ability\" onClick={() => props.removeAbility(props.ability)}>remove</button>\r\n            </div>\r\n            <LabeledTextAreaInput label=\"Ability Text\" className=\"ability-text-input\" value={props.ability.text || \"\"} handleChange={(e) => {\r\n                props.ability.text = e.currentTarget.value\r\n                props.updateAbility(props.ability)\r\n            }}></LabeledTextAreaInput>\r\n        </div>\r\n    )\r\n}\r\nexport class AbilitiesView extends React.Component<AbilitiesViewProps> {\r\n    updateAbility(ability, index) {\r\n        this.props.currentAsset.abilities[index] = ability;\r\n        this.props.updateAsset(this.props.currentAsset);\r\n    }\r\n    removeAbility(index) {\r\n        this.props.currentAsset.abilities.splice(index, 1);\r\n        this.props.updateAsset(this.props.currentAsset);\r\n    }\r\n    addAbility() {\r\n        this.props.currentAsset.abilities.push({\r\n            filled: false,\r\n            name: \"\",\r\n            text: \"\"\r\n        });\r\n        this.props.updateAsset(this.props.currentAsset);\r\n    }\r\n    render() {\r\n        return (<div className=\"editor-view\">\r\n            <div className=\"vertical\">\r\n                {this.props.currentAsset.abilities.map((ability, index) => {\r\n                    return <AbilityInput key={index} ability={ability} updateAbility={(changed) => this.updateAbility(changed, index)} removeAbility={() => this.removeAbility(index)}></AbilityInput>;\r\n                })}\r\n                <button className=\"ability-button\" onClick={() => this.addAbility()}>Add</button>\r\n            </div>\r\n        </div>);\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { LabeledTextInput, LabeledTextAreaInput } from '../../LabeledInputs';\r\nimport { AssetDocument } from '../../../models/assetModels';\r\n\r\ntype TopViewProps = {\r\n    currentAsset: AssetDocument;\r\n    updateAsset(asset): void;\r\n    askToDelete(): void;\r\n    handleIconImport(): void; //todo: move fully inte here\r\n};\r\n\r\nexport class TopView extends React.Component<TopViewProps> {\r\n    render() {\r\n        return (<div className=\"editor-view misc-editor-view\">\r\n            <div className=\"horizontal\">\r\n                <div className=\"vertical\">\r\n                    <LabeledTextInput label=\"Asset Name\" id=\"asset-name-input\" value={this.props.currentAsset.name} handleChange={(e) => {\r\n                        this.props.currentAsset.name = e.currentTarget.value;\r\n                        this.props.updateAsset(this.props.currentAsset);\r\n                    }}></LabeledTextInput>\r\n                    <LabeledTextInput label=\"Type\" id=\"asset-type-input\" value={this.props.currentAsset.type} handleChange={(e) => {\r\n                        this.props.currentAsset.type = e.currentTarget.value;\r\n                        this.props.updateAsset(this.props.currentAsset);\r\n                    }}></LabeledTextInput>\r\n                    <LabeledTextInput label=\"Write-in (optional)\" id=\"asset-write-in-input\" value={this.props.currentAsset.writeIn || \"\"} handleChange={(e) => {\r\n                        this.props.currentAsset.writeIn = e.currentTarget.value;\r\n                        this.props.updateAsset(this.props.currentAsset);\r\n                    }}></LabeledTextInput>\r\n\r\n                </div>\r\n                <div>\r\n                    <button onClick={this.props.askToDelete}>DELETE ASSET</button>\r\n                </div>\r\n            </div>\r\n            <LabeledTextAreaInput label=\"Description (optional)\" className=\"asset-description-input\" value={this.props.currentAsset.description} handleChange={(e) => {\r\n                this.props.currentAsset.description = e.currentTarget.value;\r\n                this.props.updateAsset(this.props.currentAsset);\r\n            }}></LabeledTextAreaInput>\r\n            <div className=\"icon-import\">\r\n                <div className=\"icon-import-helptext\">\r\n                    <p>SVG icons are supported. Use a transparent background for best results.</p>\r\n                    <ol>\r\n                        <li>Head over to <a href=\"https://game-icons.net/\" target=\"_blank\" rel=\"noopener noreferrer\">GameIcons.net</a>, a wonderful resource of Creative Commons-licensed icons.</li>\r\n                        <li>On the left hand side, with \"Studio\" set to background, set \"Type\" to \"none\" (for a transparent\r\n                background).</li>\r\n                        <li>Download the icon.</li>\r\n                        <li>Click \"browse...\" under \"Icon to import\" below here and select the just-downloaded icon.</li>\r\n                        <li>Fill in the artist's name and click \"IMPORT\".</li>\r\n                    </ol>\r\n                </div>\r\n\r\n                <div className=\"icon-import-controls\">\r\n                    <div className=\"icon-import-fileselect\">\r\n                        <label htmlFor=\"icon-fileselect\">Icon to import</label>\r\n                        <input type=\"file\" id=\"icon-fileselect\" />\r\n                    </div>\r\n                    <div className=\"icon-import-author\">\r\n                        <label htmlFor=\"icon-author\">Icon Artist</label>\r\n                        <input type=\"text\" id=\"icon-author\" defaultValue={(this.props.currentAsset.icon || {})['author'] || \"\"} />\r\n                        {/* todo: standardize icon schema across types */}\r\n                    </div>\r\n                    <button id=\"icon-import-button\" onClick={() => this.props.handleIconImport()}> Import </button>\r\n                </div>\r\n            </div>\r\n        </div >);\r\n    }\r\n}\r\n","import React from 'react'\r\nimport { cloneDeep } from 'lodash'\r\nimport { AssetDocument } from '../../../models/assetModels'\r\nimport { LabeledTextAreaInput, LabeledNumberInput } from '../../LabeledInputs'\r\n\r\ntype TrackType = \"none\" | \"numerical\" | \"text\"\r\n\r\nfunction LabeledRadioInput(props: {\r\n    label: string,\r\n    checked: boolean,\r\n    value: TrackType,\r\n    onChange(e)\r\n}) {\r\n    return (<div>\r\n        <input\r\n            type=\"radio\"\r\n            id={`choose-track-${props.value}`}\r\n            value={props.value}\r\n            checked={props.checked}\r\n            onChange={props.onChange} />\r\n        <label>{props.label}</label>\r\n    </div>);\r\n}\r\n\r\n\r\ntype TrackViewProps = {\r\n    currentAsset: AssetDocument, //todo: not require passing in the entire asset to every view\r\n    updateAsset(asset): void\r\n}\r\n\r\nexport default class TrackView extends React.Component<TrackViewProps> {\r\n    handleTrackTypeChange(e) {\r\n        if (e.currentTarget.value === \"none\") {\r\n            this.props.currentAsset.track = null\r\n            this.props.updateAsset(this.props.currentAsset)\r\n        } else if (e.currentTarget.value === \"numerical\") {\r\n            this.props.currentAsset.track = 5\r\n            this.props.updateAsset(this.props.currentAsset)\r\n        } else if (e.currentTarget.value === \"text\") {\r\n            this.props.currentAsset.track = [\"Value 1\", \"Value 2\"]\r\n            this.props.updateAsset(this.props.currentAsset)\r\n        }\r\n    }\r\n\r\n    handleNumericalTrackChange(value: number) {\r\n        let clone = cloneDeep(this.props.currentAsset)\r\n        clone.track = +value\r\n        this.props.updateAsset(clone)\r\n    }\r\n\r\n    render() {\r\n        return (<div className=\"editor-view\">\r\n            <label>Type of Track</label>\r\n            <LabeledRadioInput label=\"No track\"\r\n                checked={this.props.currentAsset.track == null}\r\n                onChange={(e) => this.handleTrackTypeChange(e)}\r\n                value=\"none\"></LabeledRadioInput>\r\n            <LabeledRadioInput label=\"Numerical\"\r\n                checked={(typeof (this.props.currentAsset.track) === \"number\")}\r\n                onChange={(e) => this.handleTrackTypeChange(e)}\r\n                value=\"numerical\"></LabeledRadioInput>\r\n            <LabeledRadioInput label=\"Text\"\r\n                checked={Array.isArray(this.props.currentAsset.track)}\r\n                onChange={(e) => this.handleTrackTypeChange(e)}\r\n                value=\"text\"></LabeledRadioInput>\r\n\r\n            {(typeof (this.props.currentAsset.track) === \"number\") &&\r\n                <LabeledNumberInput\r\n                    label=\"Number of Values\"\r\n                    value={this.props.currentAsset.track}\r\n                    step=\"1\"\r\n                    id=\"track-number-input\"\r\n                    handleChange={(e) => this.handleNumericalTrackChange(e)}></LabeledNumberInput>}\r\n\r\n            {Array.isArray(this.props.currentAsset.track) &&\r\n                <LabeledTextAreaInput label=\"Options (comma-delimited)\"\r\n                    className=\"track-options-input\"\r\n                    value={this.props.currentAsset.track.join(', ')}\r\n                    handleChange={(e) => {\r\n                        let values = e.currentTarget.value.split(\",\").map((val) => val.trim())\r\n                        this.props.currentAsset.track = values //todo: not mutate at every turn\r\n                        this.props.updateAsset(this.props.currentAsset)\r\n                    }}></LabeledTextAreaInput>}\r\n        </div>)\r\n    }\r\n}","export const createGoogleFontString = (...fonts) => {\r\n    let urlifiedFonts = Array.from(new Set(fonts))\r\n        .filter(font => font)\r\n        .map(font => font.replace(/ /g, \"+\"))\r\n        .join(\"|\");\r\n    return urlifiedFonts ? `https://fonts.googleapis.com/css?family=${urlifiedFonts}&display=swap` : \"\";\r\n};\r\n\r\nexport const defaultFontConfig = {\r\n    assetTypeFontSize: \"1.03em\",\r\n    assetTypeFont: \"Simonetta\",\r\n    assetNameFontSize: \"1.26em\",\r\n    assetNameFont: \"Simonetta\",\r\n    detailsFontSize: \"0.97em\",\r\n    detailsFont: \"PT Serif\",\r\n    trackFontSize: \"1.42em\",\r\n    trackFont: \"Simonetta\"\r\n};\r\n\r\nexport const makeMergedConfig = (config = {}): FontConfig => {\r\n    let merged = Object.assign({}, defaultFontConfig)\r\n    for (let key in merged) {\r\n        merged[key] = config[key] || merged[key]\r\n    }\r\n    return merged\r\n};\r\n\r\nexport interface FontConfig {\r\n    assetTypeFontSize?: string;\r\n    assetTypeFont?: string;\r\n    assetNameFontSize?: string;\r\n    assetNameFont?: string;\r\n    detailsFontSize?: string;\r\n    detailsFont?: string;\r\n    trackFontSize?: string;\r\n    trackFont?: string;\r\n}\r\n","import React, { useState } from 'react'\r\nimport { LabeledTextInput, LabeledNumberInput } from '../../LabeledInputs'\r\nimport { AssetDocument } from '../../../models/assetModels'\r\nimport { makeMergedConfig, defaultFontConfig } from '../../../models/assetStyleModels'\r\nimport { assign } from 'lodash'\r\n\r\nfunction numberFromEm(em) {\r\n    return +(em.replace(\"em\", \"\"))\r\n}\r\n\r\nfunction emFromNumber(number) {\r\n    return number + \"em\"\r\n}\r\n\r\nfunction FontInputs(props: {\r\n    label: string,\r\n    idPrefix: string,\r\n    font: string,\r\n    size: string,\r\n    handleFontChange(e),\r\n    handleSizeChange(e)\r\n}) {\r\n    return (<div className=\"font-inputs\">\r\n        <LabeledTextInput\r\n            label={props.label}\r\n            id={`${props.idPrefix}-font-input`}\r\n            value={props.font}\r\n            handleChange={props.handleFontChange}></LabeledTextInput>\r\n        <LabeledNumberInput label={props.label} id={`${props.idPrefix}-size-input`} value={numberFromEm(props.size)} step=\"0.01\" handleChange={props.handleSizeChange}></LabeledNumberInput>\r\n    </div>)\r\n}\r\n\r\nexport default function FontsView(props: {\r\n    currentAsset: AssetDocument,\r\n    updateAsset(AssetDocument): void;\r\n}) {\r\n    const configuredFonts = makeMergedConfig(props.currentAsset.fonts || {})\r\n    const [fonts, updateFonts] = useState(configuredFonts)\r\n\r\n    function handleFontChange(setFontProperty) {\r\n        return (e) => {\r\n            const newFonts = { ...fonts }\r\n            setFontProperty(newFonts, e.currentTarget.value)\r\n            updateFonts(newFonts)\r\n        }\r\n    }\r\n\r\n    function handleSizeChange(setSizeProperty) {\r\n        return (value: number) => {\r\n            const newFonts = { ...fonts }\r\n            setSizeProperty(newFonts, emFromNumber(value))\r\n            updateFonts(newFonts)\r\n            props.currentAsset.fonts = newFonts\r\n            props.updateAsset(props.currentAsset)\r\n        }\r\n    }\r\n\r\n    return (<div className=\"editor-view\">\r\n        <h3>What fonts can I use?</h3>\r\n        <p>The fonts from <a href=\"https://fonts.google.com/\" target=\"_blank\" rel=\"noopener noreferrer\">Google Fonts</a> are supported. Put in the name of the font into the corresponding box here and you're all set! Note: font names are case-sensitive.</p>\r\n\r\n        <FontInputs\r\n            label=\"Asset Type font\"\r\n            idPrefix=\"asset-type\"\r\n            font={fonts.assetTypeFont}\r\n            size={fonts.assetTypeFontSize}\r\n            handleFontChange={handleFontChange((fonts, val) => fonts.assetTypeFont = val)}\r\n            handleSizeChange={handleSizeChange((fonts, val) => fonts.assetTypeFontSize = val)}></FontInputs>\r\n        <FontInputs\r\n            label=\"Asset Name font\"\r\n            idPrefix=\"asset-name\"\r\n            font={fonts.assetNameFont}\r\n            size={fonts.assetNameFontSize}\r\n            handleFontChange={handleFontChange((fonts, val) => fonts.assetNameFont = val)}\r\n            handleSizeChange={handleSizeChange((fonts, val) => fonts.assetNameFontSize = val)}></FontInputs>\r\n        <FontInputs\r\n            label=\"Details font\"\r\n            idPrefix=\"details\"\r\n            font={fonts.detailsFont}\r\n            size={fonts.detailsFontSize}\r\n            handleFontChange={handleFontChange((fonts, val) => fonts.detailsFont = val)}\r\n            handleSizeChange={handleSizeChange((fonts, val) => fonts.detailsFontSize = val)}></FontInputs>\r\n        <FontInputs\r\n            label=\"Track font\"\r\n            idPrefix=\"track\"\r\n            font={fonts.trackFont}\r\n            size={fonts.trackFontSize}\r\n            handleFontChange={handleFontChange((fonts, val) => fonts.trackFont = val)}\r\n            handleSizeChange={handleSizeChange((fonts, val) => fonts.trackFontSize = val)}></FontInputs>\r\n\r\n        <button id=\"fonts-update-button\"\r\n            onClick={(e) => {\r\n                props.currentAsset.fonts = fonts\r\n                props.updateAsset(props.currentAsset)\r\n            }}>update fonts</button>\r\n        <button onClick={() => {\r\n            props.currentAsset.fonts = defaultFontConfig\r\n            assign(fonts, defaultFontConfig)\r\n            props.updateAsset(props.currentAsset)\r\n        }}>Reset to Default</button>\r\n    </div>)\r\n}\r\n","import React from 'react'\r\nimport { AssetDocument, transformSvgString } from '../../models/assetModels'\r\nimport { AbilitiesView } from './views/AbilitiesView'\r\nimport { TopView } from './views/TopView'\r\nimport TrackView from './views/TrackView'\r\nimport FontsView from './views/FontsView'\r\n\r\ntype EditorView = \"JSON\" | \"top\" | \"abilities\" | \"track\" | \"fonts\" | \"export\"\r\n\r\nfunction ViewSwitchButton(props: {\r\n    view: EditorView,\r\n    activeView: EditorView,\r\n    children: string,\r\n    handleClick: (view: EditorView) => void\r\n}) {\r\n    const classes = props.view === props.activeView ? \"change-view selected\" : \"change-view\"\r\n    return (<button id={\"show-\" + props.view + \"-view\"} className={classes} onClick={() => props.handleClick(props.view)}>{props.children}</button>)\r\n}\r\n\r\nfunction ViewSwitcher(props: {\r\n    activeView: EditorView,\r\n    switchView: (view: EditorView) => void\r\n}) {\r\n    return (\r\n        <div className=\"view-switcher\">\r\n            <ViewSwitchButton view=\"top\" activeView={props.activeView} handleClick={(view) => props.switchView(view)} >TOP</ViewSwitchButton>\r\n            <ViewSwitchButton view=\"abilities\" activeView={props.activeView} handleClick={(view) => props.switchView(view)}>Abilities</ViewSwitchButton>\r\n            <ViewSwitchButton view=\"track\" activeView={props.activeView} handleClick={(view) => props.switchView(view)}>Track</ViewSwitchButton>\r\n            <ViewSwitchButton view=\"fonts\" activeView={props.activeView} handleClick={(view) => props.switchView(view)}>Fonts</ViewSwitchButton>\r\n            <ViewSwitchButton view=\"JSON\" activeView={props.activeView} handleClick={(view) => props.switchView(view)}>JSON</ViewSwitchButton>\r\n            <ViewSwitchButton view=\"export\" activeView={props.activeView} handleClick={(view) => props.switchView(view)}>export</ViewSwitchButton>\r\n        </div>\r\n    )\r\n}\r\n\r\ntype DetailsEditorProps = {\r\n    currentAsset: AssetDocument,\r\n    updateAsset(asset): void,\r\n    askToDelete(): void,\r\n    previewAssetImage(): void,\r\n    downloadAssetImage(): void\r\n}\r\n\r\ntype DetailsEditorState = {\r\n    activeView: EditorView,\r\n    editorJSON: string,\r\n    errorText: string\r\n}\r\n\r\nfunction asJSON(val) {\r\n    return JSON.stringify(val, null, 2)\r\n}\r\n\r\nexport default class DetailsEditor extends React.Component<DetailsEditorProps, DetailsEditorState> {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            editorJSON: \"\",\r\n            activeView: \"top\",\r\n            errorText: \"\"\r\n        }\r\n    }\r\n\r\n\r\n    switchView(view: EditorView) {\r\n        this.setState({\r\n            activeView: view\r\n        })\r\n    }\r\n\r\n    handleJSONChange(json) {\r\n        try {\r\n            this.props.updateAsset(JSON.parse(json))\r\n            this.setState({\r\n                editorJSON: \"\",\r\n                errorText: \"\"\r\n            })\r\n        } catch (error) {\r\n            this.setState({\r\n                editorJSON: json,\r\n                errorText: \"Error parsing JSON: \" + error.toString()\r\n            })\r\n        }\r\n    }\r\n\r\n    resetEditorJson() {\r\n        this.setState({\r\n            editorJSON: \"\",\r\n            errorText: \"\"\r\n        })\r\n    }\r\n\r\n    handleIconImport() {\r\n        //todo: move away from queryselecting and use React\r\n        const iconFileInput = document.querySelector(\"#icon-fileselect\") as HTMLInputElement\r\n        const iconAuthorInput = document.querySelector(\"#icon-author\") as HTMLInputElement\r\n\r\n        const file = iconFileInput.files[0];\r\n        if (file) {\r\n            var fileReader = new FileReader()\r\n            fileReader.onload = (e) => {\r\n                var svg = e.target.result as string\r\n                this.props.currentAsset.icon = {\r\n                    type: \"svg\",\r\n                    name: file.name.split('.').slice(0, -1).join('.'),\r\n                    author: iconAuthorInput.value,\r\n                    svg: transformSvgString(svg)\r\n                }\r\n                this.props.updateAsset(this.props.currentAsset)\r\n            }\r\n            fileReader.readAsText(file)\r\n        } else {\r\n            alert(\"missing file\")\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"editor\">\r\n                <ViewSwitcher activeView={this.state.activeView} switchView={(view) => this.switchView(view)}></ViewSwitcher>\r\n                {this.state.activeView === \"top\" &&\r\n                    <TopView\r\n                        currentAsset={this.props.currentAsset}\r\n                        updateAsset={(asset) => this.props.updateAsset(asset)}\r\n                        askToDelete={() => this.props.askToDelete()}\r\n                        handleIconImport={() => this.handleIconImport()}></TopView>\r\n                }\r\n\r\n                {this.state.activeView === \"abilities\" &&\r\n                    <AbilitiesView\r\n                        currentAsset={this.props.currentAsset}\r\n                        updateAsset={(asset) => this.props.updateAsset(asset)}></AbilitiesView>\r\n                }\r\n\r\n                {this.state.activeView === \"track\" &&\r\n                    <TrackView\r\n                        currentAsset={this.props.currentAsset}\r\n                        updateAsset={(asset) => this.props.updateAsset(asset)}></TrackView>\r\n                }\r\n\r\n                {this.state.activeView === \"fonts\" &&\r\n                    <FontsView\r\n                        currentAsset={this.props.currentAsset}\r\n                        updateAsset={(asset) => this.props.updateAsset(asset)}></FontsView>\r\n\r\n                }\r\n\r\n                {this.state.activeView === \"JSON\" &&\r\n                    <div className=\"editor-view\">\r\n                        <div>\r\n                            <textarea\r\n                                className=\"interface-input thin-box-border\"\r\n                                spellCheck=\"false\"\r\n                                value={this.state.editorJSON || asJSON(this.props.currentAsset)}\r\n                                onChange={(e) => this.handleJSONChange(e.currentTarget.value)}\r\n                            >\r\n                            </textarea>\r\n                        </div>\r\n                        <div className=\"json-error-container\">\r\n                            {this.state.errorText &&\r\n                                <div className=\"json-error\">\r\n                                    {this.state.errorText}\r\n                                    <button onClick={() => this.resetEditorJson()}>Reset to valid state</button>\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                }\r\n\r\n                {this.state.activeView === \"export\" &&\r\n                    <div className=\"editor-view\">\r\n                        <div className=\" export vertical\">\r\n                            <p>Use the buttons below to get your asset in PNG format. Preview will show you the generated image in the browser, while Download will bring up your browser's save dialog.</p>\r\n                            <button id=\"preview-download\" onClick={() => this.props.previewAssetImage()}> preview as image </button>\r\n                            <button id=\"download\" onClick={() => this.props.downloadAssetImage()}> download as image </button>\r\n                        </div>\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}","import { AssetDocument } from '../models/assetModels'\r\nimport React from 'react'\r\nimport DetailsEditor from './DetailsEditor/DetailsEditor'\r\n\r\n\r\ntype SidePanelProps = {\r\n    currentAsset: AssetDocument,\r\n    updateAsset(asset: AssetDocument): void,\r\n    askToDelete(): void,\r\n    assetScale: string,\r\n    handleAssetScaleChange(newScale: string): void\r\n    showScreen(screen): void,\r\n    previewAssetImage(): void,\r\n    downloadAssetImage(): void\r\n}\r\n\r\nexport function SidePanel(props: SidePanelProps) {\r\n    return (<div className=\"interface\">\r\n        <DetailsEditor\r\n            currentAsset={props.currentAsset}\r\n            updateAsset={props.updateAsset}\r\n            askToDelete={props.askToDelete}\r\n            previewAssetImage={props.previewAssetImage}\r\n            downloadAssetImage={props.downloadAssetImage}></DetailsEditor>\r\n\r\n        <div className=\"bottom-controls\">\r\n            <div>\r\n                <label>Scale (also affects Download size)</label>\r\n                <select\r\n                    id=\"scale-select\"\r\n                    onChange={(e) => props.handleAssetScaleChange(e.target.value)}\r\n                    value={props.assetScale}\r\n                >\r\n                    <option value=\"one-third\">250px by 350px</option>\r\n                    <option value=\"one-half\">375px by 525px</option>\r\n                    <option value=\"two-thirds\">500px by 700px</option>\r\n                    <option value=\"full\">750px by 1050px</option>\r\n                </select>\r\n            </div>\r\n            <button className=\"asset-back-button\" onClick={() => props.showScreen(\"choose\")}>Back</button>\r\n        </div>\r\n\r\n        <div>\r\n            <p className=\"credits\">\r\n                Ironsworn and the official Ironsworn assets Copyright ©2019 Shawn Tomkin and used under\r\n                the Creative Commons Attribution-NonCommercial-\r\n                ShareAlike 4.0 International license.\r\n                </p>\r\n            <p className=\"credits\">\r\n                Have a suggestion or run into a bug? File an issue <a href=\"https://github.com/effortlessmountain/ironsworn-asset-workbench/issues\">here on Github</a> or contact EffortlessMountain on the Ironsworn discord server.\r\n            </p>\r\n        </div>\r\n    </div>)\r\n}","import { AssetDocumentV1, AssetDocument, transformSvgString, UnspecifiedAssetDocument } from \"./assetModels\";\r\nfunction transformToV2(v1: AssetDocumentV1): AssetDocument {\r\n    const v2: AssetDocument = {\r\n        documentFormatVersion: 2,\r\n        type: v1.type,\r\n        name: v1.name,\r\n        writeIn: v1.writeIn,\r\n        track: v1.track,\r\n        description: v1.description,\r\n        abilities: v1.abilities,\r\n    };\r\n    if (typeof v1.fonts === \"object\") {\r\n        v2.fonts = {\r\n            assetTypeFontSize: v1.fonts.assetTypeFontSize,\r\n            assetTypeFont: v1.fonts.assetTypeFont,\r\n            assetNameFontSize: v1.fonts.assetNameFontSize,\r\n            assetNameFont: v1.fonts.assetNameFont,\r\n            detailsFontSize: v1.fonts.detailsFontSize,\r\n            detailsFont: v1.fonts.detailsFont,\r\n            trackFontSize: v1.fonts.trackFontSize,\r\n            trackFont: v1.fonts.trackFont,\r\n        };\r\n    }\r\n    if (typeof v1.icon === \"string\") {\r\n        v2.icon = v1.icon;\r\n    }\r\n    else if (typeof v1.icon === \"object\") {\r\n        v2.icon = {\r\n            type: \"svg\",\r\n            author: v1.icon.author,\r\n            name: v1.icon.name,\r\n            svg: transformSvgString(v1.icon.svg)\r\n        };\r\n\r\n    }\r\n    return v2;\r\n}\r\n\r\nexport function transformToLatest(schema: UnspecifiedAssetDocument): AssetDocument {\r\n    if (!schema.documentFormatVersion) {\r\n        return transformToV2(schema as AssetDocumentV1);\r\n    }\r\n    else if (schema.documentFormatVersion === 2) {\r\n        return schema as AssetDocument;\r\n    }\r\n}\r\n","export let scaleRatio = {\r\n    \"full\": 1,\r\n    \"two-thirds\": 2 / 3,\r\n    \"one-half\": 0.5,\r\n    \"one-third\": 1 / 3,\r\n}\r\n\r\nexport type AssetScale = \"one-third\" | \"one-half\" | \"two-thirds\" | \"full\"\r\n\r\nexport function calculateScale(): AssetScale {\r\n    if (window.innerHeight > 1070) {\r\n        return \"full\"\r\n    } else if (window.innerHeight > 750) {\r\n        return \"two-thirds\"\r\n    } else {\r\n        return \"one-half\"\r\n    }\r\n}\r\n\r\n\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport sanitize from './sanitize'\r\n\r\nimport { scaleRatio, AssetScale } from '../assetScaling'\r\nimport { FontConfig, makeMergedConfig, createGoogleFontString } from '../models/assetStyleModels'\r\n\r\n\r\nconst WriteIn = (props: { writeIn?: string }) => {\r\n    return props.writeIn ?\r\n        <div className=\"write-in\">{props.writeIn}</div> :\r\n        null\r\n}\r\n\r\nconst Description = (props: { description: string }) => {\r\n    return props.description ?\r\n        <div className=\"description\">{props.description}</div> :\r\n        null\r\n}\r\n\r\ninterface Ability {\r\n    name?: string,\r\n    filled: boolean,\r\n    text: string\r\n}\r\nexport const Ability = (props: { ability: Ability }) => {\r\n    const createAbilityName = (name) => {\r\n        if (name) {\r\n            return <span className=\"ability-name\">{name}</span>\r\n        } else {\r\n            return \"\"\r\n        }\r\n    }\r\n\r\n    //TODO: investigate parsing markdown or custom markup instead of allowing em, ul, li\r\n    let sanitizedText = sanitize(props.ability.text)\r\n\r\n    return (\r\n        <div className=\"ability\">\r\n            <i className={props.ability.filled ? \"dot filled\" : \"dot unfilled\"}></i>\r\n            <div className=\"ability-description\">\r\n                {createAbilityName(props.ability.name)}\r\n                <span className=\"ability-text\" dangerouslySetInnerHTML={{ __html: sanitizedText }}></span>\r\n            </div>\r\n        </div>)\r\n}\r\n\r\nconst TrackValue = (props: {\r\n    track: number,\r\n    value: number,\r\n    scale: string\r\n}) => {\r\n    if (props.value === 0) {\r\n        return <div className=\"value\" key=\"zed\">0</div>\r\n    }\r\n    else if (props.value <= props.track) {\r\n        return <div className=\"value number\">+{props.value}</div>\r\n    } else {\r\n        return <div className=\"value empty\">\r\n            <svg xmlns='http://www.w3.org/2000/svg'\r\n                version='1.1'\r\n                preserveAspectRatio='none'\r\n                viewBox='0 0 100 100'\r\n                height={95 * scaleRatio[props.scale]}\r\n                width={113 * scaleRatio[props.scale]}>\r\n                <line x1='0' y1='100' x2='100' y2='0' stroke='rgb(65,64,66)' style={{ strokeWidth: 3.5 }} />\r\n            </svg>\r\n        </div>\r\n    }\r\n}\r\n\r\nconst Track = (props: {\r\n    track: string[] | number,\r\n    scale: string,\r\n    style\r\n}) => {\r\n    if (!props.track) {\r\n        return null\r\n    } else {\r\n        let innerEntries = []\r\n\r\n        if (Array.isArray(props.track)) {\r\n            innerEntries = props.track.map((entry, index) => {\r\n                return <div className=\"value text\" key={index}>{entry}</div>\r\n            })\r\n        } else {\r\n            let trackLength = Math.max(5, props.track)\r\n            for (let i = 0; i <= trackLength; i++) {\r\n                innerEntries.push(<TrackValue track={props.track} value={i} scale={props.scale} key={i}></TrackValue>)\r\n            }\r\n        }\r\n        return <div className=\"track\" style={props.style}>\r\n            {innerEntries}\r\n        </div>\r\n    }\r\n}\r\n\r\nconst Icon = (props: { icon: string | { svg: { d: string, fill: string, fillOpacity: string } }, scale: string }) => {\r\n    if (typeof props.icon === \"string\") {\r\n        return (\r\n            <div className=\"header-circle\">\r\n                <i className=\"header-icon\">{props.icon}</i>\r\n            </div>)\r\n    } else if (typeof props.icon === \"object\") {\r\n        return (\r\n            <div className=\"header-circle\">\r\n                <svg\r\n                    height={154 * scaleRatio[props.scale]}\r\n                    width={154 * scaleRatio[props.scale]}\r\n                    viewBox=\"0 0 512 512\">\r\n                    <g>\r\n                        <path d={props.icon.svg.d} fill={props.icon.svg.fill} fillOpacity={props.icon.svg.fillOpacity}></path>\r\n                    </g>\r\n                </svg>\r\n            </div>)\r\n    } else {\r\n        return null\r\n    }\r\n}\r\n\r\nconst makeFontStyles = (unmergedFonts: FontConfig) => {\r\n    let fonts: FontConfig = makeMergedConfig(unmergedFonts)\r\n    let googleFontUrl = createGoogleFontString(fonts.assetTypeFont, fonts.assetNameFont, fonts.detailsFont, fonts.trackFont)\r\n\r\n    return {\r\n        googleFontUrl,\r\n        type: {\r\n            fontFamily: `\"${fonts.assetTypeFont}\"`,\r\n            fontSize: fonts.assetTypeFontSize\r\n        },\r\n        assetName: {\r\n            fontFamily: `\"${fonts.assetNameFont}\"`,\r\n            fontSize: fonts.assetNameFontSize\r\n        },\r\n        details: {\r\n            fontFamily: `\"${fonts.detailsFont}\"`,\r\n            fontSize: fonts.detailsFontSize\r\n        },\r\n        track: {\r\n            fontFamily: `\"${fonts.trackFont}`,\r\n            fontSize: fonts.trackFontSize\r\n        }\r\n    }\r\n}\r\n\r\ninterface Asset {\r\n    fonts?: FontConfig,\r\n    type: string,\r\n    icon?: string | { svg: { d: string, fill: string, fillOpacity: string } },\r\n    name: string,\r\n    writeIn?: string,\r\n    description: string,\r\n    abilities: Ability[],\r\n    track?: number | string[]\r\n}\r\n\r\ninterface AssetProps {\r\n    asset: Asset,\r\n    scale: AssetScale\r\n}\r\n\r\nexport const Asset = (props: AssetProps) => {\r\n    let asset = props.asset\r\n    let fonts = makeFontStyles(asset.fonts)\r\n\r\n    //TODO: consolidate fonts into one global link. Less calls and may fix the race condition with preview/Download and fonts. \r\n    return (<div className={`asset ${props.scale}`}>\r\n        <link rel=\"stylesheet\" href={fonts.googleFontUrl} />\r\n        <div className=\"main-matter\">\r\n            <div className=\"top\">\r\n                <div className=\"type\" style={fonts.type}>{asset.type}</div>\r\n                <Icon icon={asset.icon} scale={props.scale} />\r\n                <div className=\"asset-name\" style={fonts.assetName}>{asset.name}</div>\r\n            </div>\r\n            <div className=\"details\" style={fonts.details}>\r\n                <WriteIn writeIn={asset.writeIn}></WriteIn>\r\n                <Description description={asset.description} />\r\n                <div className=\"abilities\">\r\n                    {asset.abilities.map((ability, index) => <Ability ability={ability} key={index}></Ability>)}\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <Track track={asset.track} scale={props.scale} style={fonts.track} />\r\n    </div >)\r\n}\r\n\r\nexport const showAssetIn = (element, asset, scale, callback?: () => void) => {\r\n    console.log(\"Showing asset with scale\", scale, \"in\", element)\r\n    // TODO: watch for state changes inside of a react component instead of re-rendering everything    \r\n    ReactDOM.render(<Asset asset={asset} scale={scale} />,\r\n        element, callback)\r\n}","import sanitizer from 'sanitize-html'\r\n\r\nexport default function sanitize(text) {\r\n    return sanitizer(text, {\r\n        allowedTags: ['em', 'ul', 'li'],\r\n        allowedAttributes: {}\r\n    })\r\n}","import React from 'react'\r\nimport { AssetDocument } from '../models/assetModels'\r\nimport { Asset } from '../Asset/Asset'\r\nimport html2canvas from 'html2canvas'\r\nimport { AssetScale } from '../assetScaling'\r\n\r\ntype DownloadProps = {\r\n    asset: AssetDocument,\r\n    scale: AssetScale,\r\n    goBackToMain: () => void,\r\n    preview: boolean\r\n}\r\n\r\ntype DownloadState = {\r\n    canvas: HTMLCanvasElement\r\n}\r\n\r\nexport default class Download extends React.Component<DownloadProps, DownloadState> {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            canvas: null\r\n        }\r\n    }\r\n\r\n    saveImage() {\r\n        const link = document.createElement('a')\r\n        link.href = this.state.canvas.toDataURL()\r\n        link.download = this.props.asset.name + \".png\"\r\n        document.body.appendChild(link)\r\n        link.click()\r\n        document.body.removeChild(link)\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (!this.state.canvas) {\r\n            window.scrollTo(0, 0)\r\n            const render = document.querySelector('.render')\r\n            html2canvas(render.firstChild as HTMLElement,\r\n                {\r\n                    allowTaint: true\r\n                }).then(canvas => {\r\n                    this.setState({ canvas: canvas })\r\n                })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (!this.state.canvas) {\r\n            return (\r\n                <div className=\"render\">\r\n                    <Asset asset={this.props.asset} scale={this.props.scale}></Asset>\r\n                </div>\r\n            )\r\n        } else if (!this.props.preview) {\r\n            this.saveImage()\r\n            this.props.goBackToMain()\r\n            return null\r\n        } else {\r\n            return (\r\n                <div className=\"preview-download\">\r\n                    <div className=\"image-container\">\r\n                        <img src={this.state.canvas.toDataURL()} alt={`${this.props.asset.name} asset`} />\r\n                    </div>\r\n                    <div className=\"preview-download-help\">\r\n                        <p>Right click and 'Save image as...' to save. If the image is truncated,\r\n                    try making your browser window bigger before pressing 'preview' or 'download as image'.</p>\r\n                        <button id=\"done-downloading\" onClick={() => this.props.goBackToMain()} > close </button>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n\r\n    }\r\n}","import React from 'react';\r\nimport { Asset } from './Asset/Asset';\r\nimport { UnspecifiedAssetDocument } from './models/assetModels';\r\nimport { transformToLatest } from \"./models/assetTransformation\";\r\n\r\nexport default function AssetChoice(props: {\r\n    handleClick();\r\n    asset: UnspecifiedAssetDocument;\r\n}) {\r\n    let transformedAsset = transformToLatest(props.asset);\r\n    return (\r\n        <div className=\"asset-choice\" onClick={props.handleClick}>\r\n            <Asset asset={transformedAsset} scale={\"one-third\"}></Asset>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react'\r\nimport { UnspecifiedAssetDocument } from './models/assetModels'\r\nimport AssetChoice from './AssetChoice'\r\nimport AssetCardButton from './AssetCardButton'\r\n\r\nexport default function AssetSelection(props: {\r\n    chooseAsset: (asset, index) => void,\r\n    showNewScreen(),\r\n    assets: UnspecifiedAssetDocument[]\r\n}) {\r\n    return (\r\n        <div className=\"horizontal\">\r\n            <div className=\"asset-selection\">\r\n                <div className=\"asset-selection-controls\">\r\n                    {props.assets.map((asset, index) => {\r\n                        return (<AssetChoice\r\n                            asset={asset}\r\n                            key={asset.name + index}\r\n                            handleClick={() => props.chooseAsset(asset, index)}></AssetChoice>)\r\n                    })}\r\n                </div>\r\n            </div >\r\n            <div className=\"vertical\">\r\n                <button onClick={props.showNewScreen}>ADD NEW ASSET</button>\r\n                {/* <button>FONTS</button> */}\r\n                {/* <button>EXPORT</button> */}\r\n            </div>\r\n        </div>\r\n    )\r\n}","export const ironclad = {\r\n    fonts: {\r\n        assetTypeFontSize: \"1.03em\",\r\n        assetTypeFont: \"Noto Sans JP\",\r\n        assetNameFontSize: \"1.76em\",\r\n        assetNameFont: \"Russo One\",\r\n        detailsFontSize: \"0.97em\",\r\n        detailsFont: \"Quicksand\",\r\n        trackFontSize: \"1.12em\",\r\n        trackFont: \"Krona One\"\r\n    },\r\n    type: \"combat talent\",\r\n    name: \"Ironclad\",\r\n    writeIn: \"\",\r\n    track: [\"LIGHTLY ARMORED\", \"GEARED FOR WAR\"],\r\n    description: \"If you wear high-tech armor...\",\r\n    abilities: [\r\n        {\r\n            filled: true,\r\n            text: \"When you equip or adjust your armor, choose one. <li>Lightly armored: When you <em>Endure Harm</em> in a fight, add +1 and take +1 momentum on a hit.</li> <li>Geared for war: Mark encumbered. When you <em>Endure Harm</em> in a fight, add +2 and take +1 momentum on a hit.</li>\"\r\n        },\r\n        {\r\n            filled: false,\r\n            text: \"When you <em>Clash</em> while you are geared for war, add +1.\"\r\n        },\r\n        {\r\n            filled: false,\r\n            text: \"When you <em>Compel</em> in a situation where strength of arms is a factor, add +2.\"\r\n        }\r\n    ],\r\n    icon: {\r\n        type: \"svg\",\r\n        author: \"Delapouite\",\r\n        name: \"Light Helm icon\",\r\n        svg: \"<svg style=\\\"height: 512px; width: 512px;\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 512 512\\\"><g class=\\\"\\\" style=\\\"touch-action: none;\\\" transform=\\\"translate(0,0)\\\"><path d=\\\"M246.488 29.5l-13.244 39.725 14.381 86.275h16.75l14.38-86.275L265.515 29.5h-19.026zM195 61.5l-40 30h63.709l-3.953-23.725 2.092-6.275H195zm100.152 0l2.092 6.275-3.953 23.725H357l-40-30h-21.848zM69.42 90.727L41.639 257.41 71 286.773V162.375l20.863-41.725L69.42 90.727zm373.16 0l-22.443 29.923L441 162.375v124.398l29.361-29.363-27.78-166.683zM117.563 109.5L89 166.625V400l110 82.5v-87.906l-80-32V211.576l35.393-72.076h72.316l-5-30H117.562zm172.728 0l-5 30h72.272L393 210.375v152.219l-80 32V482.5L423 400V166.625L394.437 109.5H290.291zm-124.684 48L137 215.758v3.742h238v-4.875L346.437 157.5h-64.146l-2.666 16h-47.25l-2.666-16h-64.102zM137 237.5v46h30v-46h-30zm96 0v46h46v-46h-46zm112 0v46h30v-46h-30zm-208 64v48.906l46.678 18.67 27.029-67.576H137zm93.092 0l-29.705 74.262L217 382.406v51.067l39 9.75 39-9.75v-51.067l16.613-6.644-29.705-74.262h-51.816zm71.201 0l27.03 67.576L375 350.406V301.5h-73.707z\\\" fill=\\\"#fff\\\" fill-opacity=\\\"1\\\"></path></g></svg>\"\r\n    }\r\n}\r\n\r\nexport const lightbearer = {\r\n    fonts: {\r\n        assetTypeFontSize: \"1.03em\",\r\n        assetNameFontSize: \"1.26em\",\r\n        detailsFontSize: \"0.97em\",\r\n        trackFontSize: \"1.42em\",\r\n    },\r\n    type: \"ritual\",\r\n    name: \"Lightbearer\",\r\n    track: 6,\r\n    abilities: [\r\n        {\r\n            filled: true,\r\n            text: \"When you focus on a source of light and capture its essence, roll +wits. On a strong hit, set your light track to +6. On a weak hit, make it +3. Then, when you make a move to overcome or navigate darkness, you may add +2 and suffer -1 light.\"\r\n        },\r\n        {\r\n            text: \"You may use your light to <em>Strike</em> or <em>Clash</em> against a dark-dwelling foe. Choose the amount of light to unleash, and roll +light (instead of +iron or +edge). Suffer -light equal to that amount. On a hit, your harm is 1+your unleashed light.\"\r\n        },\r\n        {\r\n            text: \"When you perform this ritual, add +1 and take +1 momentum on a hit.\"\r\n        }\r\n    ],\r\n    icon: {\r\n        type: \"svg\",\r\n        author: \"Lorc\",\r\n        name: \"Explosion Rays icon\",\r\n        svg: '<svg class=\"Icon\" style=\"height: 512px; width: 512px;\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><g class=\"\" style=\"touch-action: none;\" transform=\"translate(0,0)\"><path d=\"M54.184 19.512l116.02 144.838c-11.806 9.74-21.4 22.066-27.923 36.095L20.493 142.73v62.993l113.983 19.172c-1.12 6.056-1.707 12.295-1.707 18.67 0 3.502.177 6.965.52 10.378l-72.376 27.7 79.467.687c4.165 10.173 9.917 19.534 16.948 27.775L20.492 441.7v52.484h47.336l105.87-168.65c11.644 8.795 25.212 15.165 39.945 18.366l-23.7 150.284H294.22L253.25 344.69c8.668-1.524 16.964-4.14 24.744-7.7l37.262 42.268-21.326-51.365c6.885-4.792 13.16-10.402 18.68-16.692l182.533 146.61V348.556L329.43 284.865c4.29-9.722 7.118-20.227 8.195-31.238l84.7-25.93-86.78-7.008c-2.26-9.89-5.955-19.242-10.852-27.825l170.452-87.398V23.924L311.918 175.15c-5.33-5.95-11.342-11.28-17.912-15.86l15.533-38.382-29.968 29.967c-9.608-4.595-20.034-7.74-30.996-9.148L269.89 19.512h-40.12l1.27 121.478c-19.017.808-36.716 6.816-51.706 16.64L94.102 19.51H54.184z\" fill=\"#fff\" fill-opacity=\"1\"></path></g></svg>'\r\n    }\r\n}\r\n\r\nexport const berserker = {\r\n    type: \"combat talent\",\r\n    name: \"Berserker\",\r\n    writeIn: \"\",\r\n    track: 0,\r\n    description: \"If you are clad only in animal pelts...\",\r\n    abilities: [\r\n        {\r\n            filled: true,\r\n            name: \"\",\r\n            text: \"When you <em>Secure an Advantage</em> or <em>Compel</em> by embodying your wild nature, add +1 and take +1 momentum on a hit.\"\r\n        },\r\n        {\r\n            filled: false,\r\n            name: \"\",\r\n            text: \"When you <em>Strike</em> and score a hit, you may inflict +1 harm. If you do, choose one. <li>Push yourself: <em>Endure Harm</em> (1 harm).</li> <li>Lose yourself: <em>Endure Stress</em> (1 stress).</li>\"\r\n        },\r\n        {\r\n            filled: false,\r\n            name: \"\",\r\n            text: \"When you <em>Endure Harm</em> in a fight, and your health is above 0, you may let the pain inflame your wildness (decide before rolling). If you then score a strong hit and choose to embrace the pain, take +momentum equal to your remaining health. A weak hit counts as a miss.\"\r\n        }\r\n    ],\r\n    icon: \"▿\"\r\n}\r\n\r\nexport const caveLion = {\r\n    documentFormatVersion: 2,\r\n    type: \"companion\",\r\n    name: \"Cave Lion\",\r\n    writeIn: \"Name\",\r\n    track: 4,\r\n    description: \"Your cat takes down its prey.\",\r\n    abilities: [\r\n        {\r\n            filled: false,\r\n            name: \"Eager\",\r\n            text: \"When your cat chases down big game, you may <em>Resupply</em> with +edge (instead of +wits). If you do, take +1 supply or +1 momentum on a strong hit.\"\r\n        },\r\n        {\r\n            filled: false,\r\n            name: \"Inescapable\",\r\n            text: \"When you <em>Enter the Fray</em> or <em>Strike</em> by sending your cat to attack, roll +edge. On a hit, take +2 momentum.\"\r\n        },\r\n        {\r\n            filled: false,\r\n            name: \"Protective\",\r\n            text: \"When you <em>Make Camp</em>, your cat is alert to trouble. If you or an ally choose to relax, take +1 spirit. If you focus, take +1 momentum.\"\r\n        }\r\n    ],\r\n    icon: {\r\n        \"type\": \"svg\",\r\n        \"author\": \"Delapouite\",\r\n        \"name\": \"Feline icon\",\r\n        \"svg\": {\r\n            d: \"M110.056 64.815c-4.234.027-8.355.587-12.337 1.799C83.13 71.054 72.93 77.03 65.24 87.333c-7.691 10.303-13.122 25.717-15.516 49.713-.669 6.708 2.012 18.384 7.75 30.986 5.738 12.602 14.248 26.276 23.829 38.387l2.49 3.146-.678 3.955c-3.097 18.091-3.644 50.706-.252 68.778.836 4.454 5.766 14.497 13.611 26.296 7.846 11.8 18.412 25.829 30.032 40.944 23.239 30.23 50.678 64.773 69.81 96.547.024.038.347.525 2.139.886 1.791.362 4.605.28 7.127-.35 2.441-.609 4.524-1.766 5.338-2.458-9.946-42.286-16.14-84.185-37.51-125.14l-10.102-19.358 20.809 6.617c21.64 6.882 48.718 8.897 73.396 7.719 24.679-1.179 47.26-5.681 58.868-10.362l5.648-2.277 4.215 4.397c43.225 45.089 73.427 98.048 112.644 140.935.12.132-.139.16.91.088 1.05-.072 3-.714 4.706-1.914 1.705-1.2 3.106-2.882 3.722-4.234.617-1.353.659-2.086.268-3.149-20.396-55.487-30.565-109.894-61.84-162.258l-2.103-3.521 1.279-3.9c6.869-20.923 17.852-42.768 42.902-60.303l4.535-3.176 4.881 2.617c11.454 6.145 19.123 5.873 25.69 1.936 13.132-7.875 24.15-23.88 28.625-37.784l-14.768-8.31-.943-3.746c-4.025-15.96-8.255-25.48-14.625-32.719-6.37-7.24-15.576-12.896-30.977-19.543l-6.426-2.773 1.104-6.91c.89-5.57.052-11.481-1.184-17.768-36.228 29.915-52.892 64.4-86.533 100.086l-3.197 3.39-4.613-.652c-57.84-8.187-142.926-5.257-198.455 1.436-6.045.728-11.262-1.14-16.34-3.733-5.078-2.593-9.996-6.2-14.475-10.492-8.957-8.584-16.938-19.87-16.01-33.258.654-9.426 2.683-17.048 7.006-23.01 4.323-5.961 11.13-9.434 17.815-10.27 13.368-1.669 26.916 3.833 42.058 10.04 30.285 12.415 65.987 29.01 93.022 21.717 10.554-2.848 30.674-20.089 44.4-37.834 6.863-8.873 12.442-17.861 15.377-24.528 1.339-3.041 2.013-5.487 2.24-6.923-.507-.106-1.153-.163-2.355-.08-2.665.182-7.069 1.375-12.56 3.814-10.985 4.877-26.237 14.423-44.675 26.896-11.984 8.108-26.017 8.386-38.992 5.153-12.975-3.233-25.743-9.626-38.58-16.04-19.255-9.619-38.213-18.81-55.45-20.077a53.657 53.657 0 0 0-4.27-.147zm343.096 73.006l9.832 22.123-22.474-3.512 12.642-18.611zM75.28 308.858c-14.235 49.028-35.548 97.072-55.633 132.947-.014.026-.02.015-.03.028a.651.651 0 0 1 .122.207c.258.592 1.295 1.961 2.856 3.035 1.56 1.074 3.553 1.828 4.945 2.008 1.391.18 1.836-.11 1.84-.114 33.669-24.914 58.717-55.4 83.47-85.668l-.613-.794c-11.682-15.197-22.427-29.428-30.75-41.946-2.25-3.384-4.321-6.6-6.207-9.703zM19.615 441.833c-.108-.114-.099.11 0 0zm297.377-119.485c-7.129 2.366-15.533 4.408-24.863 6.022-12.418 40.091-33.327 77.867-52.203 112.605l-.141.26-.158.25c-.31.491-.252.186-.049.783s1.012 1.81 2.27 2.707c2.514 1.796 4.82 2.374 7.208.23l.047-.04.047-.041c32.285-28.17 59.254-61.458 85.242-102.867-5.621-6.799-11.396-13.455-17.4-19.909z\",\r\n            fill: \"#fff\",\r\n            fillOpacity: \"1\",\r\n            viewBox: \"0 0 512 512\"\r\n        }\r\n    }\r\n}","import React from 'react'\r\n\r\nexport default function AssetCardButton(props: {\r\n    text: string,\r\n    handleClick()\r\n}) {\r\n    return (<div className=\"asset-choice\"\r\n        onClick={props.handleClick}>\r\n        <div className=\"add-new-asset asset one-third\">\r\n            <div className=\"add-new-asset-text\">{props.text}</div>\r\n        </div>\r\n    </div>)\r\n}","import React from 'react'\r\nimport { createBlankAsset, UnspecifiedAssetDocument } from './models/assetModels'\r\nimport { ironclad, lightbearer, caveLion } from './exampleAssets'\r\nimport AssetChoice from './AssetChoice'\r\nimport AssetCardButton from './AssetCardButton'\r\nimport { cloneDeep } from 'lodash'\r\n\r\nexport default function AssetCreation(props: {\r\n    createAsset(asset: UnspecifiedAssetDocument),\r\n    showChooseScreen()\r\n}) {\r\n    return (\r\n        <div className=\"asset-selection\">\r\n            <h3>Create a blank asset or copy an example:</h3>\r\n            <div className=\"asset-selection-controls\">\r\n                <AssetCardButton\r\n                    text=\"Blank Asset\"\r\n                    handleClick={() => props.createAsset(createBlankAsset())}></AssetCardButton>\r\n                {[ironclad, lightbearer, caveLion].map((example, index) => {\r\n                    return (<AssetChoice\r\n                        key={index}\r\n                        asset={example}\r\n                        handleClick={() => props.createAsset(cloneDeep(example))}></AssetChoice>)\r\n                })}\r\n            </div>\r\n            <button onClick={props.showChooseScreen}>CANCEL</button>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport { SidePanel } from \"./SidePanel/SidePanel\";\r\nimport { AssetDocument, UnspecifiedAssetDocument } from \"./models/assetModels\";\r\nimport { transformToLatest } from \"./models/assetTransformation\";\r\nimport { calculateScale, AssetScale } from \"./assetScaling\";\r\nimport { Asset } from \"./Asset/Asset\";\r\nimport Download from \"./SidePanel/Download\"\r\nimport AssetSelection from './AssetSelection'\r\nimport AssetCreation from \"./AssetCreation\";\r\nimport { Collection, createCollection } from \"./models/collection\";\r\nimport { putLoneAssetIntoCollection } from \"./models/collectionTransformation\";\r\n\r\n\r\n\r\ntype Screen = \"choose\" | \"new\" | \"edit\" | \"preview-download\"\r\n\r\ntype AppState = {\r\n    currentAsset: AssetDocument,\r\n    currentCollection: Collection,\r\n    currentAssetIndex: number,\r\n    assetScale: AssetScale,\r\n    currentScreen: Screen\r\n    previewDownload: boolean\r\n}\r\n\r\nexport function sussCurrentCollection(maybeCollections, maybeAsset) {\r\n    let startingCollection = null\r\n    if (maybeCollections && maybeCollections.length > 0) {\r\n        startingCollection = maybeCollections[0]\r\n    } else {\r\n        if (maybeAsset) {\r\n            startingCollection = putLoneAssetIntoCollection(maybeAsset)\r\n        } else {\r\n            startingCollection = createCollection()\r\n        }\r\n    }\r\n    return startingCollection\r\n}\r\n\r\nexport default class App extends React.Component<{}, AppState> {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        let maybeCollections = this.maybeGetLocalCollections()\r\n        let maybeAsset = this.maybeGetLocalAsset()\r\n        let startingCollection = sussCurrentCollection(maybeCollections, maybeAsset)\r\n\r\n        let startingScale = calculateScale()\r\n\r\n        this.state = {\r\n            currentAsset: null,\r\n            currentAssetIndex: null,\r\n            currentCollection: startingCollection,\r\n            assetScale: startingScale,\r\n            currentScreen: \"choose\",\r\n            previewDownload: true\r\n        }\r\n    }\r\n\r\n    maybeGetLocalCollections(): Collection[] {\r\n        const maybeCollections = window.localStorage.getItem(\"collections\")\r\n        if (maybeCollections) {\r\n            try {\r\n                return JSON.parse(maybeCollections)\r\n            } catch (error) {\r\n                window.alert(\"Error parsing local collections: \" + error.toString())\r\n            }\r\n        }\r\n        return null\r\n    }\r\n\r\n    maybeGetLocalAsset(): UnspecifiedAssetDocument {\r\n        const maybeAsset = window.localStorage.getItem(\"currentAsset\")\r\n        if (maybeAsset) {\r\n            try {\r\n                return JSON.parse(maybeAsset)\r\n            } catch (error) {\r\n                window.alert(\"Error parsing local asset: \" + error.toString())\r\n            }\r\n        }\r\n        return null\r\n    }\r\n\r\n    handleAssetScaleChange(newScale) {\r\n        this.setState({ assetScale: newScale })\r\n    }\r\n\r\n    persistCollection(collection) {\r\n        window.localStorage.setItem(\"collections\", JSON.stringify([collection]))\r\n    }\r\n\r\n    updateAsset(asset) {\r\n        this.setState((state) => {\r\n            state.currentCollection.assets[state.currentAssetIndex] = asset\r\n            this.persistCollection(state.currentCollection)\r\n            return {\r\n                currentAsset: transformToLatest(asset)\r\n            }\r\n        })\r\n    }\r\n\r\n    askToDelete() {\r\n        if (window.confirm(\"Delete this asset?\")) {\r\n            this.setState((state) => {\r\n                state.currentCollection.assets.splice(state.currentAssetIndex, 1)\r\n                this.persistCollection(state.currentCollection)\r\n                return {\r\n                    currentCollection: state.currentCollection,\r\n                    currentScreen: \"choose\"\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    createAsset(asset) {\r\n        this.setState((state) => {\r\n            let index = (state.currentCollection.assets.push(asset)) - 1\r\n            window.localStorage.setItem(\"collections\", JSON.stringify([state.currentCollection]))\r\n            return {\r\n                currentAsset: transformToLatest(asset),\r\n                currentAssetIndex: index,\r\n                currentCollection: state.currentCollection,\r\n                currentScreen: \"edit\"\r\n            }\r\n        })\r\n    }\r\n\r\n    chooseAsset(asset, index) {\r\n        this.setState({\r\n            currentAsset: transformToLatest(asset),\r\n            currentAssetIndex: index,\r\n            currentScreen: \"edit\"\r\n        })\r\n    }\r\n\r\n    showScreen(screen) {\r\n        this.setState({ currentScreen: screen })\r\n    }\r\n\r\n    previewAssetImage() {\r\n        this.setState({ currentScreen: 'preview-download', previewDownload: true })\r\n    }\r\n\r\n    downloadAssetImage() {\r\n        this.setState({ currentScreen: 'preview-download', previewDownload: false })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"app\">\r\n                <header className=\"app-header\">\r\n                    <h2> Ironsworn Asset Workbench v0.9.0</h2>\r\n                </header>\r\n                {this.state.currentScreen === \"preview-download\" &&\r\n                    <Download\r\n                        asset={this.state.currentAsset}\r\n                        scale={this.state.assetScale}\r\n                        goBackToMain={() => this.showScreen(\"edit\")}\r\n                        preview={this.state.previewDownload}></Download>\r\n                }\r\n\r\n                {this.state.currentScreen === \"choose\" &&\r\n                    <AssetSelection\r\n                        chooseAsset={(asset, index) => this.chooseAsset(asset, index)}\r\n                        showNewScreen={() => this.showScreen(\"new\")}\r\n                        assets={this.state.currentCollection.assets}></AssetSelection>\r\n                }\r\n\r\n                {this.state.currentScreen === \"new\" &&\r\n                    <AssetCreation\r\n                        createAsset={(asset) => this.createAsset(asset)}\r\n                        showChooseScreen={() => this.showScreen(\"choose\")}></AssetCreation>\r\n                }\r\n\r\n                {this.state.currentScreen === \"edit\" &&\r\n                    <div className=\"container\">\r\n                        <div className=\"assets\">\r\n                            <Asset\r\n                                asset={this.state.currentAsset}\r\n                                scale={this.state.assetScale}\r\n                            ></Asset>\r\n                        </div>\r\n                        <SidePanel\r\n                            currentAsset={this.state.currentAsset}\r\n                            updateAsset={(asset) => this.updateAsset(asset)}\r\n                            askToDelete={() => this.askToDelete()}\r\n                            assetScale={this.state.assetScale}\r\n                            handleAssetScaleChange={(e) => this.handleAssetScaleChange(e)}\r\n                            showScreen={(screen) => this.showScreen(screen)}\r\n                            previewAssetImage={() => this.previewAssetImage()}\r\n                            downloadAssetImage={() => this.downloadAssetImage()}\r\n                        ></SidePanel>\r\n                    </div>}\r\n            </div>)\r\n    }\r\n}","import { Collection } from \"./collection\";\r\nimport { transformToLatest } from \"./assetTransformation\";\r\nimport { UnspecifiedAssetDocument } from \"./assetModels\";\r\n\r\nexport function putLoneAssetIntoCollection(asset: UnspecifiedAssetDocument): Collection {\r\n    return {\r\n        name: \"Default Collection\",\r\n        assets: [transformToLatest(asset)]\r\n    }\r\n}","import { AssetDocument } from './assetModels'\r\n\r\nexport type Collection = {\r\n    name: string,\r\n    assets: AssetDocument[]\r\n}\r\n\r\nexport function createCollection(name = \"Default Collection\"): Collection {\r\n    return {\r\n        name: name,\r\n        assets: []\r\n    }\r\n}","import './index.css'\r\nimport './asset.css'\r\nimport App from './App'\r\nimport ReactDOM from 'react-dom'\r\nimport React from 'react'\r\n\r\nReactDOM.render(<App></App>, document.querySelector('.app-container'))"],"sourceRoot":""}