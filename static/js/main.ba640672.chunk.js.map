{"version":3,"sources":["Asset/asset.ts","AssetEditor/LabeledInputs.tsx","AssetEditor/DetailsEditor/AbilitiesEdit.tsx","AssetEditor/DetailsEditor/TopEdit.tsx","AssetEditor/DetailsEditor/TrackEdit.tsx","Asset/fonts.ts","AssetEditor/DetailsEditor/FontsEdit.tsx","AssetEditor/DetailsEditor/DetailsEditor.tsx","Asset/sanitize.ts","Asset/assetScaling.ts","Asset/AssetDisplay.tsx","AssetEditor/AssetEditor.tsx","Asset/assetTransformation.ts","Export/RenderImage.tsx","Export/ExportAssetImage.tsx","Collections/AssetChoice.tsx","Collections/AssetSelection.tsx","Collections/AssetCardButton.tsx","Collections/AssetCreation.tsx","Asset/exampleAssets.ts","Footer.tsx","Export/PrintPreview.tsx","Export/AssetSelectionForPrinting.tsx","Export/CollectionPrinting.tsx","AssetPopulater.tsx","Collections/AssetImport.tsx","App.tsx","Collections/collectionTransformation.ts","Collections/collection.ts","index.tsx"],"names":["extractPropertyValue","key","svgString","regexp","RegExp","match","transformSvgString","d","fill","fillOpacity","viewBox","LabeledTextInput","props","className","label","type","id","value","onChange","handleChange","LabeledTextAreaInput","LabeledCheckBox","checked","LabeledNumberInput","step","min","max","e","currentTarget","AbilityInput","ability","name","updateAbility","filled","onClick","removeAbility","text","AbilitiesEdit","index","this","currentAsset","abilities","updateAsset","splice","push","map","changed","addAbility","React","Component","TopEdit","writeIn","writeIn2","description","href","target","rel","htmlFor","defaultValue","icon","handleIconImport","LabeledRadioInput","TrackEdit","track","clone","cloneDeep","handleTrackTypeChange","Array","isArray","handleNumericalTrackChange","join","values","split","val","trim","defaultFontConfig","assetTypeFontSize","assetTypeFont","assetNameFontSize","assetNameFont","detailsFontSize","detailsFont","trackFontSize","trackFont","makeMergedConfig","config","merged","Object","assign","makeFontStyles","unmergedFonts","fonts","toFontFamily","font","fontName","replace","googleFontUrl","urlifiedFonts","from","Set","filter","createGoogleFontString","fontFamily","fontSize","assetName","details","FontInputs","idPrefix","handleFontChange","em","size","handleSizeChange","FontsEdit","configuredFonts","useState","updateFonts","setFontProperty","newFonts","setSizeProperty","ViewSwitchButton","classes","view","activeView","handleClick","children","ViewSwitcher","switchView","DetailsEditor","state","setState","iconFileInput","document","querySelector","iconAuthorInput","file","files","fileReader","FileReader","onload","svg","result","slice","author","readAsText","alert","asset","sanitize","sanitizer","allowedTags","allowedAttributes","scaleRatio","full","WriteIn","Description","dangerouslySetInnerHTML","__html","AbilityDisplay","sanitizedText","TrackValue","xmlns","version","preserveAspectRatio","height","scale","width","x1","y1","x2","y2","stroke","style","strokeWidth","TrackDisplay","innerEntries","entry","trackLength","Math","i","IconDisplay","AssetDisplay","AssetEditor","history","useHistory","assetScale","handleAssetScaleChange","currentAssetId","assetJson","encodeURIComponent","JSON","stringify","link","createElement","download","body","appendChild","click","removeChild","downloadJson","askToDelete","transformToLatest","schema","documentFormatVersion","v1","v2","transformToV2","RenderImage","window","setTimeout","requestAnimationFrame","scrollTo","render","html2canvas","firstChild","allowTaint","then","canvas","handleImage","toDataURL","ImagePreview","src","dataUrl","alt","ExportAsset","image","setImage","useEffect","preview","saveImage","AssetChoice","transformedAsset","AssetSelection","assets","length","setCurrentAsset","setCurrentAssetIndex","chooseAsset","AssetCardButton","AssetCreation","createAsset","example","Footer","PrintPreview","marginLeft","print","images","AssetSelectionForPrinting","_","selected","setSelected","marginBottom","lineHeight","has","newSelected","delete","add","setAssetsToPrint","CollectionPrinting","setImages","assetsToPrint","startingIndex","assetsToRender","AssetPopulater","params","useParams","setCurrentAssetById","assetId","AssetImport","accept","importedAsset","json","parse","console","log","sussCurrentCollection","maybeCollections","maybeAsset","createCollection","App","startingCollection","localStorage","getItem","error","toString","maybeGetLocalCollections","maybeGetLocalAsset","startingScale","innerHeight","currentAssetIndex","currentCollection","setCurrentCollection","setAssetScale","persistCollection","collection","setItem","goToNextScreen","basename","exact","path","confirm","newScale","ReactDOM"],"mappings":"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","file":"static/js/main.ba640672.chunk.js","sourcesContent":["export type SvgIconV1 = {\n  type: \"svg\";\n  author: string;\n  name: string;\n  svg: string;\n};\n\nexport type SvgProperties = {\n  d: string;\n  fill: string;\n  fillOpacity: string;\n  viewBox: string;\n};\n\nexport type SvgIcon = {\n  type: \"svg\";\n  author: string;\n  name: string;\n  svg: SvgProperties;\n};\n\nexport type Ability = {\n  filled: boolean;\n  name?: string;\n  text: string;\n};\n\nexport type AssetDocumentV1 = {\n  documentFormatVersion?: number;\n  fonts?: {\n    assetTypeFontSize?: string;\n    assetTypeFont?: string;\n    assetNameFontSize?: string;\n    assetNameFont?: string;\n    detailsFontSize?: string;\n    detailsFont?: string;\n    trackFontSize?: string;\n    trackFont?: string;\n  };\n  type: string;\n  name: string;\n  writeIn?: string;\n  track?: number | string[];\n  description: string;\n  abilities: Array<{ filled: boolean; name?: string; text: string }>;\n  icon?: string | SvgIconV1;\n};\n\nexport interface AssetDocument {\n  documentFormatVersion: number;\n  fonts?: {\n    assetTypeFontSize?: string;\n    assetTypeFont?: string;\n    assetNameFontSize?: string;\n    assetNameFont?: string;\n    detailsFontSize?: string;\n    detailsFont?: string;\n    trackFontSize?: string;\n    trackFont?: string;\n  };\n  type: string;\n  name: string;\n  writeIn?: string;\n  writeIn2?: string;\n  track?: number | string[];\n  description: string;\n  abilities: Array<Ability>;\n  icon?: string | SvgIcon;\n}\n\nexport interface UnspecifiedAssetDocument {\n  documentFormatVersion?: number;\n  type: string;\n  name: string;\n}\n\nexport function createBlankAsset(properties = {}): AssetDocument {\n  return {\n    documentFormatVersion: 2,\n    abilities: [],\n    description: \"\",\n    name: \"\",\n    type: \"\",\n    fonts: {},\n    icon: \"\",\n    track: null,\n    writeIn: \"\",\n    writeIn2: \"\",\n  };\n}\n\nconst extractPropertyValue = (key, svgString) => {\n  const regexp = new RegExp(`${key}=(?:\"|')(.*?)(?:\"|')`);\n  return (svgString.match(regexp) || [])[1];\n  //TODO: intelligent error here?\n};\n\nexport function transformSvgString(svgString: string): SvgProperties {\n  return {\n    d: extractPropertyValue(\"d\", svgString),\n    fill: extractPropertyValue(\"fill\", svgString),\n    fillOpacity: extractPropertyValue(\"opacity\", svgString),\n    viewBox: extractPropertyValue(\"viewBox\", svgString),\n  };\n}\n","import React from \"react\";\n\nexport function LabeledTextInput(props: {\n  label: string;\n  value: string;\n  id: string;\n  handleChange(e): void;\n}) {\n  return (\n    <div className=\"text-input\">\n      <label>{props.label}</label>\n      <input\n        type=\"text\"\n        id={props.id}\n        value={props.value}\n        onChange={props.handleChange}\n      ></input>\n    </div>\n  );\n}\n\nexport function LabeledTextAreaInput(props: {\n  label: string;\n  value: string;\n  className: string;\n  handleChange(e): void;\n}) {\n  return (\n    <div className=\"text-input\">\n      <label>{props.label}</label>\n      <textarea\n        className={props.className}\n        value={props.value}\n        onChange={props.handleChange}\n      ></textarea>\n    </div>\n  );\n}\n\nexport function LabeledCheckBox(props: {\n  label: string;\n  value: boolean;\n  className: string;\n  handleChange(e): void;\n}) {\n  return (\n    <div className=\"checkbox-input\">\n      <label>{props.label}</label>\n      <input\n        type=\"checkbox\"\n        className={props.className}\n        checked={props.value}\n        onChange={props.handleChange}\n      ></input>\n    </div>\n  );\n}\n\nexport function LabeledNumberInput(props: {\n  label: string;\n  value: number;\n  step: string;\n  id: string;\n  handleChange(value: number);\n}) {\n  const MAX = 100;\n\n  //number inputs have lots of quirks. Definitely incentive to use a component library.\n  const makeHandleChange = (handleChange: (value: number) => void) => {\n    return (e) => {\n      let value = +e.currentTarget.value;\n      if (value > MAX) {\n        value = MAX;\n      }\n      handleChange(value);\n    };\n  };\n\n  return (\n    <div className=\"number-input\">\n      <label>{props.label}</label>\n      <input\n        type=\"number\"\n        id={props.id}\n        // displaying a non-deletable zero that pads the left is wonky, so '' is preferable here\n        value={+props.value || \"\"}\n        step={props.step}\n        min=\"0\"\n        max={MAX}\n        onChange={makeHandleChange(props.handleChange)}\n      ></input>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { AssetDocument, Ability } from \"../../Asset/asset\";\nimport {\n  LabeledTextInput,\n  LabeledCheckBox,\n  LabeledTextAreaInput,\n} from \"../LabeledInputs\";\n\ntype AbilitiesEditProps = {\n  currentAsset: AssetDocument;\n  updateAsset(asset): void;\n};\n\nfunction AbilityInput(props: {\n  ability: Ability;\n  updateAbility(value): void;\n  removeAbility(ability): void;\n}) {\n  return (\n    <div className=\"ability-input\">\n      <div className=\"ability-input-top\">\n        <div className=\"ability-input-top-fields\">\n          <LabeledTextInput\n            label=\"Name (optional)\"\n            id=\"ability-name-input\"\n            value={props.ability.name || \"\"}\n            handleChange={(e) => {\n              props.ability.name = e.currentTarget.value;\n              props.updateAbility(props.ability);\n            }}\n          ></LabeledTextInput>\n          <LabeledCheckBox\n            label=\"Filled\"\n            className=\"ability-filled-input\"\n            value={props.ability.filled || false}\n            handleChange={(e) => {\n              props.ability.filled = !props.ability.filled;\n              props.updateAbility(props.ability);\n            }}\n          ></LabeledCheckBox>\n        </div>\n        <button\n          className=\"ability-button remove-ability\"\n          onClick={() => props.removeAbility(props.ability)}\n        >\n          remove\n        </button>\n      </div>\n      <LabeledTextAreaInput\n        label=\"Ability Text\"\n        className=\"ability-text-input\"\n        value={props.ability.text || \"\"}\n        handleChange={(e) => {\n          props.ability.text = e.currentTarget.value;\n          props.updateAbility(props.ability);\n        }}\n      ></LabeledTextAreaInput>\n    </div>\n  );\n}\nexport class AbilitiesEdit extends React.Component<AbilitiesEditProps> {\n  updateAbility(ability, index) {\n    this.props.currentAsset.abilities[index] = ability;\n    this.props.updateAsset(this.props.currentAsset);\n  }\n  removeAbility(index) {\n    this.props.currentAsset.abilities.splice(index, 1);\n    this.props.updateAsset(this.props.currentAsset);\n  }\n  addAbility() {\n    this.props.currentAsset.abilities.push({\n      filled: false,\n      name: \"\",\n      text: \"\",\n    });\n    this.props.updateAsset(this.props.currentAsset);\n  }\n  render() {\n    return (\n      <div className=\"editor-view\">\n        <div className=\"vertical\">\n          {this.props.currentAsset.abilities.map((ability, index) => {\n            return (\n              <AbilityInput\n                key={index}\n                ability={ability}\n                updateAbility={(changed) => this.updateAbility(changed, index)}\n                removeAbility={() => this.removeAbility(index)}\n              ></AbilityInput>\n            );\n          })}\n          <button className=\"ability-button\" onClick={() => this.addAbility()}>\n            Add\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\r\nimport { LabeledTextInput, LabeledTextAreaInput } from \"../LabeledInputs\";\r\nimport { AssetDocument } from \"../../Asset/asset\";\r\n\r\ntype TopEditProps = {\r\n  currentAsset: AssetDocument;\r\n  updateAsset(asset): void;\r\n  handleIconImport(): void; //todo: move fully inte here\r\n};\r\n\r\nexport class TopEdit extends React.Component<TopEditProps> {\r\n  render() {\r\n    return (\r\n      <div className=\"editor-view misc-editor-view\">\r\n        <div className=\"horizontal\">\r\n          <div className=\"vertical\">\r\n            <LabeledTextInput\r\n              label=\"Type\"\r\n              id=\"asset-type-input\"\r\n              value={this.props.currentAsset.type}\r\n              handleChange={(e) => {\r\n                this.props.currentAsset.type = e.currentTarget.value;\r\n                this.props.updateAsset(this.props.currentAsset);\r\n              }}\r\n            ></LabeledTextInput>\r\n            <LabeledTextInput\r\n              label=\"Asset Name\"\r\n              id=\"asset-name-input\"\r\n              value={this.props.currentAsset.name}\r\n              handleChange={(e) => {\r\n                this.props.currentAsset.name = e.currentTarget.value;\r\n                this.props.updateAsset(this.props.currentAsset);\r\n              }}\r\n            ></LabeledTextInput>\r\n            <LabeledTextInput\r\n              label=\"Write-in (optional)\"\r\n              id=\"asset-write-in-input\"\r\n              value={this.props.currentAsset.writeIn || \"\"}\r\n              handleChange={(e) => {\r\n                this.props.currentAsset.writeIn = e.currentTarget.value;\r\n                this.props.updateAsset(this.props.currentAsset);\r\n              }}\r\n            ></LabeledTextInput>\r\n            <LabeledTextInput\r\n              label=\"Second Write-in (optional)\"\r\n              id=\"asset-second-write-in-input\"\r\n              value={this.props.currentAsset.writeIn2 || \"\"}\r\n              handleChange={(e) => {\r\n                this.props.currentAsset.writeIn2 = e.currentTarget.value;\r\n                this.props.updateAsset(this.props.currentAsset);\r\n              }}\r\n            ></LabeledTextInput>\r\n          </div>\r\n        </div>\r\n        <LabeledTextAreaInput\r\n          label=\"Description (optional)\"\r\n          className=\"asset-description-input\"\r\n          value={this.props.currentAsset.description}\r\n          handleChange={(e) => {\r\n            this.props.currentAsset.description = e.currentTarget.value;\r\n            this.props.updateAsset(this.props.currentAsset);\r\n          }}\r\n        ></LabeledTextAreaInput>\r\n        <div className=\"icon-import\">\r\n          <div className=\"icon-import-helptext\">\r\n            <p>\r\n              SVG icons are supported. Use a transparent background for best\r\n              results.\r\n            </p>\r\n            <ol>\r\n              <li>\r\n                Head over to{\" \"}\r\n                <a\r\n                  href=\"https://game-icons.net/\"\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                >\r\n                  GameIcons.net\r\n                </a>\r\n                , a wonderful resource of Creative Commons-licensed icons.\r\n              </li>\r\n              <li>\r\n                On the left hand side, with \"Studio\" set to background, set\r\n                \"Type\" to \"none\" (for a transparent background).\r\n              </li>\r\n              <li>Download the icon.</li>\r\n              <li>\r\n                Click \"browse...\" under \"Icon to import\" below here and select\r\n                the just-downloaded icon.\r\n              </li>\r\n              <li>Fill in the artist's name and click \"IMPORT\".</li>\r\n            </ol>\r\n          </div>\r\n\r\n          <div className=\"icon-import-controls\">\r\n            <div className=\"icon-import-fileselect\">\r\n              <label htmlFor=\"icon-fileselect\">Icon to import</label>\r\n              <input type=\"file\" id=\"icon-fileselect\" />\r\n            </div>\r\n            <div className=\"icon-import-author\">\r\n              <label htmlFor=\"icon-author\">Icon Artist</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"icon-author\"\r\n                defaultValue={\r\n                  (this.props.currentAsset.icon || {})[\"author\"] || \"\"\r\n                }\r\n              />\r\n              {/* todo: standardize icon schema across types */}\r\n            </div>\r\n            <button\r\n              id=\"icon-import-button\"\r\n              onClick={() => this.props.handleIconImport()}\r\n            >\r\n              {\" \"}\r\n              Import{\" \"}\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\nimport { cloneDeep } from \"lodash\";\nimport { AssetDocument } from \"../../Asset/asset\";\nimport { LabeledTextAreaInput, LabeledNumberInput } from \"../LabeledInputs\";\n\ntype TrackType = \"none\" | \"numerical\" | \"text\";\n\nfunction LabeledRadioInput(props: {\n  label: string;\n  checked: boolean;\n  value: TrackType;\n  onChange(e);\n}) {\n  return (\n    <div>\n      <input\n        type=\"radio\"\n        id={`choose-track-${props.value}`}\n        value={props.value}\n        checked={props.checked}\n        onChange={props.onChange}\n      />\n      <label>{props.label}</label>\n    </div>\n  );\n}\n\ntype TrackEditProps = {\n  currentAsset: AssetDocument; //todo: not require passing in the entire asset to every view\n  updateAsset(asset): void;\n};\n\nexport default class TrackEdit extends React.Component<TrackEditProps> {\n  handleTrackTypeChange(e) {\n    if (e.currentTarget.value === \"none\") {\n      this.props.currentAsset.track = null;\n      this.props.updateAsset(this.props.currentAsset);\n    } else if (e.currentTarget.value === \"numerical\") {\n      this.props.currentAsset.track = 5;\n      this.props.updateAsset(this.props.currentAsset);\n    } else if (e.currentTarget.value === \"text\") {\n      this.props.currentAsset.track = [\"Value 1\", \"Value 2\"];\n      this.props.updateAsset(this.props.currentAsset);\n    }\n  }\n\n  handleNumericalTrackChange(value: number) {\n    let clone = cloneDeep(this.props.currentAsset);\n    clone.track = +value;\n    this.props.updateAsset(clone);\n  }\n\n  render() {\n    return (\n      <div className=\"editor-view\">\n        <label>Type of Track</label>\n        <LabeledRadioInput\n          label=\"No track\"\n          checked={this.props.currentAsset.track == null}\n          onChange={(e) => this.handleTrackTypeChange(e)}\n          value=\"none\"\n        ></LabeledRadioInput>\n        <LabeledRadioInput\n          label=\"Numerical\"\n          checked={typeof this.props.currentAsset.track === \"number\"}\n          onChange={(e) => this.handleTrackTypeChange(e)}\n          value=\"numerical\"\n        ></LabeledRadioInput>\n        <LabeledRadioInput\n          label=\"Text\"\n          checked={Array.isArray(this.props.currentAsset.track)}\n          onChange={(e) => this.handleTrackTypeChange(e)}\n          value=\"text\"\n        ></LabeledRadioInput>\n\n        {typeof this.props.currentAsset.track === \"number\" && (\n          <LabeledNumberInput\n            label=\"Number of Values\"\n            value={this.props.currentAsset.track}\n            step=\"1\"\n            id=\"track-number-input\"\n            handleChange={(e) => this.handleNumericalTrackChange(e)}\n          ></LabeledNumberInput>\n        )}\n\n        {Array.isArray(this.props.currentAsset.track) && (\n          <LabeledTextAreaInput\n            label=\"Options (comma-delimited)\"\n            className=\"track-options-input\"\n            value={this.props.currentAsset.track.join(\", \")}\n            handleChange={(e) => {\n              let values = e.currentTarget.value\n                .split(\",\")\n                .map((val) => val.trim());\n              this.props.currentAsset.track = values; //todo: not mutate at every turn\n              this.props.updateAsset(this.props.currentAsset);\n            }}\n          ></LabeledTextAreaInput>\n        )}\n      </div>\n    );\n  }\n}\n","export interface FontConfig {\n  assetTypeFontSize?: string;\n  assetTypeFont?: string;\n  assetNameFontSize?: string;\n  assetNameFont?: string;\n  detailsFontSize?: string;\n  detailsFont?: string;\n  trackFontSize?: string;\n  trackFont?: string;\n}\n\nexport const createGoogleFontString = (...fonts) => {\n  let urlifiedFonts = Array.from(new Set(fonts))\n    .filter((font) => font)\n    .map((font) => font.replace(/ /g, \"+\"))\n    .map((font) => `family=${font}`)\n    .join(\"&\");\n  return urlifiedFonts\n    ? `https://fonts.googleapis.com/css2?${urlifiedFonts}&display=swap`\n    : \"\";\n};\n\nexport const defaultFontConfig = {\n  assetTypeFontSize: \"1.03em\",\n  assetTypeFont: \"Simonetta\",\n  assetNameFontSize: \"1.26em\",\n  assetNameFont: \"Simonetta\",\n  detailsFontSize: \"0.97em\",\n  detailsFont: \"PT Serif\",\n  trackFontSize: \"1.42em\",\n  trackFont: \"Simonetta\",\n};\n\nexport const makeMergedConfig = (config = {}): FontConfig => {\n  let merged = Object.assign({}, defaultFontConfig);\n  for (let key in merged) {\n    merged[key] = config[key] || merged[key];\n  }\n  return merged;\n};\n\nexport const makeFontStyles = (unmergedFonts: FontConfig) => {\n  let fonts: FontConfig = makeMergedConfig(unmergedFonts);\n  let googleFontUrl = createGoogleFontString(\n    fonts.assetTypeFont,\n    fonts.assetNameFont,\n    fonts.detailsFont,\n    fonts.trackFont\n  );\n\n  function toFontFamily(font) {\n    const fontName = font.split(\":\")[0].replace(/\\+/g, \" \");\n    return `\"${fontName}\"`;\n  }\n\n  return {\n    googleFontUrl,\n    type: {\n      fontFamily: toFontFamily(fonts.assetTypeFont),\n      fontSize: fonts.assetTypeFontSize,\n    },\n    assetName: {\n      fontFamily: toFontFamily(fonts.assetNameFont),\n      fontSize: fonts.assetNameFontSize,\n    },\n    details: {\n      fontFamily: toFontFamily(fonts.detailsFont),\n      fontSize: fonts.detailsFontSize,\n    },\n    track: {\n      fontFamily: toFontFamily(fonts.trackFont),\n      fontSize: fonts.trackFontSize,\n    },\n  };\n};\n","import React, { useState } from \"react\";\nimport { LabeledTextInput, LabeledNumberInput } from \"../LabeledInputs\";\nimport { AssetDocument } from \"../../Asset/asset\";\nimport { makeMergedConfig, defaultFontConfig } from \"../../Asset/fonts\";\nimport { assign } from \"lodash\";\n\nfunction numberFromEm(em) {\n  return +em.replace(\"em\", \"\");\n}\n\nfunction emFromNumber(number) {\n  return number + \"em\";\n}\n\nfunction FontInputs(props: {\n  label: string;\n  idPrefix: string;\n  font: string;\n  size: string;\n  handleFontChange(e);\n  handleSizeChange(e);\n}) {\n  return (\n    <div className=\"font-inputs\">\n      <LabeledTextInput\n        label={props.label + \" font\"}\n        id={`${props.idPrefix}-font-input`}\n        value={props.font}\n        handleChange={props.handleFontChange}\n      ></LabeledTextInput>\n      <LabeledNumberInput\n        label={props.label + \" size\"}\n        id={`${props.idPrefix}-size-input`}\n        value={numberFromEm(props.size)}\n        step=\"0.01\"\n        handleChange={props.handleSizeChange}\n      ></LabeledNumberInput>\n    </div>\n  );\n}\n\nexport default function FontsEdit(props: {\n  currentAsset: AssetDocument;\n  updateAsset(AssetDocument): void;\n}) {\n  const configuredFonts = makeMergedConfig(props.currentAsset.fonts || {});\n  const [fonts, updateFonts] = useState(configuredFonts);\n\n  function handleFontChange(setFontProperty) {\n    return (e) => {\n      const newFonts = { ...fonts };\n      setFontProperty(newFonts, e.currentTarget.value);\n      updateFonts(newFonts);\n    };\n  }\n\n  function handleSizeChange(setSizeProperty) {\n    return (value: number) => {\n      const newFonts = { ...fonts };\n      setSizeProperty(newFonts, emFromNumber(value));\n      updateFonts(newFonts);\n      props.currentAsset.fonts = newFonts;\n      props.updateAsset(props.currentAsset);\n    };\n  }\n\n  return (\n    <div className=\"editor-view\">\n      <h3>What fonts can I use?</h3>\n      <p>\n        The fonts from{\" \"}\n        <a\n          href=\"https://fonts.google.com/\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Google Fonts\n        </a>{\" \"}\n        are supported. Put in the name of the font into the corresponding box\n        here and you're all set! Font names are case-sensitive. If you want to\n        use a Style other than the \"Regular\", click \"Select This Style\" on the\n        Google Fonts Page, then click \"Embed\" on the sidebar that pops up on the\n        right. Copy the part in bold ( such as <b>Red+Rose:wght@700</b> ) and\n        paste it in below.\n      </p>\n\n      <FontInputs\n        label=\"Asset Type\"\n        idPrefix=\"asset-type\"\n        font={fonts.assetTypeFont}\n        size={fonts.assetTypeFontSize}\n        handleFontChange={handleFontChange(\n          (fonts, val) => (fonts.assetTypeFont = val)\n        )}\n        handleSizeChange={handleSizeChange(\n          (fonts, val) => (fonts.assetTypeFontSize = val)\n        )}\n      ></FontInputs>\n      <FontInputs\n        label=\"Asset Name\"\n        idPrefix=\"asset-name\"\n        font={fonts.assetNameFont}\n        size={fonts.assetNameFontSize}\n        handleFontChange={handleFontChange(\n          (fonts, val) => (fonts.assetNameFont = val)\n        )}\n        handleSizeChange={handleSizeChange(\n          (fonts, val) => (fonts.assetNameFontSize = val)\n        )}\n      ></FontInputs>\n      <FontInputs\n        label=\"Details\"\n        idPrefix=\"details\"\n        font={fonts.detailsFont}\n        size={fonts.detailsFontSize}\n        handleFontChange={handleFontChange(\n          (fonts, val) => (fonts.detailsFont = val)\n        )}\n        handleSizeChange={handleSizeChange(\n          (fonts, val) => (fonts.detailsFontSize = val)\n        )}\n      ></FontInputs>\n      <FontInputs\n        label=\"Track\"\n        idPrefix=\"track\"\n        font={fonts.trackFont}\n        size={fonts.trackFontSize}\n        handleFontChange={handleFontChange(\n          (fonts, val) => (fonts.trackFont = val)\n        )}\n        handleSizeChange={handleSizeChange(\n          (fonts, val) => (fonts.trackFontSize = val)\n        )}\n      ></FontInputs>\n\n      <button\n        id=\"fonts-update-button\"\n        onClick={(e) => {\n          props.currentAsset.fonts = fonts;\n          props.updateAsset(props.currentAsset);\n        }}\n      >\n        update fonts\n      </button>\n      <button\n        onClick={() => {\n          props.currentAsset.fonts = defaultFontConfig;\n          assign(fonts, defaultFontConfig);\n          props.updateAsset(props.currentAsset);\n        }}\n      >\n        Reset to Default\n      </button>\n    </div>\n  );\n}\n","import React from \"react\";\r\nimport { AssetDocument, transformSvgString } from \"../../Asset/asset\";\r\nimport { AbilitiesEdit } from \"./AbilitiesEdit\";\r\nimport { TopEdit } from \"./TopEdit\";\r\nimport TrackEdit from \"./TrackEdit\";\r\nimport FontsEdit from \"./FontsEdit\";\r\n\r\ntype EditorView = \"top\" | \"abilities\" | \"track\" | \"fonts\";\r\n\r\nfunction ViewSwitchButton(props: {\r\n  view: EditorView;\r\n  activeView: EditorView;\r\n  children: string;\r\n  handleClick: (view: EditorView) => void;\r\n}) {\r\n  const classes =\r\n    props.view === props.activeView ? \"change-view selected\" : \"change-view\";\r\n  return (\r\n    <button\r\n      id={\"show-\" + props.view + \"-view\"}\r\n      className={classes}\r\n      onClick={() => props.handleClick(props.view)}\r\n    >\r\n      {props.children}\r\n    </button>\r\n  );\r\n}\r\n\r\nfunction ViewSwitcher(props: {\r\n  activeView: EditorView;\r\n  switchView: (view: EditorView) => void;\r\n}) {\r\n  return (\r\n    <div className=\"view-switcher\">\r\n      <ViewSwitchButton\r\n        view=\"top\"\r\n        activeView={props.activeView}\r\n        handleClick={(view) => props.switchView(view)}\r\n      >\r\n        TOP\r\n      </ViewSwitchButton>\r\n      <ViewSwitchButton\r\n        view=\"abilities\"\r\n        activeView={props.activeView}\r\n        handleClick={(view) => props.switchView(view)}\r\n      >\r\n        Abilities\r\n      </ViewSwitchButton>\r\n      <ViewSwitchButton\r\n        view=\"track\"\r\n        activeView={props.activeView}\r\n        handleClick={(view) => props.switchView(view)}\r\n      >\r\n        Track\r\n      </ViewSwitchButton>\r\n      <ViewSwitchButton\r\n        view=\"fonts\"\r\n        activeView={props.activeView}\r\n        handleClick={(view) => props.switchView(view)}\r\n      >\r\n        Fonts\r\n      </ViewSwitchButton>\r\n    </div>\r\n  );\r\n}\r\n\r\ntype DetailsEditorProps = {\r\n  currentAsset: AssetDocument;\r\n  updateAsset(asset): void;\r\n};\r\n\r\ntype DetailsEditorState = {\r\n  activeView: EditorView;\r\n};\r\n\r\nexport default class DetailsEditor extends React.Component<\r\n  DetailsEditorProps,\r\n  DetailsEditorState\r\n> {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      activeView: \"top\",\r\n    };\r\n  }\r\n\r\n  switchView(view: EditorView) {\r\n    this.setState({\r\n      activeView: view,\r\n    });\r\n  }\r\n\r\n  handleIconImport() {\r\n    //todo: move away from queryselecting and use React\r\n    const iconFileInput = document.querySelector(\r\n      \"#icon-fileselect\"\r\n    ) as HTMLInputElement;\r\n    const iconAuthorInput = document.querySelector(\r\n      \"#icon-author\"\r\n    ) as HTMLInputElement;\r\n\r\n    const file = iconFileInput.files[0];\r\n    if (file) {\r\n      var fileReader = new FileReader();\r\n      fileReader.onload = (e) => {\r\n        var svg = e.target.result as string;\r\n        this.props.currentAsset.icon = {\r\n          type: \"svg\",\r\n          name: file.name.split(\".\").slice(0, -1).join(\".\"),\r\n          author: iconAuthorInput.value,\r\n          svg: transformSvgString(svg),\r\n        };\r\n        this.props.updateAsset(this.props.currentAsset);\r\n      };\r\n      fileReader.readAsText(file);\r\n    } else {\r\n      alert(\"missing file\");\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"details-editor\">\r\n        <ViewSwitcher\r\n          activeView={this.state.activeView}\r\n          switchView={(view) => this.switchView(view)}\r\n        ></ViewSwitcher>\r\n        {this.state.activeView === \"top\" && (\r\n          <TopEdit\r\n            currentAsset={this.props.currentAsset}\r\n            updateAsset={(asset) => this.props.updateAsset(asset)}\r\n            handleIconImport={() => this.handleIconImport()}\r\n          ></TopEdit>\r\n        )}\r\n\r\n        {this.state.activeView === \"abilities\" && (\r\n          <AbilitiesEdit\r\n            currentAsset={this.props.currentAsset}\r\n            updateAsset={(asset) => this.props.updateAsset(asset)}\r\n          ></AbilitiesEdit>\r\n        )}\r\n\r\n        {this.state.activeView === \"track\" && (\r\n          <TrackEdit\r\n            currentAsset={this.props.currentAsset}\r\n            updateAsset={(asset) => this.props.updateAsset(asset)}\r\n          ></TrackEdit>\r\n        )}\r\n\r\n        {this.state.activeView === \"fonts\" && (\r\n          <FontsEdit\r\n            currentAsset={this.props.currentAsset}\r\n            updateAsset={(asset) => this.props.updateAsset(asset)}\r\n          ></FontsEdit>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import sanitizer from \"sanitize-html\";\n\nexport default function sanitize(text) {\n  return sanitizer(text, {\n    allowedTags: [\"em\", \"ul\", \"li\"],\n    allowedAttributes: {},\n  });\n}\n","export let scaleRatio = {\n  full: 1,\n  \"two-thirds\": 2 / 3,\n  \"one-half\": 0.5,\n  \"one-third\": 1 / 3,\n};\n\nexport type AssetScale = \"one-third\" | \"one-half\" | \"two-thirds\" | \"full\";\n\nexport function calculateScale(): AssetScale {\n  if (window.innerHeight > 1070) {\n    return \"full\";\n  } else if (window.innerHeight > 750) {\n    return \"two-thirds\";\n  } else {\n    return \"one-half\";\n  }\n}\n","import React from \"react\";\nimport sanitize from \"./sanitize\";\n\nimport { scaleRatio, AssetScale } from \"./assetScaling\";\nimport { FontConfig, makeFontStyles } from \"./fonts\";\n\nconst WriteIn = (props: { writeIn?: string }) => {\n  return props.writeIn ? <div className=\"write-in\">{props.writeIn}</div> : null;\n};\n\nconst Description = (props: { description: string }) => {\n  return props.description ? (\n    <div\n      className=\"description\"\n      dangerouslySetInnerHTML={{ __html: sanitize(props.description) }}\n    ></div>\n  ) : null;\n};\n\ninterface Ability {\n  name?: string;\n  filled: boolean;\n  text: string;\n}\nexport const AbilityDisplay = (props: { ability: Ability }) => {\n  const createAbilityName = (name) => {\n    if (name) {\n      return <span className=\"ability-name\">{name}</span>;\n    } else {\n      return \"\";\n    }\n  };\n\n  //TODO: investigate parsing markdown or custom markup instead of allowing em, ul, li\n  let sanitizedText = sanitize(props.ability.text);\n\n  return (\n    <div className=\"ability\">\n      <i className={props.ability.filled ? \"dot filled\" : \"dot unfilled\"}></i>\n      <div className=\"ability-description\">\n        {createAbilityName(props.ability.name)}\n        <span\n          className=\"ability-text\"\n          dangerouslySetInnerHTML={{ __html: sanitizedText }}\n        ></span>\n      </div>\n    </div>\n  );\n};\n\nconst TrackValue = (props: { track: number; value: number; scale: string }) => {\n  if (props.value === 0) {\n    return (\n      <div className=\"value\" key=\"zed\">\n        0\n      </div>\n    );\n  } else if (props.value <= props.track) {\n    return <div className=\"value number\">+{props.value}</div>;\n  } else {\n    return (\n      <div className=\"value empty\">\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          version=\"1.1\"\n          preserveAspectRatio=\"none\"\n          viewBox=\"0 0 100 100\"\n          height={95 * scaleRatio[props.scale]}\n          width={113 * scaleRatio[props.scale]}\n        >\n          <line\n            x1=\"0\"\n            y1=\"100\"\n            x2=\"100\"\n            y2=\"0\"\n            stroke=\"rgb(65,64,66)\"\n            style={{ strokeWidth: 3.5 }}\n          />\n        </svg>\n      </div>\n    );\n  }\n};\n\nconst TrackDisplay = (props: {\n  track: string[] | number;\n  scale: string;\n  style;\n}) => {\n  if (!props.track) {\n    return null;\n  } else {\n    let innerEntries = [];\n\n    if (Array.isArray(props.track)) {\n      innerEntries = props.track.map((entry, index) => {\n        return (\n          <div className=\"value text\" key={index}>\n            {entry}\n          </div>\n        );\n      });\n    } else {\n      let trackLength = Math.max(5, props.track);\n      for (let i = 0; i <= trackLength; i++) {\n        innerEntries.push(\n          <TrackValue\n            track={props.track}\n            value={i}\n            scale={props.scale}\n            key={i}\n          ></TrackValue>\n        );\n      }\n    }\n    return (\n      <div className=\"track\" style={props.style}>\n        {innerEntries}\n      </div>\n    );\n  }\n};\n\nconst IconDisplay = (props: {\n  icon: string | { svg: { d: string; fill: string; fillOpacity: string } };\n  scale: string;\n}) => {\n  if (typeof props.icon === \"string\") {\n    return (\n      <div className=\"header-circle\">\n        <i className=\"header-icon\">{props.icon}</i>\n      </div>\n    );\n  } else if (typeof props.icon === \"object\") {\n    return (\n      <div className=\"header-circle\">\n        <svg\n          height={154 * scaleRatio[props.scale]}\n          width={154 * scaleRatio[props.scale]}\n          viewBox=\"0 0 512 512\"\n        >\n          <g>\n            <path\n              d={props.icon.svg.d}\n              fill={props.icon.svg.fill}\n              fillOpacity={props.icon.svg.fillOpacity}\n            ></path>\n          </g>\n        </svg>\n      </div>\n    );\n  } else {\n    return null;\n  }\n};\n\ninterface Asset {\n  fonts?: FontConfig;\n  type: string;\n  icon?: string | { svg: { d: string; fill: string; fillOpacity: string } };\n  name: string;\n  writeIn?: string;\n  writeIn2?: string;\n  description: string;\n  abilities: Ability[];\n  track?: number | string[];\n}\n\ninterface AssetProps {\n  asset: Asset;\n  scale: AssetScale;\n}\n\nexport const AssetDisplay = (props: AssetProps) => {\n  let asset = props.asset;\n  let fonts = makeFontStyles(asset.fonts);\n\n  //TODO: consolidate fonts into one global link. Less calls and may fix the race condition with preview/Download and fonts.\n  return (\n    <div className={`asset ${props.scale}`}>\n      <link rel=\"stylesheet\" href={fonts.googleFontUrl} />\n      <div className=\"main-matter\">\n        <div className=\"top\">\n          <div className=\"type\" style={fonts.type}>\n            {asset.type}\n          </div>\n          <IconDisplay icon={asset.icon} scale={props.scale} />\n          <div className=\"asset-name\" style={fonts.assetName}>\n            {asset.name}\n          </div>\n        </div>\n        <div className=\"details\" style={fonts.details}>\n          <WriteIn writeIn={asset.writeIn}></WriteIn>\n          <WriteIn writeIn={asset.writeIn2}></WriteIn>\n          <Description description={asset.description} />\n          <div className=\"abilities\">\n            {asset.abilities.map((ability, index) => (\n              <AbilityDisplay ability={ability} key={index}></AbilityDisplay>\n            ))}\n          </div>\n        </div>\n      </div>\n      <TrackDisplay\n        track={asset.track}\n        scale={props.scale}\n        style={fonts.track}\n      />\n    </div>\n  );\n};\n","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { AssetDocument } from \"../Asset/asset\";\r\nimport DetailsEditor from \"./DetailsEditor/DetailsEditor\";\r\nimport { AssetDisplay } from \"../Asset/AssetDisplay\";\r\nimport { AssetScale } from \"../Asset/assetScaling\";\r\n\r\ntype AssetEditorProps = {\r\n  currentAsset: AssetDocument;\r\n  currentAssetId: number;\r\n  updateAsset(asset: AssetDocument): void;\r\n  askToDelete(history): void;\r\n  assetScale: AssetScale;\r\n  handleAssetScaleChange(newScale: string): void;\r\n};\r\n\r\nfunction downloadJson(asset) {\r\n  var assetJson =\r\n    \"data:text/json;charset=utf-8,\" +\r\n    encodeURIComponent(JSON.stringify(asset, null, 2));\r\n  const link = document.createElement(\"a\");\r\n  link.href = assetJson;\r\n  link.download = asset.name + \".json\";\r\n  document.body.appendChild(link);\r\n  link.click();\r\n  document.body.removeChild(link);\r\n}\r\n\r\nexport function AssetEditor(props: AssetEditorProps) {\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <div className=\"asset-editor\">\r\n      <div className=\"asset-being-edited\">\r\n        <div className=\"asset-wrapper\">\r\n          <AssetDisplay\r\n            asset={props.currentAsset}\r\n            scale={props.assetScale}\r\n          ></AssetDisplay>\r\n        </div>\r\n      </div>\r\n      <DetailsEditor\r\n        currentAsset={props.currentAsset}\r\n        updateAsset={props.updateAsset}\r\n      ></DetailsEditor>\r\n      <div className=\"sidebar\">\r\n        <button className=\"asset-back-button\" onClick={() => history.push(\"/\")}>\r\n          BACK\r\n        </button>\r\n        <div className=\"scale-control\">\r\n          <label>Scale (also affects Download size)</label>\r\n          <select\r\n            id=\"scale-select\"\r\n            onChange={(e) => props.handleAssetScaleChange(e.target.value)}\r\n            value={props.assetScale}\r\n          >\r\n            <option value=\"one-third\">250px by 350px</option>\r\n            <option value=\"one-half\">375px by 525px</option>\r\n            <option value=\"two-thirds\">500px by 700px</option>\r\n            <option value=\"full\">750px by 1050px</option>\r\n          </select>\r\n        </div>\r\n        <button\r\n          id=\"preview-download\"\r\n          onClick={() =>\r\n            history.push(`/assets/${props.currentAssetId}/preview`)\r\n          }\r\n        >\r\n          PREVIEW IMAGE\r\n        </button>\r\n        <button\r\n          id=\"download\"\r\n          onClick={() =>\r\n            history.push(`/assets/${props.currentAssetId}/download`)\r\n          }\r\n        >\r\n          DOWNLOAD IMAGE\r\n        </button>\r\n        <button onClick={() => downloadJson(props.currentAsset)}>\r\n          DOWNLOAD JSON\r\n        </button>\r\n        <button\r\n          onClick={() => props.askToDelete(history)}\r\n          className=\"delete-asset-button\"\r\n        >\r\n          DELETE\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import {\n  AssetDocumentV1,\n  AssetDocument,\n  transformSvgString,\n  UnspecifiedAssetDocument,\n} from \"./asset\";\nfunction transformToV2(v1: AssetDocumentV1): AssetDocument {\n  const v2: AssetDocument = {\n    documentFormatVersion: 2,\n    type: v1.type,\n    name: v1.name,\n    writeIn: v1.writeIn,\n    track: v1.track,\n    description: v1.description,\n    abilities: v1.abilities,\n  };\n  if (typeof v1.fonts === \"object\") {\n    v2.fonts = {\n      assetTypeFontSize: v1.fonts.assetTypeFontSize,\n      assetTypeFont: v1.fonts.assetTypeFont,\n      assetNameFontSize: v1.fonts.assetNameFontSize,\n      assetNameFont: v1.fonts.assetNameFont,\n      detailsFontSize: v1.fonts.detailsFontSize,\n      detailsFont: v1.fonts.detailsFont,\n      trackFontSize: v1.fonts.trackFontSize,\n      trackFont: v1.fonts.trackFont,\n    };\n  }\n  if (typeof v1.icon === \"string\") {\n    v2.icon = v1.icon;\n  } else if (typeof v1.icon === \"object\") {\n    v2.icon = {\n      type: \"svg\",\n      author: v1.icon.author,\n      name: v1.icon.name,\n      svg: transformSvgString(v1.icon.svg),\n    };\n  }\n  return v2;\n}\n\nexport function transformToLatest(\n  schema: UnspecifiedAssetDocument\n): AssetDocument {\n  if (!schema.documentFormatVersion) {\n    return transformToV2(schema as AssetDocumentV1);\n  } else if (schema.documentFormatVersion === 2) {\n    return schema as AssetDocument;\n  }\n}\n","import React, { ReactNode } from \"react\";\r\nimport html2canvas from \"html2canvas\";\r\nexport function RenderImage(props: {\r\n  children: ReactNode;\r\n  handleImage(dataUrl: string): void;\r\n}) {\r\n  //TODO: make a nice overlay to mask the rendering\r\n\r\n  // Using both setTimeout (with no timeout length) and requestAnimationFrame\r\n  // fixes an issue where html2canvas would throw  the following error:\r\n  //\r\n  // CSSStyleSheet.cssRules getter: Can't access rules of still-loading stylsheet\r\n  //\r\n  //See https://stackoverflow.com/a/34999925 for more info\r\n\r\n  window.setTimeout(() => {\r\n    window.requestAnimationFrame(() => {\r\n      window.scrollTo(0, 0);\r\n      const render = document.querySelector(\".render\");\r\n      html2canvas(render.firstChild as HTMLElement, {\r\n        allowTaint: true,\r\n      }).then((canvas) => {\r\n        props.handleImage(canvas.toDataURL());\r\n      });\r\n    });\r\n  });\r\n\r\n  return <div className=\"render\">{props.children}</div>;\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { AssetDocument } from \"../Asset/asset\";\r\nimport { AssetDisplay } from \"../Asset/AssetDisplay\";\r\nimport { AssetScale } from \"../Asset/assetScaling\";\r\nimport { RenderImage } from \"./RenderImage\";\r\n\r\nfunction ImagePreview(props: { alt: string; dataUrl: string }) {\r\n  const history = useHistory();\r\n  return (\r\n    <div className=\"preview-download\">\r\n      <div className=\"image-container\">\r\n        <img src={props.dataUrl} alt={`${props.alt} asset`} />\r\n      </div>\r\n      <div className=\"preview-download-help\">\r\n        <p>\r\n          Right click and 'Save image as...' to save. If the image is truncated,\r\n          try making your browser window bigger before pressing 'preview' or\r\n          'download as image'.\r\n        </p>\r\n        <button id=\"done-downloading\" onClick={() => history.push(\"/\")}>\r\n          close\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\ntype ExportAssetProps = {\r\n  asset: AssetDocument;\r\n  index: number;\r\n  scale: AssetScale;\r\n  preview: boolean;\r\n};\r\n\r\nexport function ExportAsset(props: ExportAssetProps) {\r\n  const [image, setImage] = useState(null);\r\n  const history = useHistory();\r\n\r\n  function saveImage() {\r\n    const link = document.createElement(\"a\");\r\n    link.href = image;\r\n    link.download = props.asset.name + \".png\";\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (image && !props.preview) {\r\n      saveImage();\r\n      history.push(`/assets/${props.index}/edit`);\r\n    }\r\n  });\r\n\r\n  if (!image) {\r\n    return (\r\n      <RenderImage handleImage={(dataUrl) => setImage(dataUrl)}>\r\n        <AssetDisplay asset={props.asset} scale={props.scale}></AssetDisplay>\r\n      </RenderImage>\r\n    );\r\n  } else if (props.preview) {\r\n    return <ImagePreview dataUrl={image} alt={props.asset.name}></ImagePreview>;\r\n  }\r\n  return null;\r\n}\r\n","import React from \"react\";\nimport { AssetDisplay } from \"../Asset/AssetDisplay\";\nimport { UnspecifiedAssetDocument } from \"../Asset/asset\";\nimport { transformToLatest } from \"../Asset/assetTransformation\";\n\nexport default function AssetChoice(props: {\n  handleClick();\n  asset: UnspecifiedAssetDocument;\n}) {\n  let transformedAsset = transformToLatest(props.asset);\n  return (\n    <div className=\"asset-choice\" onClick={props.handleClick}>\n      <AssetDisplay asset={transformedAsset} scale={\"one-third\"}></AssetDisplay>\n    </div>\n  );\n}\n","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { UnspecifiedAssetDocument } from \"../Asset/asset\";\r\nimport { transformToLatest } from \"../Asset/assetTransformation\";\r\nimport AssetChoice from \"./AssetChoice\";\r\n\r\nexport default function AssetSelection(props: {\r\n  setCurrentAsset(asset);\r\n  setCurrentAssetIndex(index);\r\n  assets: UnspecifiedAssetDocument[];\r\n}) {\r\n  const history = useHistory();\r\n\r\n  if (props.assets.length === 0) {\r\n    history.push(\"/assets/new\");\r\n    return null;\r\n  }\r\n\r\n  function chooseAsset(asset, index) {\r\n    props.setCurrentAsset(transformToLatest(asset));\r\n    props.setCurrentAssetIndex(index);\r\n    history.push(`/assets/${index}/edit`);\r\n  }\r\n\r\n  return (\r\n    <div className=\"horizontal\">\r\n      <div className=\"asset-selection\">\r\n        <div className=\"asset-selection-controls\">\r\n          {props.assets.map((asset, index) => {\r\n            return (\r\n              <AssetChoice\r\n                asset={asset}\r\n                key={asset.name + index}\r\n                handleClick={() => chooseAsset(asset, index)}\r\n              ></AssetChoice>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n      <div className=\"sidebar\">\r\n        <button onClick={() => history.push(\"/assets/new\")}>\r\n          ADD NEW ASSET\r\n        </button>\r\n        <button onClick={() => history.push(\"/assets/import\")}>\r\n          IMPORT ASSET\r\n        </button>\r\n        <button onClick={() => history.push(\"/collections/print\")}>\r\n          PRINT\r\n        </button>\r\n        {/* <button>FONTS</button> */}\r\n        {/* <button>EXPORT</button> */}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\n\nexport default function AssetCardButton(props: {\n  text: string;\n  handleClick();\n}) {\n  return (\n    <div className=\"asset-choice\" onClick={props.handleClick}>\n      <div className=\"add-new-asset asset one-third\">\n        <div className=\"add-new-asset-text\">{props.text}</div>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { createBlankAsset, UnspecifiedAssetDocument } from \"../Asset/asset\";\r\nimport { ironclad, lightbearer, caveLion } from \"../Asset/exampleAssets\";\r\nimport AssetChoice from \"./AssetChoice\";\r\nimport AssetCardButton from \"./AssetCardButton\";\r\nimport { cloneDeep } from \"lodash\";\r\nimport { CreateAsset } from \"../App\";\r\n\r\ntype Props = {\r\n  createAsset: CreateAsset;\r\n};\r\nexport default function AssetCreation(props: Props) {\r\n  const history = useHistory();\r\n  return (\r\n    <div className=\"asset-selection\">\r\n      <h3>Create a blank asset or copy an example:</h3>\r\n      <div className=\"asset-selection-controls\">\r\n        <AssetCardButton\r\n          text=\"Blank Asset\"\r\n          handleClick={() =>\r\n            props.createAsset(createBlankAsset(), (id) => {\r\n              history.push(`/assets/${id}/edit`);\r\n            })\r\n          }\r\n        ></AssetCardButton>\r\n        {[ironclad(), lightbearer(), caveLion()].map((example, index) => {\r\n          return (\r\n            <AssetChoice\r\n              key={index}\r\n              asset={example}\r\n              handleClick={() =>\r\n                props.createAsset(\r\n                  cloneDeep(example) as UnspecifiedAssetDocument,\r\n                  (id) => {\r\n                    history.push(`/assets/${id}/edit`);\r\n                  }\r\n                )\r\n              }\r\n            ></AssetChoice>\r\n          );\r\n        })}\r\n      </div>\r\n      <button onClick={() => history.push(\"/\")}>CANCEL</button>\r\n    </div>\r\n  );\r\n}\r\n","export const ironclad = () => {\n  return {\n    fonts: {\n      assetTypeFontSize: \"1.03em\",\n      assetTypeFont: \"Noto Sans JP\",\n      assetNameFontSize: \"1.76em\",\n      assetNameFont: \"Russo One\",\n      detailsFontSize: \"0.97em\",\n      detailsFont: \"Quicksand\",\n      trackFontSize: \"1.12em\",\n      trackFont: \"Krona One\",\n    },\n    type: \"combat talent\",\n    name: \"Ironclad\",\n    writeIn: \"\",\n    track: [\"LIGHTLY ARMORED\", \"GEARED FOR WAR\"],\n    description: \"If you wear high-tech armor...\",\n    abilities: [\n      {\n        filled: true,\n        text:\n          \"When you equip or adjust your armor, choose one. <li>Lightly armored: When you <em>Endure Harm</em> in a fight, add +1 and take +1 momentum on a hit.</li> <li>Geared for war: Mark encumbered. When you <em>Endure Harm</em> in a fight, add +2 and take +1 momentum on a hit.</li>\",\n      },\n      {\n        filled: false,\n        text: \"When you <em>Clash</em> while you are geared for war, add +1.\",\n      },\n      {\n        filled: false,\n        text:\n          \"When you <em>Compel</em> in a situation where strength of arms is a factor, add +2.\",\n      },\n    ],\n    icon: {\n      type: \"svg\",\n      author: \"Delapouite\",\n      name: \"Light Helm icon\",\n      svg:\n        '<svg style=\"height: 512px; width: 512px;\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><g class=\"\" style=\"touch-action: none;\" transform=\"translate(0,0)\"><path d=\"M246.488 29.5l-13.244 39.725 14.381 86.275h16.75l14.38-86.275L265.515 29.5h-19.026zM195 61.5l-40 30h63.709l-3.953-23.725 2.092-6.275H195zm100.152 0l2.092 6.275-3.953 23.725H357l-40-30h-21.848zM69.42 90.727L41.639 257.41 71 286.773V162.375l20.863-41.725L69.42 90.727zm373.16 0l-22.443 29.923L441 162.375v124.398l29.361-29.363-27.78-166.683zM117.563 109.5L89 166.625V400l110 82.5v-87.906l-80-32V211.576l35.393-72.076h72.316l-5-30H117.562zm172.728 0l-5 30h72.272L393 210.375v152.219l-80 32V482.5L423 400V166.625L394.437 109.5H290.291zm-124.684 48L137 215.758v3.742h238v-4.875L346.437 157.5h-64.146l-2.666 16h-47.25l-2.666-16h-64.102zM137 237.5v46h30v-46h-30zm96 0v46h46v-46h-46zm112 0v46h30v-46h-30zm-208 64v48.906l46.678 18.67 27.029-67.576H137zm93.092 0l-29.705 74.262L217 382.406v51.067l39 9.75 39-9.75v-51.067l16.613-6.644-29.705-74.262h-51.816zm71.201 0l27.03 67.576L375 350.406V301.5h-73.707z\" fill=\"#fff\" fill-opacity=\"1\"></path></g></svg>',\n    },\n  };\n};\n\nexport const lightbearer = () => {\n  return {\n    fonts: {\n      assetTypeFontSize: \"1.03em\",\n      assetNameFontSize: \"1.26em\",\n      detailsFontSize: \"0.97em\",\n      trackFontSize: \"1.42em\",\n    },\n    type: \"ritual\",\n    name: \"Lightbearer\",\n    track: 6,\n    abilities: [\n      {\n        filled: true,\n        text:\n          \"When you focus on a source of light and capture its essence, roll +wits. On a strong hit, set your light track to +6. On a weak hit, make it +3. Then, when you make a move to overcome or navigate darkness, you may add +2 and suffer -1 light.\",\n      },\n      {\n        text:\n          \"You may use your light to <em>Strike</em> or <em>Clash</em> against a dark-dwelling foe. Choose the amount of light to unleash, and roll +light (instead of +iron or +edge). Suffer -light equal to that amount. On a hit, your harm is 1+your unleashed light.\",\n      },\n      {\n        text:\n          \"When you perform this ritual, add +1 and take +1 momentum on a hit.\",\n      },\n    ],\n    icon: {\n      type: \"svg\",\n      author: \"Lorc\",\n      name: \"Explosion Rays icon\",\n      svg:\n        '<svg class=\"Icon\" style=\"height: 512px; width: 512px;\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><g class=\"\" style=\"touch-action: none;\" transform=\"translate(0,0)\"><path d=\"M54.184 19.512l116.02 144.838c-11.806 9.74-21.4 22.066-27.923 36.095L20.493 142.73v62.993l113.983 19.172c-1.12 6.056-1.707 12.295-1.707 18.67 0 3.502.177 6.965.52 10.378l-72.376 27.7 79.467.687c4.165 10.173 9.917 19.534 16.948 27.775L20.492 441.7v52.484h47.336l105.87-168.65c11.644 8.795 25.212 15.165 39.945 18.366l-23.7 150.284H294.22L253.25 344.69c8.668-1.524 16.964-4.14 24.744-7.7l37.262 42.268-21.326-51.365c6.885-4.792 13.16-10.402 18.68-16.692l182.533 146.61V348.556L329.43 284.865c4.29-9.722 7.118-20.227 8.195-31.238l84.7-25.93-86.78-7.008c-2.26-9.89-5.955-19.242-10.852-27.825l170.452-87.398V23.924L311.918 175.15c-5.33-5.95-11.342-11.28-17.912-15.86l15.533-38.382-29.968 29.967c-9.608-4.595-20.034-7.74-30.996-9.148L269.89 19.512h-40.12l1.27 121.478c-19.017.808-36.716 6.816-51.706 16.64L94.102 19.51H54.184z\" fill=\"#fff\" fill-opacity=\"1\"></path></g></svg>',\n    },\n  };\n};\n\nexport const berserker = () => {\n  return {\n    type: \"combat talent\",\n    name: \"Berserker\",\n    writeIn: \"\",\n    track: 0,\n    description: \"If you are clad only in animal pelts...\",\n    abilities: [\n      {\n        filled: true,\n        name: \"\",\n        text:\n          \"When you <em>Secure an Advantage</em> or <em>Compel</em> by embodying your wild nature, add +1 and take +1 momentum on a hit.\",\n      },\n      {\n        filled: false,\n        name: \"\",\n        text:\n          \"When you <em>Strike</em> and score a hit, you may inflict +1 harm. If you do, choose one. <li>Push yourself: <em>Endure Harm</em> (1 harm).</li> <li>Lose yourself: <em>Endure Stress</em> (1 stress).</li>\",\n      },\n      {\n        filled: false,\n        name: \"\",\n        text:\n          \"When you <em>Endure Harm</em> in a fight, and your health is above 0, you may let the pain inflame your wildness (decide before rolling). If you then score a strong hit and choose to embrace the pain, take +momentum equal to your remaining health. A weak hit counts as a miss.\",\n      },\n    ],\n    icon: \"▿\",\n  };\n};\n\nexport const caveLion = () => {\n  return {\n    documentFormatVersion: 2,\n    type: \"companion\",\n    name: \"Cave Lion\",\n    writeIn: \"Name\",\n    track: 4,\n    description: \"Your cat takes down its prey.\",\n    abilities: [\n      {\n        filled: false,\n        name: \"Eager\",\n        text:\n          \"When your cat chases down big game, you may <em>Resupply</em> with +edge (instead of +wits). If you do, take +1 supply or +1 momentum on a strong hit.\",\n      },\n      {\n        filled: false,\n        name: \"Inescapable\",\n        text:\n          \"When you <em>Enter the Fray</em> or <em>Strike</em> by sending your cat to attack, roll +edge. On a hit, take +2 momentum.\",\n      },\n      {\n        filled: false,\n        name: \"Protective\",\n        text:\n          \"When you <em>Make Camp</em>, your cat is alert to trouble. If you or an ally choose to relax, take +1 spirit. If you focus, take +1 momentum.\",\n      },\n    ],\n    icon: {\n      type: \"svg\",\n      author: \"Delapouite\",\n      name: \"Feline icon\",\n      svg: {\n        d:\n          \"M110.056 64.815c-4.234.027-8.355.587-12.337 1.799C83.13 71.054 72.93 77.03 65.24 87.333c-7.691 10.303-13.122 25.717-15.516 49.713-.669 6.708 2.012 18.384 7.75 30.986 5.738 12.602 14.248 26.276 23.829 38.387l2.49 3.146-.678 3.955c-3.097 18.091-3.644 50.706-.252 68.778.836 4.454 5.766 14.497 13.611 26.296 7.846 11.8 18.412 25.829 30.032 40.944 23.239 30.23 50.678 64.773 69.81 96.547.024.038.347.525 2.139.886 1.791.362 4.605.28 7.127-.35 2.441-.609 4.524-1.766 5.338-2.458-9.946-42.286-16.14-84.185-37.51-125.14l-10.102-19.358 20.809 6.617c21.64 6.882 48.718 8.897 73.396 7.719 24.679-1.179 47.26-5.681 58.868-10.362l5.648-2.277 4.215 4.397c43.225 45.089 73.427 98.048 112.644 140.935.12.132-.139.16.91.088 1.05-.072 3-.714 4.706-1.914 1.705-1.2 3.106-2.882 3.722-4.234.617-1.353.659-2.086.268-3.149-20.396-55.487-30.565-109.894-61.84-162.258l-2.103-3.521 1.279-3.9c6.869-20.923 17.852-42.768 42.902-60.303l4.535-3.176 4.881 2.617c11.454 6.145 19.123 5.873 25.69 1.936 13.132-7.875 24.15-23.88 28.625-37.784l-14.768-8.31-.943-3.746c-4.025-15.96-8.255-25.48-14.625-32.719-6.37-7.24-15.576-12.896-30.977-19.543l-6.426-2.773 1.104-6.91c.89-5.57.052-11.481-1.184-17.768-36.228 29.915-52.892 64.4-86.533 100.086l-3.197 3.39-4.613-.652c-57.84-8.187-142.926-5.257-198.455 1.436-6.045.728-11.262-1.14-16.34-3.733-5.078-2.593-9.996-6.2-14.475-10.492-8.957-8.584-16.938-19.87-16.01-33.258.654-9.426 2.683-17.048 7.006-23.01 4.323-5.961 11.13-9.434 17.815-10.27 13.368-1.669 26.916 3.833 42.058 10.04 30.285 12.415 65.987 29.01 93.022 21.717 10.554-2.848 30.674-20.089 44.4-37.834 6.863-8.873 12.442-17.861 15.377-24.528 1.339-3.041 2.013-5.487 2.24-6.923-.507-.106-1.153-.163-2.355-.08-2.665.182-7.069 1.375-12.56 3.814-10.985 4.877-26.237 14.423-44.675 26.896-11.984 8.108-26.017 8.386-38.992 5.153-12.975-3.233-25.743-9.626-38.58-16.04-19.255-9.619-38.213-18.81-55.45-20.077a53.657 53.657 0 0 0-4.27-.147zm343.096 73.006l9.832 22.123-22.474-3.512 12.642-18.611zM75.28 308.858c-14.235 49.028-35.548 97.072-55.633 132.947-.014.026-.02.015-.03.028a.651.651 0 0 1 .122.207c.258.592 1.295 1.961 2.856 3.035 1.56 1.074 3.553 1.828 4.945 2.008 1.391.18 1.836-.11 1.84-.114 33.669-24.914 58.717-55.4 83.47-85.668l-.613-.794c-11.682-15.197-22.427-29.428-30.75-41.946-2.25-3.384-4.321-6.6-6.207-9.703zM19.615 441.833c-.108-.114-.099.11 0 0zm297.377-119.485c-7.129 2.366-15.533 4.408-24.863 6.022-12.418 40.091-33.327 77.867-52.203 112.605l-.141.26-.158.25c-.31.491-.252.186-.049.783s1.012 1.81 2.27 2.707c2.514 1.796 4.82 2.374 7.208.23l.047-.04.047-.041c32.285-28.17 59.254-61.458 85.242-102.867-5.621-6.799-11.396-13.455-17.4-19.909z\",\n        fill: \"#fff\",\n        fillOpacity: \"1\",\n        viewBox: \"0 0 512 512\",\n      },\n    },\n  };\n};\n","import React from \"react\";\n\nexport function Footer() {\n  return (\n    <footer className=\"footer\">\n      <p className=\"issues\">\n        Feel free to look at the{\" \"}\n        <a href=\"https://github.com/effortlessmountain/ironsworn-asset-workbench\">\n          code\n        </a>\n        . Have a suggestion or run into a bug?{\" \"}\n        <a href=\"https://github.com/effortlessmountain/ironsworn-asset-workbench/issues\">\n          File an issue\n        </a>{\" \"}\n        or contact EffortlessMountain on the Ironsworn discord server.\n      </p>\n      <p className=\"credits\">\n        Ironsworn and the official Ironsworn assets Copyright ©2020 Shawn Tomkin\n        and used under the Creative Commons Attribution-NonCommercial-\n        ShareAlike 4.0 International license.\n      </p>\n    </footer>\n  );\n}\n","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport function PrintPreview(props: { images: string[] }) {\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <>\r\n      <section className=\"print-controls\" style={{ marginLeft: \"20px\" }}>\r\n        <div className=\"print-help\">\r\n          <p>\r\n            If you want a PDF, select \"Print to PDF\" as your printer. If you\r\n            want the images of the sheets of assets, right click and save.\r\n          </p>\r\n        </div>\r\n        <div className=\"sidebar\">\r\n          <button onClick={() => history.push(\"/\")}>BACK</button>\r\n          <button onClick={window.print}>PRINT</button>\r\n        </div>\r\n      </section>\r\n      {props.images.map((image, i) => {\r\n        return (\r\n          <section className=\"print-page\" key={i}>\r\n            <img src={image} alt=\"A rendered page of assets\"></img>\r\n          </section>\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { AssetDocument } from \"../Asset/asset\";\r\n\r\nexport function AssetSelectionForPrinting(props: {\r\n  assets: AssetDocument[];\r\n  setAssetsToPrint(assets);\r\n}) {\r\n  const [selected, setSelected] = useState(\r\n    new Set(props.assets.map((_, i) => i))\r\n  );\r\n  const history = useHistory();\r\n\r\n  const handleChange = (i) => {\r\n    const newSelected = new Set(selected);\r\n    if (newSelected.has(i)) {\r\n      newSelected.delete(i);\r\n      setSelected(newSelected);\r\n    } else {\r\n      newSelected.add(i);\r\n      setSelected(newSelected);\r\n    }\r\n  };\r\n\r\n  const print = () => {\r\n    props.setAssetsToPrint(props.assets.filter((_, i) => selected.has(i)));\r\n  };\r\n\r\n  const toggleAll = () => {\r\n    if (selected.size === 0) {\r\n      setSelected(new Set(props.assets.map((_, i) => i)));\r\n    } else {\r\n      setSelected(new Set());\r\n    }\r\n  };\r\n\r\n  return (\r\n    <section className=\"asset-print-selection\">\r\n      <div\r\n        className=\"choose-to-print\"\r\n        style={{ marginBottom: \"20px\", fontSize: \"18px\", lineHeight: \"25px\" }}\r\n      >\r\n        <h2>Select assets to print:</h2>\r\n        <button onClick={toggleAll}>All/None</button>\r\n        {props.assets.map((asset, i) => {\r\n          return (\r\n            <div className=\"asset-print-choice\" key={i}>\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={selected.has(i)}\r\n                onChange={() => handleChange(i)}\r\n              ></input>\r\n              {asset.name}\r\n            </div>\r\n          );\r\n        })}\r\n        <div className=\"vertical\">\r\n          <button onClick={print}>NEXT</button>\r\n          <button onClick={() => history.push(\"/\")}>BACK</button>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { AssetDocument } from \"../Asset/asset\";\r\nimport { RenderImage } from \"./RenderImage\";\r\nimport { AssetDisplay } from \"../Asset/AssetDisplay\";\r\nimport { PrintPreview } from \"./PrintPreview\";\r\nimport { AssetSelectionForPrinting } from \"./AssetSelectionForPrinting\";\r\n\r\nexport function CollectionPrinting(props: { assets: AssetDocument[] }) {\r\n  const [images, setImages] = useState([]);\r\n  const [assetsToPrint, setAssetsToPrint] = useState([]);\r\n\r\n  if (assetsToPrint.length === 0) {\r\n    return (\r\n      <AssetSelectionForPrinting\r\n        assets={props.assets}\r\n        setAssetsToPrint={setAssetsToPrint}\r\n      ></AssetSelectionForPrinting>\r\n    );\r\n  }\r\n\r\n  const startingIndex = images.length * 9;\r\n\r\n  if (startingIndex >= assetsToPrint.length) {\r\n    return <PrintPreview images={images}></PrintPreview>;\r\n  }\r\n\r\n  const assetsToRender = assetsToPrint.slice(startingIndex, startingIndex + 9);\r\n  return (\r\n    <RenderImage\r\n      handleImage={(dataUrl) => {\r\n        setImages([...images, dataUrl]);\r\n      }}\r\n    >\r\n      <div className=\"sheet-of-assets\">\r\n        {assetsToRender.map((asset, index) => {\r\n          return (\r\n            <AssetDisplay key={index} asset={asset} scale=\"full\"></AssetDisplay>\r\n          );\r\n        })}\r\n      </div>\r\n    </RenderImage>\r\n  );\r\n}\r\n","import React, { ReactNode, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { AssetDocument } from \"./Asset/asset\";\r\n\r\ninterface AssetPopulaterProps {\r\n  asset: AssetDocument;\r\n  setCurrentAssetById(index);\r\n  children: ReactNode;\r\n}\r\nexport function AssetPopulater(props: AssetPopulaterProps) {\r\n  const params: any = useParams();\r\n  useEffect(() => {\r\n    if (!props.asset) {\r\n      props.setCurrentAssetById(params.assetId);\r\n    }\r\n  });\r\n\r\n  if (!props.asset) {\r\n    return null;\r\n  }\r\n  return <>{props.children}</>;\r\n}\r\n","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { CreateAsset } from \"../App\";\r\n\r\ntype Props = {\r\n  createAsset: CreateAsset;\r\n};\r\n\r\nexport function AssetImport(props: Props) {\r\n  const history = useHistory();\r\n\r\n  function handleAssetJsonImport() {\r\n    //todo: move away from queryselecting and use a more idiomatic React appoach\r\n    const iconFileInput = document.querySelector(\r\n      \"#asset-fileselect\"\r\n    ) as HTMLInputElement;\r\n\r\n    const file = iconFileInput.files[0];\r\n    if (file) {\r\n      var fileReader = new FileReader();\r\n      fileReader.onload = (e) => {\r\n        var json = e.target.result as string;\r\n        let importedAsset;\r\n        try {\r\n          importedAsset = JSON.parse(json);\r\n          props.createAsset(importedAsset, (id) => {\r\n            history.push(`/assets/${id}/edit`);\r\n          });\r\n          console.log(\"asset\", importedAsset);\r\n        } catch (e) {\r\n          alert(\"Error parsing JSON from file\" + file.name + \": \" + e);\r\n        }\r\n      };\r\n      fileReader.readAsText(file);\r\n    } else {\r\n      alert(\"Please select a file.\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"asset-import\">\r\n      <div className=\"vertical\">\r\n        <label htmlFor=\"asset-fileselect\">Upload Asset in JSON format:</label>\r\n        <input type=\"file\" accept=\".json\" id=\"asset-fileselect\" />\r\n        <button onClick={handleAssetJsonImport}>IMPORT</button>\r\n        <button onClick={() => history.push(\"/\")}>BACK</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport { cloneDeep } from \"lodash\";\r\n\r\nimport { AssetEditor } from \"./AssetEditor/AssetEditor\";\r\nimport { AssetDocument, UnspecifiedAssetDocument } from \"./Asset/asset\";\r\nimport { transformToLatest } from \"./Asset/assetTransformation\";\r\nimport { calculateScale, AssetScale } from \"./Asset/assetScaling\";\r\nimport { ExportAsset } from \"./Export/ExportAssetImage\";\r\nimport AssetSelection from \"./Collections/AssetSelection\";\r\nimport AssetCreation from \"./Collections/AssetCreation\";\r\nimport { CollectionDocument, createCollection } from \"./Collections/collection\";\r\nimport { putLoneAssetIntoCollection } from \"./Collections/collectionTransformation\";\r\nimport { Footer } from \"./Footer\";\r\nimport { CollectionPrinting } from \"./Export/CollectionPrinting\";\r\nimport { AssetPopulater } from \"./AssetPopulater\";\r\nimport { AssetImport } from \"./Collections/AssetImport\";\r\n\r\nexport function sussCurrentCollection(maybeCollections, maybeAsset) {\r\n  let startingCollection = null;\r\n  if (maybeCollections && maybeCollections.length > 0) {\r\n    startingCollection = maybeCollections[0];\r\n  } else {\r\n    if (maybeAsset) {\r\n      startingCollection = putLoneAssetIntoCollection(maybeAsset);\r\n    } else {\r\n      startingCollection = createCollection();\r\n    }\r\n  }\r\n  return startingCollection;\r\n}\r\n\r\nexport type CreateAsset = (\r\n  asset: UnspecifiedAssetDocument,\r\n  goToNextScreen: (id: string | number) => void\r\n) => void;\r\n\r\nexport default function App() {\r\n  let maybeCollections = maybeGetLocalCollections();\r\n  let maybeAsset = maybeGetLocalAsset();\r\n  let startingCollection = sussCurrentCollection(maybeCollections, maybeAsset);\r\n  let startingScale = calculateScale();\r\n\r\n  const [currentAsset, setCurrentAsset]: [\r\n    AssetDocument,\r\n    React.Dispatch<AssetDocument>\r\n  ] = useState(null);\r\n\r\n  const [currentAssetIndex, setCurrentAssetIndex]: [\r\n    number,\r\n    React.Dispatch<number>\r\n  ] = useState(null);\r\n\r\n  const [currentCollection, setCurrentCollection]: [\r\n    CollectionDocument,\r\n    React.Dispatch<CollectionDocument>\r\n  ] = useState(startingCollection);\r\n\r\n  const [assetScale, setAssetScale]: [\r\n    AssetScale,\r\n    React.Dispatch<AssetScale>\r\n  ] = useState(startingScale);\r\n\r\n  function maybeGetLocalCollections(): CollectionDocument[] {\r\n    const maybeCollections = window.localStorage.getItem(\"collections\");\r\n    if (maybeCollections) {\r\n      try {\r\n        return JSON.parse(maybeCollections);\r\n      } catch (error) {\r\n        window.alert(\"Error parsing local collections: \" + error.toString());\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  function maybeGetLocalAsset(): UnspecifiedAssetDocument {\r\n    const maybeAsset = window.localStorage.getItem(\"currentAsset\");\r\n    if (maybeAsset) {\r\n      try {\r\n        return JSON.parse(maybeAsset);\r\n      } catch (error) {\r\n        window.alert(\"Error parsing local asset: \" + error.toString());\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  function handleAssetScaleChange(newScale) {\r\n    setAssetScale(newScale);\r\n  }\r\n\r\n  function persistCollection(collection) {\r\n    window.localStorage.setItem(\"collections\", JSON.stringify([collection]));\r\n  }\r\n\r\n  function updateAsset(asset) {\r\n    currentCollection.assets[currentAssetIndex] = asset;\r\n    persistCollection(currentCollection);\r\n    setCurrentAsset(cloneDeep(transformToLatest(asset)));\r\n  }\r\n\r\n  function askToDelete(history) {\r\n    if (window.confirm(\"Delete this asset?\")) {\r\n      currentCollection.assets.splice(currentAssetIndex, 1);\r\n      persistCollection(currentCollection);\r\n      setCurrentCollection(currentCollection);\r\n      setCurrentAsset(null); // important for not overwriting an asset when pressing back & editing a deleted one\r\n      history.push(\"/\");\r\n    }\r\n  }\r\n\r\n  const createAsset: CreateAsset = (asset, goToNextScreen) => {\r\n    const transformedAsset = transformToLatest(asset);\r\n    const index = currentCollection.assets.push(transformedAsset) - 1;\r\n    window.localStorage.setItem(\r\n      \"collections\",\r\n      JSON.stringify([currentCollection])\r\n    );\r\n    setCurrentAsset(transformedAsset);\r\n    setCurrentAssetIndex(index);\r\n    setCurrentCollection(currentCollection);\r\n    goToNextScreen(index);\r\n  };\r\n\r\n  function setCurrentAssetById(index) {\r\n    setCurrentAsset(currentCollection.assets[index]);\r\n    setCurrentAssetIndex(index);\r\n  }\r\n\r\n  return (\r\n    <Router basename=\"/ironsworn-asset-workbench\">\r\n      <div className=\"app\">\r\n        <header className=\"app-header\">\r\n          <h2>\r\n            Asset Workbench <span className=\"app-version\">v0.18.4</span>\r\n          </h2>\r\n        </header>\r\n\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <AssetSelection\r\n              assets={currentCollection.assets}\r\n              setCurrentAsset={setCurrentAsset}\r\n              setCurrentAssetIndex={setCurrentAssetIndex}\r\n            ></AssetSelection>\r\n          </Route>\r\n\r\n          <Route path=\"/assets/new\">\r\n            <AssetCreation createAsset={createAsset}></AssetCreation>\r\n          </Route>\r\n\r\n          <Route path=\"/assets/import\">\r\n            <AssetImport createAsset={createAsset}></AssetImport>\r\n          </Route>\r\n\r\n          <Route path=\"/assets/:assetId/preview\">\r\n            <AssetPopulater\r\n              asset={currentAsset}\r\n              setCurrentAssetById={setCurrentAssetById}\r\n            >\r\n              <ExportAsset\r\n                asset={currentAsset}\r\n                scale={assetScale}\r\n                index={currentAssetIndex}\r\n                preview={true}\r\n              ></ExportAsset>\r\n            </AssetPopulater>\r\n          </Route>\r\n\r\n          <Route path=\"/assets/:assetId/download\">\r\n            <AssetPopulater\r\n              asset={currentAsset}\r\n              setCurrentAssetById={setCurrentAssetById}\r\n            >\r\n              <ExportAsset\r\n                asset={currentAsset}\r\n                scale={assetScale}\r\n                index={currentAssetIndex}\r\n                preview={false}\r\n              ></ExportAsset>\r\n            </AssetPopulater>\r\n          </Route>\r\n\r\n          <Route path=\"/assets/:assetId/edit\">\r\n            <AssetPopulater\r\n              asset={currentAsset}\r\n              setCurrentAssetById={setCurrentAssetById}\r\n            >\r\n              <div className=\"container\">\r\n                <AssetEditor\r\n                  currentAsset={currentAsset}\r\n                  currentAssetId={currentAssetIndex}\r\n                  updateAsset={updateAsset}\r\n                  askToDelete={askToDelete}\r\n                  assetScale={assetScale}\r\n                  handleAssetScaleChange={handleAssetScaleChange}\r\n                ></AssetEditor>\r\n              </div>\r\n            </AssetPopulater>\r\n          </Route>\r\n\r\n          <Route path=\"/collections/print\">\r\n            <CollectionPrinting\r\n              assets={currentCollection.assets}\r\n            ></CollectionPrinting>\r\n          </Route>\r\n        </Switch>\r\n\r\n        <Footer></Footer>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n","import { CollectionDocument } from \"./collection\";\r\nimport { transformToLatest } from \"../Asset/assetTransformation\";\r\nimport { UnspecifiedAssetDocument } from \"../Asset/asset\";\r\n\r\nexport function putLoneAssetIntoCollection(\r\n  asset: UnspecifiedAssetDocument\r\n): CollectionDocument {\r\n  return {\r\n    name: \"Default Collection\",\r\n    assets: [transformToLatest(asset)],\r\n  };\r\n}\r\n","import { AssetDocument } from \"../Asset/asset\";\r\n\r\nexport type CollectionDocument = {\r\n  name: string;\r\n  assets: AssetDocument[];\r\n};\r\n\r\nexport function createCollection(\r\n  name = \"Default Collection\"\r\n): CollectionDocument {\r\n  return {\r\n    name: name,\r\n    assets: [],\r\n  };\r\n}\r\n","import \"paper-css/paper.css\";\r\nimport \"./index.scss\";\r\nimport \"./Asset/asset.css\";\r\nimport \"./Export/print.css\";\r\nimport App from \"./App\";\r\nimport ReactDOM from \"react-dom\";\r\nimport React from \"react\";\r\n\r\nReactDOM.render(<App></App>, document.querySelector(\".app-container\"));\r\n"],"sourceRoot":""}